ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.CapSense_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_SsCalcLfsrSize, %function
  25              	CapSense_SsCalcLfsrSize:
  26              	.LFB20:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 5.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v5.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (0u != CapSense_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDSetupWidgetExt(), CapSense_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_I_REP
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 369:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 9


 430:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 431:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 477:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 10


 487:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 530:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 531:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 534:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 11


 544:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE != CapSense_USES_MANY_SENSE_MODES)
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for CSD scanning */
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDInitialize();
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for CSX scanning */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXInitialize();
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ISX scanning */
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXInitialize();
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 582:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 585:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 586:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 587:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 588:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 589:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 590:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 592:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 593:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 12


 601:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 645:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 646:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 647:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 648:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 649:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx signal is routed to the sensor
 650:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 651:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 652:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 653:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 654:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 655:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 656:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 13


 658:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 676:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 677:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 678:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 679:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 682:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 687:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 691:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 696:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 714:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 14


 715:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 725:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 734:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 735:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 738:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 740:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 742:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 744:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 747:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 770:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 15


 772:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 773:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR);
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 775:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 777:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 778:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 779:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)))
 780:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 781:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 782:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 783:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 784:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 785:Generated_Source\PSoC4/CapSense_Sensing.c ****                    ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 786:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN))) */
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 788:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 789:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 791:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 792:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 793:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 794:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
 795:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 796:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 800:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 801:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 802:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 803:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 804:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)) */
 805:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 810:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 811:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 812:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 813:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 814:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 815:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 816:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 817:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 818:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 819:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 820:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 821:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 822:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 823:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
 824:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 825:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 827:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 828:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 16


 829:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 830:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 832:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 833:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 834:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 835:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 837:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 838:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
 839:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 842:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
 849:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 864:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* CapSense_USES_PORT_3 */
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 880:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
 881:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 883:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 884:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 885:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanned.
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 17


 886:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 887:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 889:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 890:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 891:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSD mode.
 892:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 895:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 896:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSX mode.
 897:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 898:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
 899:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
 901:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
 902:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
 903:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
 904:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
 905:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 906:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 907:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
 908:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 910:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 935:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 936:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 937:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 18


 943:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 959:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
 966:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 978:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetIOsInDefaultState
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 988:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 989:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
 990:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 992:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 993:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
 995:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 996:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 997:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
 998:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 999:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 19


1000:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1001:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1002:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1003:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1004:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1005:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1006:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetIOsInDefaultState(void)
1007:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1010:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 regValue;
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 1. Disconnect HSIOM.
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 2. Set strong DM.
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 3. Set pin state to logic 0.
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1023:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1032:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1036:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 20


1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1066:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1078:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1082:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1090:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_EN) && \
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&  \
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION))
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsSetIOsInDefaultState();
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) && \
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE != CapSense_CSD_SHIELD_EN) &&  \
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION)) */
1098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1103:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1107:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1108:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1109:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1110:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1111:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1112:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1113:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 21


1114:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1115:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1116:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1117:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1119:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1120:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1121:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1122:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1123:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1124:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1125:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1133:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1139:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1141:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1143:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1144:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1146:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1148:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1150:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1151:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1152:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1155:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1156:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1157:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1158:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1160:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1162:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1164:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1165:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1169:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 22


1171:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1174:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1179:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1183:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1184:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1185:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1186:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1187:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1188:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1189:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1190:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1191:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1192:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1193:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1194:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1195:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1196:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1197:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1198:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1200:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1201:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1207:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1210:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1211:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1212:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1215:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1219:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1224:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1225:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1226:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1227:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 23


1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1232:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1233:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1237:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1238:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1242:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1243:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1244:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1246:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1248:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1249:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1250:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1252:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1254:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1255:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1256:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1257:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1259:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1260:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1261:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1262:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1263:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1265:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1271:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1273:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1274:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1275:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1277:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1281:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1282:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1283:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 24


1285:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1289:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1292:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1293:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1294:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1296:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1297:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1299:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1300:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1301:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1303:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1304:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1305:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1307:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1308:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1309:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1310:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1311:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1312:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1314:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1315:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1316:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1320:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1325:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1326:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1329:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1331:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 25


1342:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1347:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1356:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1357:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1359:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1360:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1361:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1364:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1365:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1366:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1367:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1368:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1369:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1370:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1371:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1372:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1373:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1378:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1379:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1381:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1382:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1387:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1388:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1389:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1390:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1391:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1392:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1393:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1396:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1397:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1398:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 26


1399:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1400:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1401:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1402:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1403:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1404:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1405:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1406:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1407:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1408:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1409:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1410:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1411:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1412:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1413:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1414:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1415:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1416:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1417:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1418:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1424:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1437:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1443:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1445:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1450:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 27


1456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1457:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1458:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1459:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1463:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1468:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1473:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1474:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1475:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1476:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1477:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1479:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1481:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1482:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1485:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1486:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1492:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1496:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****              /* Update CRC */
1498:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN) */
1501:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1503:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1505:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1506:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1512:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 28


1513:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1518:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1526:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1531:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1539:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1547:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1548:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1549:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1551:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1552:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1557:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1558:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
1559:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1561:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense operation.
1563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1564:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1568:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 29


1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1572:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1575:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1576:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1577:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
1578:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1581:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cp = 0uL;
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cpRow = 0uL;
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1586:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cpWidget[CapSense_TOTAL_WIDGETS];
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1590:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Configure common config variables */
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
1595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk);
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif ((CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) && (CapSense_DISABLE == CY_PSOC4_400
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1610:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Initialize CSD mode */
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDInitialize();
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
1616:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sensor Cp
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sense clock for all the widgets */
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 30


1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1630:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1632:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = CapSense_CALIBRATION_RESOLUTION;
1635:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1645:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
1647:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_LEVEL);
1650:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1651:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1657:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get IDAC */
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1660:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calculate achived calibration level */
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcountRow
1663:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Find correct sense clock value */
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1667:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cpRow)
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1672:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1673:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #if (CapSense_ENABLE != CapSense_CSDV2)
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 31


1684:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1686:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << CapS
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 {
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_dsRam.modCsdClk;
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 }
1690:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #else
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #endif
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1694:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1696:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calculate achived calibration level */
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcount * CapSense
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1706:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cp)
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1724:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE != CapSense_CSDV2)
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_FLIP_F
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****                              ptrWdgt->snsClk = CapSense_dsRam.modCsdClk;
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 32


1741:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (cpRow > cp)
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1746:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1749:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1750:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1751:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1752:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_EN)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Non-CSD widget */
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1764:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune resolution for all the widgets */
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1773:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1776:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1779:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set parasitic capacitance for columns */
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1782:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1783:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1785:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1788:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1789:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1790:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1794:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1796:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Set parasitic capacitance for rows */
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 33


1798:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get IDAC */
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1803:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1805:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get finger capacitance */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Init pointer to sigPFC */
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1811:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find resolution */
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1823:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1824:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sensitivity for all the widgets */
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1830:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1832:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1834:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1836:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1837:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_DsUpdateWidgetCrc(wdgtIndex);
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
1841:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1846:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
1847:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1848:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 34


1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1856:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1863:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1865:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1868:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1873:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
1874:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1876:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1881:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
1887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1900:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 35


1912:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
1913:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
1918:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1920:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
1926:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1945:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1952:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
1955:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1956:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
1957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1958:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1959:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
1962:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 36


1969:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
1970:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
1976:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1979:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
1982:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1985:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1989:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2004:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2006:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2011:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2013:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2014:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2017:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2019:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2021:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2024:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2025:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 37


2026:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2045:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2051:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2064:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2065:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2066:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2072:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2077:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 38


2083:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2086:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2091:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2098:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2102:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2104:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2105:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2122:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2130:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2137:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2138:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 39


2140:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2143:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2144:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2157:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2160:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2163:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2169:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2172:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2173:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2174:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2177:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2178:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2179:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2180:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2181:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2182:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2183:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2184:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2185:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2186:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2187:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2188:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2195:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2196:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 40


2197:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2215:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2216:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2218:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2222:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2223:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2230:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2236:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2244:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 41


2254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2259:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2262:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2280:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2281:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2283:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2289:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2294:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 42


2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2313:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2318:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2321:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2334:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2339:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2345:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2348:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2355:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 43


2368:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2370:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2372:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2373:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2374:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2377:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2381:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2382:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2391:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 2403 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2404:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2407 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 44


  45              		.loc 1 2407 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2408:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2409 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2408:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2408 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2412:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2413 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2413 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2415 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2414 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2419 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2419 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2421 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 45


  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2420 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
  92              		.loc 1 2425 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2425 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2427 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2426 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2432:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2433:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
 106              		.loc 1 2433 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 110              		.loc 1 2411 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 114              		.loc 1 2417 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 118              		.loc 1 2423 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2433 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 46


 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
 128              	.L11:
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 129              		.loc 1 2429 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 133              		.loc 1 2437 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE20:
 146              		.size	CapSense_SsCalcLfsrSize, .-CapSense_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CapSense_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_SsCalcLfsrScale, %function
 153              	CapSense_SsCalcLfsrScale:
 154              	.LFB21:
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2440:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2442:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2444:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2446:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2447:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2448:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2449:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2450:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2451:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2452:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2453:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2454:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2455:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2456:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2457:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2458:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2459:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2460:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 47


2461:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2462:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2463:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2464:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2465:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2466:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2467:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2469:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2472:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2473:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2474:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2475:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2476:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2477:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2478:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2479:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 155              		.loc 1 2479 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2485 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2489 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2498:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 48


2500:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2507:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2509 0
 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2513:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2517 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2517 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2520 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2521 0
 194 0024 0023     		movs	r3, #0
2522:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2523 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2525 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2526 0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 49


 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
 205              	.L18:
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 206              		.loc 1 2523 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2528:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2529 0
 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2531 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2535:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2536:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2536 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2537:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2539 0
 228 003e D8B2     		uxtb	r0, r3
2540:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 229              		.loc 1 2540 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE21:
 234              		.size	CapSense_SsCalcLfsrScale, .-CapSense_SsCalcLfsrScale
 235 0042 C046     		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
 236              		.align	2
 237              		.code	16
 238              		.thumb_func
 239              		.type	CapSense_SsCSDDisableMode, %function
 240              	CapSense_SsCSDDisableMode:
 241              	.LFB7:
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 242              		.loc 1 769 0
 243              		.cfi_startproc
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 50


 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 10B5     		push	{r4, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 4, -8
 249              		.cfi_offset 14, -4
 773:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 250              		.loc 1 773 0
 251 0002 064A     		ldr	r2, .L24
 252 0004 1168     		ldr	r1, [r2]
 253              	.LVL25:
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 254              		.loc 1 774 0
 255 0006 064B     		ldr	r3, .L24+4
 256 0008 0B40     		ands	r3, r1
 257              	.LVL26:
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 258              		.loc 1 775 0
 259 000a 1360     		str	r3, [r2]
 781:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 260              		.loc 1 781 0
 261 000c 054A     		ldr	r2, .L24+8
 262 000e 1368     		ldr	r3, [r2]
 263              	.LVL27:
 782:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 264              		.loc 1 782 0
 265 0010 0121     		movs	r1, #1
 266 0012 8B43     		bics	r3, r1
 267              	.LVL28:
 783:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 268              		.loc 1 783 0
 269 0014 1360     		str	r3, [r2]
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 270              		.loc 1 789 0
 271 0016 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 272              	.LVL29:
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 273              		.loc 1 805 0
 274              		@ sp needed
 275 001a 10BD     		pop	{r4, pc}
 276              	.L25:
 277              		.align	2
 278              	.L24:
 279 001c 00040240 		.word	1073873920
 280 0020 FFF0FFFF 		.word	-3841
 281 0024 A8020B40 		.word	1074463400
 282              		.cfi_endproc
 283              	.LFE7:
 284              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 285              		.section	.text.CapSense_IsBusy,"ax",%progbits
 286              		.align	2
 287              		.global	CapSense_IsBusy
 288              		.code	16
 289              		.thumb_func
 290              		.type	CapSense_IsBusy, %function
 291              	CapSense_IsBusy:
 292              	.LFB1:
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 51


 234:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 293              		.loc 1 234 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 298              		.loc 1 235 0
 299 0000 024B     		ldr	r3, .L27
 300 0002 DB68     		ldr	r3, [r3, #12]
 301 0004 8020     		movs	r0, #128
 302 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 303              		.loc 1 236 0
 304              		@ sp needed
 305 0008 7047     		bx	lr
 306              	.L28:
 307 000a C046     		.align	2
 308              	.L27:
 309 000c 00000000 		.word	CapSense_dsRam
 310              		.cfi_endproc
 311              	.LFE1:
 312              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 313              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 314              		.align	2
 315              		.global	CapSense_SetupWidget
 316              		.code	16
 317              		.thumb_func
 318              		.type	CapSense_SetupWidget, %function
 319              	CapSense_SetupWidget:
 320              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 321              		.loc 1 286 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              	.LVL30:
 326 0000 10B5     		push	{r4, lr}
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 4, -8
 329              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 330              		.loc 1 289 0
 331 0002 0E4B     		ldr	r3, .L35
 332 0004 DB68     		ldr	r3, [r3, #12]
 333 0006 DB03     		lsls	r3, r3, #15
 334 0008 0DD4     		bmi	.L32
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 335              		.loc 1 299 0
 336 000a 0328     		cmp	r0, #3
 337 000c 0DD8     		bhi	.L33
 300:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 338              		.loc 1 300 0 discriminator 1
 339 000e 4309     		lsrs	r3, r0, #5
 340 0010 0433     		adds	r3, r3, #4
 341 0012 9B00     		lsls	r3, r3, #2
 342 0014 094A     		ldr	r2, .L35
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 52


 343 0016 9B58     		ldr	r3, [r3, r2]
 344 0018 1F22     		movs	r2, #31
 345 001a 0240     		ands	r2, r0
 346 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 347              		.loc 1 299 0 discriminator 1
 348 001e DB07     		lsls	r3, r3, #31
 349 0020 05D4     		bmi	.L34
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 350              		.loc 1 307 0
 351 0022 0124     		movs	r4, #1
 352 0024 04E0     		b	.L30
 353              	.L32:
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 354              		.loc 1 292 0
 355 0026 1124     		movs	r4, #17
 356 0028 02E0     		b	.L30
 357              	.L33:
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 358              		.loc 1 307 0
 359 002a 0124     		movs	r4, #1
 360 002c 00E0     		b	.L30
 361              	.L34:
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 362              		.loc 1 303 0
 363 002e 0024     		movs	r4, #0
 364              	.L30:
 365              	.LVL31:
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 366              		.loc 1 314 0
 367 0030 002C     		cmp	r4, #0
 368 0032 01D1     		bne	.L31
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 369              		.loc 1 327 0
 370 0034 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 371              	.LVL32:
 372              	.L31:
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 373              		.loc 1 343 0
 374 0038 2000     		movs	r0, r4
 375              		@ sp needed
 376              	.LVL33:
 377 003a 10BD     		pop	{r4, pc}
 378              	.L36:
 379              		.align	2
 380              	.L35:
 381 003c 00000000 		.word	CapSense_dsRam
 382              		.cfi_endproc
 383              	.LFE2:
 384              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 385              		.section	.text.CapSense_Scan,"ax",%progbits
 386              		.align	2
 387              		.global	CapSense_Scan
 388              		.code	16
 389              		.thumb_func
 390              		.type	CapSense_Scan, %function
 391              	CapSense_Scan:
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 53


 392              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 393              		.loc 1 369 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397 0000 10B5     		push	{r4, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 4, -8
 400              		.cfi_offset 14, -4
 401              	.LVL34:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 402              		.loc 1 372 0
 403 0002 084B     		ldr	r3, .L43
 404 0004 DB68     		ldr	r3, [r3, #12]
 405 0006 DB03     		lsls	r3, r3, #15
 406 0008 07D4     		bmi	.L40
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 407              		.loc 1 379 0
 408 000a 074B     		ldr	r3, .L43+4
 409 000c 1B78     		ldrb	r3, [r3]
 410 000e 012B     		cmp	r3, #1
 411 0010 05D1     		bne	.L42
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 412              		.loc 1 388 0
 413 0012 FFF7FEFF 		bl	CapSense_CSDScan
 414              	.LVL35:
 370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 415              		.loc 1 370 0
 416 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 417              		.loc 1 389 0
 418 0018 03E0     		b	.L38
 419              	.L40:
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 420              		.loc 1 375 0
 421 001a 1120     		movs	r0, #17
 422 001c 01E0     		b	.L38
 423              	.L42:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 424              		.loc 1 397 0
 425 001e 0120     		movs	r0, #1
 426 0020 4042     		rsbs	r0, r0, #0
 427              	.L38:
 428              	.LVL36:
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 429              		.loc 1 402 0
 430              		@ sp needed
 431 0022 10BD     		pop	{r4, pc}
 432              	.L44:
 433              		.align	2
 434              	.L43:
 435 0024 00000000 		.word	CapSense_dsRam
 436 0028 00000000 		.word	.LANCHOR0
 437              		.cfi_endproc
 438              	.LFE3:
 439              		.size	CapSense_Scan, .-CapSense_Scan
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 54


 440              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 441              		.align	2
 442              		.global	CapSense_ScanAllWidgets
 443              		.code	16
 444              		.thumb_func
 445              		.type	CapSense_ScanAllWidgets, %function
 446              	CapSense_ScanAllWidgets:
 447              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 448              		.loc 1 431 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452 0000 10B5     		push	{r4, lr}
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 4, -8
 455              		.cfi_offset 14, -4
 456              	.LVL37:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 457              		.loc 1 436 0
 458 0002 0F4B     		ldr	r3, .L53
 459 0004 DB68     		ldr	r3, [r3, #12]
 460 0006 1B06     		lsls	r3, r3, #24
 461 0008 18D4     		bmi	.L52
 462 000a 0024     		movs	r4, #0
 463 000c 0120     		movs	r0, #1
 464 000e 4042     		rsbs	r0, r0, #0
 465 0010 11E0     		b	.L47
 466              	.LVL38:
 467              	.L51:
 452:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 468              		.loc 1 452 0
 469 0012 2000     		movs	r0, r4
 470              	.LVL39:
 471 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 472              	.LVL40:
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 473              		.loc 1 454 0
 474 0018 0028     		cmp	r0, #0
 475 001a 0BD1     		bne	.L48
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 476              		.loc 1 458 0
 477 001c 022C     		cmp	r4, #2
 478 001e 03D8     		bhi	.L49
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 479              		.loc 1 461 0
 480 0020 0122     		movs	r2, #1
 481 0022 084B     		ldr	r3, .L53+4
 482 0024 5A70     		strb	r2, [r3, #1]
 483 0026 02E0     		b	.L50
 484              	.L49:
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 485              		.loc 1 466 0
 486 0028 0022     		movs	r2, #0
 487 002a 064B     		ldr	r3, .L53+4
 488 002c 5A70     		strb	r2, [r3, #1]
 489              	.L50:
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 55


 476:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 490              		.loc 1 476 0
 491 002e FFF7FEFF 		bl	CapSense_Scan
 492              	.LVL41:
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 493              		.loc 1 478 0
 494 0032 04E0     		b	.L46
 495              	.L48:
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 496              		.loc 1 449 0
 497 0034 0134     		adds	r4, r4, #1
 498              	.LVL42:
 499              	.L47:
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 500              		.loc 1 447 0 discriminator 1
 501 0036 032C     		cmp	r4, #3
 502 0038 EBD9     		bls	.L51
 503 003a 00E0     		b	.L46
 504              	.LVL43:
 505              	.L52:
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 506              		.loc 1 439 0
 507 003c 1120     		movs	r0, #17
 508              	.LVL44:
 509              	.L46:
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 510              		.loc 1 484 0
 511              		@ sp needed
 512 003e 10BD     		pop	{r4, pc}
 513              	.L54:
 514              		.align	2
 515              	.L53:
 516 0040 00000000 		.word	CapSense_dsRam
 517 0044 00000000 		.word	.LANCHOR0
 518              		.cfi_endproc
 519              	.LFE4:
 520              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 521              		.section	.text.CapSense_SetPinState,"ax",%progbits
 522              		.align	2
 523              		.global	CapSense_SetPinState
 524              		.code	16
 525              		.thumb_func
 526              		.type	CapSense_SetPinState, %function
 527              	CapSense_SetPinState:
 528              	.LFB6:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 529              		.loc 1 656 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              	.LVL45:
 534 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 535              		.cfi_def_cfa_offset 24
 536              		.cfi_offset 3, -24
 537              		.cfi_offset 4, -20
 538              		.cfi_offset 5, -16
 539              		.cfi_offset 6, -12
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 56


 540              		.cfi_offset 7, -8
 541              		.cfi_offset 14, -4
 542 0002 1600     		movs	r6, r2
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 543              		.loc 1 681 0
 544 0004 C300     		lsls	r3, r0, #3
 545 0006 181A     		subs	r0, r3, r0
 546              	.LVL46:
 547 0008 8300     		lsls	r3, r0, #2
 548 000a 244A     		ldr	r2, .L62
 549              	.LVL47:
 550 000c 9C58     		ldr	r4, [r3, r2]
 551 000e CB00     		lsls	r3, r1, #3
 552 0010 591A     		subs	r1, r3, r1
 553              	.LVL48:
 554 0012 8B00     		lsls	r3, r1, #2
 555 0014 E418     		adds	r4, r4, r3
 556              	.LVL49:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 557              		.loc 1 686 0
 558 0016 0025     		movs	r5, #0
 559 0018 3CE0     		b	.L56
 560              	.LVL50:
 561              	.L61:
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 562              		.loc 1 689 0
 563 001a FFF7FEFF 		bl	CyEnterCriticalSection
 564              	.LVL51:
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 565              		.loc 1 690 0
 566 001e 2168     		ldr	r1, [r4]
 567 0020 0B68     		ldr	r3, [r1]
 568 0022 277E     		ldrb	r7, [r4, #24]
 569 0024 0F22     		movs	r2, #15
 570 0026 BA40     		lsls	r2, r2, r7
 571 0028 9343     		bics	r3, r2
 572 002a 0B60     		str	r3, [r1]
 691:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 573              		.loc 1 691 0
 574 002c 6168     		ldr	r1, [r4, #4]
 575 002e 0B68     		ldr	r3, [r1]
 576 0030 A77E     		ldrb	r7, [r4, #26]
 577 0032 0722     		movs	r2, #7
 578 0034 BA40     		lsls	r2, r2, r7
 579 0036 9343     		bics	r3, r2
 580 0038 0B60     		str	r3, [r1]
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 581              		.loc 1 692 0
 582 003a FFF7FEFF 		bl	CyExitCriticalSection
 583              	.LVL52:
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 584              		.loc 1 694 0
 585 003e 012E     		cmp	r6, #1
 586 0040 17D0     		beq	.L58
 587 0042 002E     		cmp	r6, #0
 588 0044 02D0     		beq	.L59
 589 0046 032E     		cmp	r6, #3
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 57


 590 0048 1FD0     		beq	.L60
 591 004a 21E0     		b	.L57
 592              	.L59:
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 593              		.loc 1 698 0
 594 004c FFF7FEFF 		bl	CyEnterCriticalSection
 595              	.LVL53:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 596              		.loc 1 699 0
 597 0050 6268     		ldr	r2, [r4, #4]
 598 0052 1168     		ldr	r1, [r2]
 599 0054 A77E     		ldrb	r7, [r4, #26]
 600 0056 0623     		movs	r3, #6
 601 0058 BB40     		lsls	r3, r3, r7
 602 005a 0B43     		orrs	r3, r1
 603 005c 1360     		str	r3, [r2]
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 604              		.loc 1 700 0
 605 005e A168     		ldr	r1, [r4, #8]
 606 0060 0B68     		ldr	r3, [r1]
 607 0062 677E     		ldrb	r7, [r4, #25]
 608 0064 0122     		movs	r2, #1
 609 0066 BA40     		lsls	r2, r2, r7
 610 0068 9343     		bics	r3, r2
 611 006a 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 612              		.loc 1 701 0
 613 006c FFF7FEFF 		bl	CyExitCriticalSection
 614              	.LVL54:
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 615              		.loc 1 702 0
 616 0070 0EE0     		b	.L57
 617              	.L58:
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 618              		.loc 1 705 0
 619 0072 FFF7FEFF 		bl	CyEnterCriticalSection
 620              	.LVL55:
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 621              		.loc 1 706 0
 622 0076 A168     		ldr	r1, [r4, #8]
 623 0078 0B68     		ldr	r3, [r1]
 624 007a 677E     		ldrb	r7, [r4, #25]
 625 007c 0122     		movs	r2, #1
 626 007e BA40     		lsls	r2, r2, r7
 627 0080 9343     		bics	r3, r2
 628 0082 0B60     		str	r3, [r1]
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 629              		.loc 1 707 0
 630 0084 FFF7FEFF 		bl	CyExitCriticalSection
 631              	.LVL56:
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 632              		.loc 1 708 0
 633 0088 02E0     		b	.L57
 634              	.L60:
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 635              		.loc 1 713 0
 636 008a 2000     		movs	r0, r4
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 58


 637 008c FFF7FEFF 		bl	CapSense_CSDConnectSns
 638              	.LVL57:
 639              	.L57:
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 640              		.loc 1 748 0 discriminator 2
 641 0090 1C34     		adds	r4, r4, #28
 642              	.LVL58:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 643              		.loc 1 686 0 discriminator 2
 644 0092 0135     		adds	r5, r5, #1
 645              	.LVL59:
 646              	.L56:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 647              		.loc 1 686 0 is_stmt 0 discriminator 1
 648 0094 002D     		cmp	r5, #0
 649 0096 C0D0     		beq	.L61
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 650              		.loc 1 750 0 is_stmt 1
 651              		@ sp needed
 652              	.LVL60:
 653              	.LVL61:
 654              	.LVL62:
 655 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 656              	.L63:
 657 009a C046     		.align	2
 658              	.L62:
 659 009c 00000000 		.word	CapSense_dsFlash
 660              		.cfi_endproc
 661              	.LFE6:
 662              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 663              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 664              		.align	2
 665              		.global	CapSense_SsSwitchSensingMode
 666              		.code	16
 667              		.thumb_func
 668              		.type	CapSense_SsSwitchSensingMode, %function
 669              	CapSense_SsSwitchSensingMode:
 670              	.LFB8:
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 671              		.loc 1 908 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675              	.LVL63:
 676 0000 10B5     		push	{r4, lr}
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 4, -8
 679              		.cfi_offset 14, -4
 680 0002 0400     		movs	r4, r0
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 681              		.loc 1 909 0
 682 0004 114B     		ldr	r3, .L69
 683 0006 1B78     		ldrb	r3, [r3]
 684 0008 8342     		cmp	r3, r0
 685 000a 1DD0     		beq	.L64
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 686              		.loc 1 912 0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 59


 687 000c 012B     		cmp	r3, #1
 688 000e 02D1     		bne	.L66
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 689              		.loc 1 915 0
 690 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 691              	.LVL64:
 692 0014 07E0     		b	.L67
 693              	.LVL65:
 694              	.L66:
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 695              		.loc 1 918 0
 696 0016 022B     		cmp	r3, #2
 697 0018 05D0     		beq	.L67
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 698              		.loc 1 924 0
 699 001a 042B     		cmp	r3, #4
 700 001c 03D0     		beq	.L67
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 701              		.loc 1 930 0
 702 001e 032B     		cmp	r3, #3
 703 0020 01D0     		beq	.L67
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 704              		.loc 1 940 0
 705 0022 FFF7FEFF 		bl	CapSense_AdcReleaseResources
 706              	.LVL66:
 707              	.L67:
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 708              		.loc 1 945 0
 709 0026 012C     		cmp	r4, #1
 710 0028 05D1     		bne	.L68
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 711              		.loc 1 949 0
 712 002a FFF7FEFF 		bl	CapSense_SsCSDInitialize
 713              	.LVL67:
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 714              		.loc 1 950 0
 715 002e 0122     		movs	r2, #1
 716 0030 064B     		ldr	r3, .L69
 717 0032 1A70     		strb	r2, [r3]
 718 0034 08E0     		b	.L64
 719              	.L68:
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 720              		.loc 1 953 0
 721 0036 022C     		cmp	r4, #2
 722 0038 06D0     		beq	.L64
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 723              		.loc 1 961 0
 724 003a 042C     		cmp	r4, #4
 725 003c 04D0     		beq	.L64
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 726              		.loc 1 969 0
 727 003e 032C     		cmp	r4, #3
 728 0040 02D0     		beq	.L64
 978:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 729              		.loc 1 978 0
 730 0042 0022     		movs	r2, #0
 731 0044 014B     		ldr	r3, .L69
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 60


 732 0046 1A70     		strb	r2, [r3]
 733              	.L64:
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 734              		.loc 1 981 0
 735              		@ sp needed
 736 0048 10BD     		pop	{r4, pc}
 737              	.L70:
 738 004a C046     		.align	2
 739              	.L69:
 740 004c 00000000 		.word	.LANCHOR0
 741              		.cfi_endproc
 742              	.LFE8:
 743              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 744              		.section	.text.CapSense_SsSetIOsInDefaultState,"ax",%progbits
 745              		.align	2
 746              		.global	CapSense_SsSetIOsInDefaultState
 747              		.code	16
 748              		.thumb_func
 749              		.type	CapSense_SsSetIOsInDefaultState, %function
 750              	CapSense_SsSetIOsInDefaultState:
 751              	.LFB9:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
 752              		.loc 1 1007 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756 0000 70B5     		push	{r4, r5, r6, lr}
 757              		.cfi_def_cfa_offset 16
 758              		.cfi_offset 4, -16
 759              		.cfi_offset 5, -12
 760              		.cfi_offset 6, -8
 761              		.cfi_offset 14, -4
 762              	.LVL68:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 763              		.loc 1 1013 0
 764 0002 0020     		movs	r0, #0
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
 765              		.loc 1 1008 0
 766 0004 0E4B     		ldr	r3, .L74
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 767              		.loc 1 1013 0
 768 0006 16E0     		b	.L72
 769              	.LVL69:
 770              	.L73:
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 771              		.loc 1 1020 0 discriminator 3
 772 0008 1968     		ldr	r1, [r3]
 773 000a 0A68     		ldr	r2, [r1]
 774              	.LVL70:
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 775              		.loc 1 1021 0 discriminator 3
 776 000c 1C69     		ldr	r4, [r3, #16]
 777 000e A243     		bics	r2, r4
 778              	.LVL71:
1022:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 779              		.loc 1 1022 0 discriminator 3
 780 0010 0A60     		str	r2, [r1]
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 61


1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
 781              		.loc 1 1024 0 discriminator 3
 782 0012 5C68     		ldr	r4, [r3, #4]
 783 0014 2268     		ldr	r2, [r4]
 784              	.LVL72:
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
 785              		.loc 1 1025 0 discriminator 3
 786 0016 9D7E     		ldrb	r5, [r3, #26]
 787 0018 0721     		movs	r1, #7
 788 001a A940     		lsls	r1, r1, r5
 789 001c 8A43     		bics	r2, r1
 790              	.LVL73:
 791 001e 1100     		movs	r1, r2
 792              	.LVL74:
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 793              		.loc 1 1026 0 discriminator 3
 794 0020 0622     		movs	r2, #6
 795 0022 AA40     		lsls	r2, r2, r5
 796 0024 0A43     		orrs	r2, r1
 797              	.LVL75:
1027:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 798              		.loc 1 1027 0 discriminator 3
 799 0026 2260     		str	r2, [r4]
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
 800              		.loc 1 1029 0 discriminator 3
 801 0028 9968     		ldr	r1, [r3, #8]
 802 002a 0A68     		ldr	r2, [r1]
 803              	.LVL76:
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 804              		.loc 1 1030 0 discriminator 3
 805 002c 5C69     		ldr	r4, [r3, #20]
 806 002e A243     		bics	r2, r4
 807              	.LVL77:
1031:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 808              		.loc 1 1031 0 discriminator 3
 809 0030 0A60     		str	r2, [r1]
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 810              		.loc 1 1034 0 discriminator 3
 811 0032 1C33     		adds	r3, r3, #28
 812              	.LVL78:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 813              		.loc 1 1013 0 discriminator 3
 814 0034 0130     		adds	r0, r0, #1
 815              	.LVL79:
 816              	.L72:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 817              		.loc 1 1013 0 is_stmt 0 discriminator 1
 818 0036 0328     		cmp	r0, #3
 819 0038 E6D9     		bls	.L73
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 820              		.loc 1 1038 0 is_stmt 1
 821 003a FFF7FEFF 		bl	CapSense_ClearAdcChannels
 822              	.LVL80:
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 823              		.loc 1 1040 0
 824              		@ sp needed
 825 003e 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 62


 826              	.L75:
 827              		.align	2
 828              	.L74:
 829 0040 00000000 		.word	CapSense_ioList
 830              		.cfi_endproc
 831              	.LFE9:
 832              		.size	CapSense_SsSetIOsInDefaultState, .-CapSense_SsSetIOsInDefaultState
 833              		.section	.text.CapSense_SsReleaseResources,"ax",%progbits
 834              		.align	2
 835              		.global	CapSense_SsReleaseResources
 836              		.code	16
 837              		.thumb_func
 838              		.type	CapSense_SsReleaseResources, %function
 839              	CapSense_SsReleaseResources:
 840              	.LFB10:
1065:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
 841              		.loc 1 1065 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845 0000 10B5     		push	{r4, lr}
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 4, -8
 848              		.cfi_offset 14, -4
 849              	.LVL81:
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 850              		.loc 1 1068 0
 851 0002 064B     		ldr	r3, .L79
 852 0004 DB68     		ldr	r3, [r3, #12]
 853 0006 1B06     		lsls	r3, r3, #24
 854 0008 06D4     		bmi	.L78
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 855              		.loc 1 1084 0
 856 000a FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 857              	.LVL82:
1103:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 858              		.loc 1 1103 0
 859 000e 0022     		movs	r2, #0
 860 0010 034B     		ldr	r3, .L79+4
 861 0012 1A70     		strb	r2, [r3]
1066:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 862              		.loc 1 1066 0
 863 0014 0020     		movs	r0, #0
 864 0016 00E0     		b	.L77
 865              	.L78:
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 866              		.loc 1 1071 0
 867 0018 1120     		movs	r0, #17
 868              	.L77:
 869              	.LVL83:
1107:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 870              		.loc 1 1107 0
 871              		@ sp needed
 872 001a 10BD     		pop	{r4, pc}
 873              	.L80:
 874              		.align	2
 875              	.L79:
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 63


 876 001c 00000000 		.word	CapSense_dsRam
 877 0020 00000000 		.word	.LANCHOR0
 878              		.cfi_endproc
 879              	.LFE10:
 880              		.size	CapSense_SsReleaseResources, .-CapSense_SsReleaseResources
 881              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 882              		.align	2
 883              		.global	CapSense_SsPostAllWidgetsScan
 884              		.code	16
 885              		.thumb_func
 886              		.type	CapSense_SsPostAllWidgetsScan, %function
 887              	CapSense_SsPostAllWidgetsScan:
 888              	.LFB11:
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 889              		.loc 1 1125 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893 0000 10B5     		push	{r4, lr}
 894              		.cfi_def_cfa_offset 8
 895              		.cfi_offset 4, -8
 896              		.cfi_offset 14, -4
 897              	.L86:
1136:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 898              		.loc 1 1136 0
 899 0002 1B4A     		ldr	r2, .L87
 900 0004 9378     		ldrb	r3, [r2, #2]
 901 0006 0133     		adds	r3, r3, #1
 902 0008 DBB2     		uxtb	r3, r3
 903 000a 9370     		strb	r3, [r2, #2]
1138:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 904              		.loc 1 1138 0
 905 000c 9078     		ldrb	r0, [r2, #2]
 906 000e C0B2     		uxtb	r0, r0
 907 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 908              	.LVL84:
 909 0014 041E     		subs	r4, r0, #0
 910              	.LVL85:
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 911              		.loc 1 1140 0
 912 0016 09D1     		bne	.L82
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 913              		.loc 1 1142 0
 914 0018 154B     		ldr	r3, .L87
 915 001a 9B78     		ldrb	r3, [r3, #2]
 916 001c 032B     		cmp	r3, #3
 917 001e 02D1     		bne	.L83
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 918              		.loc 1 1145 0
 919 0020 0022     		movs	r2, #0
 920 0022 134B     		ldr	r3, .L87
 921 0024 5A70     		strb	r2, [r3, #1]
 922              	.L83:
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 923              		.loc 1 1147 0
 924 0026 FFF7FEFF 		bl	CapSense_Scan
 925              	.LVL86:
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 64


 926 002a 1EE0     		b	.L84
 927              	.LVL87:
 928              	.L82:
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 929              		.loc 1 1149 0
 930 002c 104B     		ldr	r3, .L87
 931 002e 9B78     		ldrb	r3, [r3, #2]
 932 0030 032B     		cmp	r3, #3
 933 0032 11D1     		bne	.L85
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 934              		.loc 1 1163 0
 935 0034 0F4B     		ldr	r3, .L87+4
 936 0036 1A89     		ldrh	r2, [r3, #8]
 937 0038 0132     		adds	r2, r2, #1
 938 003a 1A81     		strh	r2, [r3, #8]
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 939              		.loc 1 1165 0
 940 003c DA68     		ldr	r2, [r3, #12]
 941 003e 8021     		movs	r1, #128
 942 0040 8A43     		bics	r2, r1
 943 0042 DA60     		str	r2, [r3, #12]
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 944              		.loc 1 1168 0
 945 0044 DA68     		ldr	r2, [r3, #12]
 946 0046 1202     		lsls	r2, r2, #8
 947 0048 120A     		lsrs	r2, r2, #8
 948 004a DA60     		str	r2, [r3, #12]
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 949              		.loc 1 1169 0
 950 004c DA68     		ldr	r2, [r3, #12]
 951 004e 0406     		lsls	r4, r0, #24
 952 0050 1443     		orrs	r4, r2
 953 0052 DC60     		str	r4, [r3, #12]
 954              	.LVL88:
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 955              		.loc 1 1172 0
 956 0054 0024     		movs	r4, #0
 957 0056 08E0     		b	.L84
 958              	.LVL89:
 959              	.L85:
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 960              		.loc 1 1177 0
 961 0058 064A     		ldr	r2, .L87+4
 962 005a D368     		ldr	r3, [r2, #12]
 963 005c 1B02     		lsls	r3, r3, #8
 964 005e 1B0A     		lsrs	r3, r3, #8
 965 0060 D360     		str	r3, [r2, #12]
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 966              		.loc 1 1178 0
 967 0062 D168     		ldr	r1, [r2, #12]
 968 0064 0306     		lsls	r3, r0, #24
 969 0066 0B43     		orrs	r3, r1
 970 0068 D360     		str	r3, [r2, #12]
 971              	.LVL90:
 972              	.L84:
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
 973              		.loc 1 1180 0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 65


 974 006a 002C     		cmp	r4, #0
 975 006c C9D1     		bne	.L86
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 976              		.loc 1 1182 0
 977              		@ sp needed
 978              	.LVL91:
 979 006e 10BD     		pop	{r4, pc}
 980              	.L88:
 981              		.align	2
 982              	.L87:
 983 0070 00000000 		.word	.LANCHOR0
 984 0074 00000000 		.word	CapSense_dsRam
 985              		.cfi_endproc
 986              	.LFE11:
 987              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 988              		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 989              		.align	2
 990              		.global	CapSense_SsIsrInitialize
 991              		.code	16
 992              		.thumb_func
 993              		.type	CapSense_SsIsrInitialize, %function
 994              	CapSense_SsIsrInitialize:
 995              	.LFB12:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 996              		.loc 1 1202 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              	.LVL92:
 1001 0000 10B5     		push	{r4, lr}
 1002              		.cfi_def_cfa_offset 8
 1003              		.cfi_offset 4, -8
 1004              		.cfi_offset 14, -4
1203:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1005              		.loc 1 1203 0
 1006 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 1007              	.LVL93:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1008              		.loc 1 1204 0
 1009              		@ sp needed
 1010 0006 10BD     		pop	{r4, pc}
 1011              		.cfi_endproc
 1012              	.LFE12:
 1013              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 1014              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 1015              		.align	2
 1016              		.global	CapSense_SsSetModClkClockDivider
 1017              		.code	16
 1018              		.thumb_func
 1019              		.type	CapSense_SsSetModClkClockDivider, %function
 1020              	CapSense_SsSetModClkClockDivider:
 1021              	.LFB13:
1225:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 1022              		.loc 1 1225 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 66


 1026              		@ link register save eliminated.
 1027              	.LVL94:
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 1028              		.loc 1 1228 0
 1029 0000 074A     		ldr	r2, .L92
 1030 0002 084B     		ldr	r3, .L92+4
 1031 0004 1A60     		str	r2, [r3]
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1032              		.loc 1 1238 0
 1033 0006 0138     		subs	r0, r0, #1
 1034              	.LVL95:
 1035 0008 0002     		lsls	r0, r0, #8
 1036              	.LVL96:
 1037 000a 074B     		ldr	r3, .L92+8
 1038 000c 1860     		str	r0, [r3]
 1039              	.L91:
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1040              		.loc 1 1241 0 discriminator 1
 1041 000e 054B     		ldr	r3, .L92+4
 1042 0010 1B68     		ldr	r3, [r3]
 1043 0012 002B     		cmp	r3, #0
 1044 0014 FBDB     		blt	.L91
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 1045              		.loc 1 1247 0
 1046 0016 054A     		ldr	r2, .L92+12
 1047 0018 024B     		ldr	r3, .L92+4
 1048 001a 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1049              		.loc 1 1272 0
 1050              		@ sp needed
 1051 001c 7047     		bx	lr
 1052              	.L93:
 1053 001e C046     		.align	2
 1054              	.L92:
 1055 0020 40000040 		.word	1073741888
 1056 0024 00000140 		.word	1073807360
 1057 0028 00030140 		.word	1073808128
 1058 002c 40FF0080 		.word	-2147418304
 1059              		.cfi_endproc
 1060              	.LFE13:
 1061              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 1062              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 1063              		.align	2
 1064              		.global	CapSense_SsSetSnsClockDivider
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	CapSense_SsSetSnsClockDivider, %function
 1068              	CapSense_SsSetSnsClockDivider:
 1069              	.LFB14:
1293:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 1070              		.loc 1 1293 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              		@ link register save eliminated.
 1075              	.LVL97:
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 67


 1076              		.loc 1 1302 0
 1077 0000 034A     		ldr	r2, .L95
 1078 0002 1368     		ldr	r3, [r2]
 1079              	.LVL98:
1303:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 1080              		.loc 1 1303 0
 1081 0004 1B0B     		lsrs	r3, r3, #12
 1082              	.LVL99:
 1083 0006 1B03     		lsls	r3, r3, #12
 1084              	.LVL100:
1304:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 1085              		.loc 1 1304 0
 1086 0008 0138     		subs	r0, r0, #1
 1087              	.LVL101:
 1088 000a 1843     		orrs	r0, r3
 1089              	.LVL102:
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 1090              		.loc 1 1305 0
 1091 000c 1060     		str	r0, [r2]
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1092              		.loc 1 1354 0
 1093              		@ sp needed
 1094 000e 7047     		bx	lr
 1095              	.L96:
 1096              		.align	2
 1097              	.L95:
 1098 0010 00020B40 		.word	1074463232
 1099              		.cfi_endproc
 1100              	.LFE14:
 1101              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 1102              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 1103              		.align	2
 1104              		.global	CapSense_SsSetClockDividers
 1105              		.code	16
 1106              		.thumb_func
 1107              		.type	CapSense_SsSetClockDividers, %function
 1108              	CapSense_SsSetClockDividers:
 1109              	.LFB15:
1377:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 1110              		.loc 1 1377 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114              	.LVL103:
 1115 0000 10B5     		push	{r4, lr}
 1116              		.cfi_def_cfa_offset 8
 1117              		.cfi_offset 4, -8
 1118              		.cfi_offset 14, -4
 1119 0002 0400     		movs	r4, r0
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1120              		.loc 1 1379 0
 1121 0004 0800     		movs	r0, r1
 1122              	.LVL104:
 1123 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1124              	.LVL105:
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1125              		.loc 1 1382 0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 68


 1126 000a 2000     		movs	r0, r4
 1127 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 1128              	.LVL106:
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1129              		.loc 1 1383 0
 1130              		@ sp needed
 1131              	.LVL107:
 1132 0010 10BD     		pop	{r4, pc}
 1133              		.cfi_endproc
 1134              	.LFE15:
 1135              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 1136 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 1137              		.align	2
 1138              		.global	CapSense_CalibrateWidget
 1139              		.code	16
 1140              		.thumb_func
 1141              		.type	CapSense_CalibrateWidget, %function
 1142              	CapSense_CalibrateWidget:
 1143              	.LFB16:
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1144              		.loc 1 1429 0
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 0
 1147              		@ frame_needed = 0, uses_anonymous_args = 0
 1148              	.LVL108:
 1149 0000 10B5     		push	{r4, lr}
 1150              		.cfi_def_cfa_offset 8
 1151              		.cfi_offset 4, -8
 1152              		.cfi_offset 14, -4
 1153 0002 0300     		movs	r3, r0
 1154              	.LVL109:
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1155              		.loc 1 1434 0
 1156 0004 0328     		cmp	r0, #3
 1157 0006 01D8     		bhi	.L101
1430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1158              		.loc 1 1430 0
 1159 0008 0020     		movs	r0, #0
 1160              	.LVL110:
 1161 000a 00E0     		b	.L99
 1162              	.LVL111:
 1163              	.L101:
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1164              		.loc 1 1436 0
 1165 000c 0120     		movs	r0, #1
 1166              	.LVL112:
 1167              	.L99:
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1168              		.loc 1 1454 0
 1169 000e 0028     		cmp	r0, #0
 1170 0010 03D1     		bne	.L100
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1171              		.loc 1 1483 0
 1172 0012 5521     		movs	r1, #85
 1173 0014 1800     		movs	r0, r3
 1174              	.LVL113:
 1175 0016 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 69


 1176              	.LVL114:
 1177              	.L100:
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1178              		.loc 1 1505 0
 1179              		@ sp needed
 1180 001a 10BD     		pop	{r4, pc}
 1181              		.cfi_endproc
 1182              	.LFE16:
 1183              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 1184              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 1185              		.align	2
 1186              		.global	CapSense_CalibrateAllWidgets
 1187              		.code	16
 1188              		.thumb_func
 1189              		.type	CapSense_CalibrateAllWidgets, %function
 1190              	CapSense_CalibrateAllWidgets:
 1191              	.LFB17:
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1192              		.loc 1 1542 0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 0
 1195              		@ frame_needed = 0, uses_anonymous_args = 0
 1196 0000 70B5     		push	{r4, r5, r6, lr}
 1197              		.cfi_def_cfa_offset 16
 1198              		.cfi_offset 4, -16
 1199              		.cfi_offset 5, -12
 1200              		.cfi_offset 6, -8
 1201              		.cfi_offset 14, -4
 1202              	.LVL115:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1203              		.loc 1 1546 0
 1204 0002 0024     		movs	r4, #0
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1205              		.loc 1 1543 0
 1206 0004 0025     		movs	r5, #0
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1207              		.loc 1 1546 0
 1208 0006 04E0     		b	.L103
 1209              	.LVL116:
 1210              	.L104:
1548:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1211              		.loc 1 1548 0 discriminator 3
 1212 0008 2000     		movs	r0, r4
 1213 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1214              	.LVL117:
 1215 000e 0543     		orrs	r5, r0
 1216              	.LVL118:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1217              		.loc 1 1546 0 discriminator 3
 1218 0010 0134     		adds	r4, r4, #1
 1219              	.LVL119:
 1220              	.L103:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1221              		.loc 1 1546 0 is_stmt 0 discriminator 1
 1222 0012 032C     		cmp	r4, #3
 1223 0014 F8D9     		bls	.L104
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 70


 1224              		.loc 1 1552 0 is_stmt 1
 1225 0016 2800     		movs	r0, r5
 1226              		@ sp needed
 1227              	.LVL120:
 1228              	.LVL121:
 1229 0018 70BD     		pop	{r4, r5, r6, pc}
 1230              		.cfi_endproc
 1231              	.LFE17:
 1232              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1233 001a C046     		.section	.text.CapSense_SsClearCSDSensors,"ax",%progbits
 1234              		.align	2
 1235              		.global	CapSense_SsClearCSDSensors
 1236              		.code	16
 1237              		.thumb_func
 1238              		.type	CapSense_SsClearCSDSensors, %function
 1239              	CapSense_SsClearCSDSensors:
 1240              	.LFB22:
2541:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2542:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2550:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2551:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsClearCSDSensors
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2559:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  an inactive state.
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  connection is Ground or Hi-Z.
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsClearCSDSensors(void)
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1241              		.loc 1 2569 0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 1245 0000 70B5     		push	{r4, r5, r6, lr}
 1246              		.cfi_def_cfa_offset 16
 1247              		.cfi_offset 4, -16
 1248              		.cfi_offset 5, -12
 1249              		.cfi_offset 6, -8
 1250              		.cfi_offset 14, -4
 1251              	.LVL122:
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 71


2570:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
2572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 pinIndex;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Declare ptr to sensor IO structure */
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr;
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 1252              		.loc 1 2585 0
 1253 0002 0025     		movs	r5, #0
 1254 0004 16E0     		b	.L106
 1255              	.LVL123:
 1256              	.L109:
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2587:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2588:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2589:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2590:Generated_Source\PSoC4/CapSense_Sensing.c ****                 curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 1257              		.loc 1 2590 0
 1258 0006 EB00     		lsls	r3, r5, #3
 1259 0008 5B1B     		subs	r3, r3, r5
 1260 000a 9A00     		lsls	r2, r3, #2
 1261 000c 0B4B     		ldr	r3, .L110
 1262 000e D658     		ldr	r6, [r2, r3]
 1263              	.LVL124:
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                 CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash;
2592:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Go through all the sensors in widget */
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_dsFlash.wdgtArray[wdgtIndex].totalNu
 1264              		.loc 1 2594 0
 1265 0010 0024     		movs	r4, #0
 1266 0012 06E0     		b	.L107
 1267              	.LVL125:
 1268              	.L108:
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2597:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Check ganged sns flag */
2598:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[wdgtIndex].stat
2599:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                  CapSense_GANGED_SNS_MASK))
2600:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2601:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get sns pointer */
2602:Generated_Source\PSoC4/CapSense_Sensing.c ****                             curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
2603:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                CapSense_dsFlash.wdgtArray[wdgtIndex
2604:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                snsIndex;
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2606:Generated_Source\PSoC4/CapSense_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2607:Generated_Source\PSoC4/CapSense_Sensing.c ****                             {
2608:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2609:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId 
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 72


2610:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2611:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Disconnect dedicated pin */
2612:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 CapSense_CSDDisconnectSns(curDedicatedSnsIOPtr);
2613:Generated_Source\PSoC4/CapSense_Sensing.c ****                             }
2614:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2615:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2616:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2617:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Disable sensor */
2618:Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2619:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2620:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable sensor */
2622:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1269              		.loc 1 2622 0 discriminator 3
 1270 0014 E300     		lsls	r3, r4, #3
 1271 0016 1B1B     		subs	r3, r3, r4
 1272 0018 9800     		lsls	r0, r3, #2
 1273 001a 3018     		adds	r0, r6, r0
 1274 001c FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1275              	.LVL126:
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1276              		.loc 1 2594 0 discriminator 3
 1277 0020 0134     		adds	r4, r4, #1
 1278              	.LVL127:
 1279              	.L107:
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1280              		.loc 1 2594 0 is_stmt 0 discriminator 1
 1281 0022 EA00     		lsls	r2, r5, #3
 1282 0024 521B     		subs	r2, r2, r5
 1283 0026 9300     		lsls	r3, r2, #2
 1284 0028 044A     		ldr	r2, .L110
 1285 002a D318     		adds	r3, r2, r3
 1286 002c 1B7E     		ldrb	r3, [r3, #24]
 1287 002e 9C42     		cmp	r4, r3
 1288 0030 F0D3     		bcc	.L108
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1289              		.loc 1 2585 0 is_stmt 1 discriminator 2
 1290 0032 0135     		adds	r5, r5, #1
 1291              	.LVL128:
 1292              	.L106:
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1293              		.loc 1 2585 0 is_stmt 0 discriminator 1
 1294 0034 032D     		cmp	r5, #3
 1295 0036 E6D9     		bls	.L109
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1296              		.loc 1 2627 0 is_stmt 1
 1297              		@ sp needed
 1298              	.LVL129:
 1299 0038 70BD     		pop	{r4, r5, r6, pc}
 1300              	.L111:
 1301 003a C046     		.align	2
 1302              	.L110:
 1303 003c 00000000 		.word	CapSense_dsFlash
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 73


 1304              		.cfi_endproc
 1305              	.LFE22:
 1306              		.size	CapSense_SsClearCSDSensors, .-CapSense_SsClearCSDSensors
 1307              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1308              		.align	2
 1309              		.global	CapSense_SsCSDGetColSnsClkDivider
 1310              		.code	16
 1311              		.thumb_func
 1312              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1313              	CapSense_SsCSDGetColSnsClkDivider:
 1314              	.LFB23:
2628:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1315              		.loc 1 2651 0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 0
 1318              		@ frame_needed = 0, uses_anonymous_args = 0
 1319              		@ link register save eliminated.
 1320              	.LVL130:
2652:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2653:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2654:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2655:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2656:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2658:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1321              		.loc 1 2658 0
 1322 0000 C300     		lsls	r3, r0, #3
 1323 0002 181A     		subs	r0, r3, r0
 1324              	.LVL131:
 1325 0004 8300     		lsls	r3, r0, #2
 1326 0006 024A     		ldr	r2, .L113
 1327 0008 D318     		adds	r3, r2, r3
 1328 000a 5B68     		ldr	r3, [r3, #4]
 1329              	.LVL132:
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 74


2659:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2661:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1330              		.loc 1 2661 0
 1331 000c 5889     		ldrh	r0, [r3, #10]
 1332              	.LVL133:
2662:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2663:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2665:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2666:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2668:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2669:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1333              		.loc 1 2669 0
 1334              		@ sp needed
 1335 000e 7047     		bx	lr
 1336              	.L114:
 1337              		.align	2
 1338              	.L113:
 1339 0010 00000000 		.word	CapSense_dsFlash
 1340              		.cfi_endproc
 1341              	.LFE23:
 1342              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1343              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1344              		.align	2
 1345              		.global	CapSense_SsCSDCalcPrsSize
 1346              		.code	16
 1347              		.thumb_func
 1348              		.type	CapSense_SsCSDCalcPrsSize, %function
 1349              	CapSense_SsCSDCalcPrsSize:
 1350              	.LFB24:
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2672:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2673:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2674:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2675:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2676:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2677:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2678:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2679:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2680:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2681:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2682:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2683:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2684:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2685:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2686:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2687:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2688:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2689:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2690:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2691:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2692:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2693:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2694:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 75


2695:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2696:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2700:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2704:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2711:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2715:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2716:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2730:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1351              		.loc 1 2738 0
 1352              		.cfi_startproc
 1353              		@ args = 0, pretend = 0, frame = 0
 1354              		@ frame_needed = 0, uses_anonymous_args = 0
 1355              		@ link register save eliminated.
 1356              	.LVL134:
2739:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if ((CapSense_ENABLE != CapSense_CSDV2) && \
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK))
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2745:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 76


2746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1357              		.loc 1 2747 0
 1358 0000 0203     		lsls	r2, r0, #12
 1359 0002 121A     		subs	r2, r2, r0
 1360 0004 0123     		movs	r3, #1
 1361 0006 8B40     		lsls	r3, r3, r1
 1362 0008 013B     		subs	r3, r3, #1
 1363 000a 9A42     		cmp	r2, r3
 1364 000c 05D9     		bls	.L117
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1365              		.loc 1 2752 0
 1366 000e 0202     		lsls	r2, r0, #8
 1367 0010 101A     		subs	r0, r2, r0
 1368              	.LVL135:
 1369 0012 8342     		cmp	r3, r0
 1370 0014 03D3     		bcc	.L118
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2755:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1371              		.loc 1 2755 0
 1372 0016 0520     		movs	r0, #5
 1373 0018 02E0     		b	.L116
 1374              	.LVL136:
 1375              	.L117:
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1376              		.loc 1 2750 0
 1377 001a 0620     		movs	r0, #6
 1378              	.LVL137:
 1379 001c 00E0     		b	.L116
 1380              	.L118:
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2757:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2758:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2759:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1381              		.loc 1 2760 0
 1382 001e 0020     		movs	r0, #0
 1383              	.L116:
 1384              	.LVL138:
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2762:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1385              		.loc 1 2763 0
 1386 0020 C0B2     		uxtb	r0, r0
 1387              	.LVL139:
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1388              		.loc 1 2764 0
 1389              		@ sp needed
 1390 0022 7047     		bx	lr
 1391              		.cfi_endproc
 1392              	.LFE24:
 1393              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 77


 1394              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1395              		.align	2
 1396              		.code	16
 1397              		.thumb_func
 1398              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1399              	CapSense_SsSetWidgetSenseClkSrc:
 1400              	.LFB19:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1401              		.loc 1 2241 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405              	.LVL140:
 1406 0000 70B5     		push	{r4, r5, r6, lr}
 1407              		.cfi_def_cfa_offset 16
 1408              		.cfi_offset 4, -16
 1409              		.cfi_offset 5, -12
 1410              		.cfi_offset 6, -8
 1411              		.cfi_offset 14, -4
 1412 0002 0E00     		movs	r6, r1
2253:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1413              		.loc 1 2253 0
 1414 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1415              	.LVL141:
 1416 0008 0500     		movs	r5, r0
 1417              	.LVL142:
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
 1418              		.loc 1 2256 0
 1419 000a 3188     		ldrh	r1, [r6]
 1420 000c 0022     		movs	r2, #0
 1421 000e FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1422              	.LVL143:
 1423 0012 0100     		movs	r1, r0
 1424              	.LVL144:
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
 1425              		.loc 1 2258 0
 1426 0014 2800     		movs	r0, r5
 1427              	.LVL145:
 1428 0016 FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 1429              	.LVL146:
 1430 001a 041E     		subs	r4, r0, #0
 1431              	.LVL147:
2259:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1432              		.loc 1 2259 0
 1433 001c 04D1     		bne	.L120
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1434              		.loc 1 2265 0
 1435 001e 6800     		lsls	r0, r5, #1
 1436              	.LVL148:
 1437 0020 3188     		ldrh	r1, [r6]
 1438 0022 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1439              	.LVL149:
 1440 0026 0400     		movs	r4, r0
 1441              	.LVL150:
 1442              	.L120:
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 1443              		.loc 1 2267 0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 78


 1444 0028 2100     		movs	r1, r4
 1445 002a 2800     		movs	r0, r5
 1446 002c FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 1447              	.LVL151:
2282:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1448              		.loc 1 2282 0
 1449 0030 0001     		lsls	r0, r0, #4
 1450              	.LVL152:
 1451 0032 C0B2     		uxtb	r0, r0
 1452 0034 2043     		orrs	r0, r4
 1453 0036 3073     		strb	r0, [r6, #12]
2317:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1454              		.loc 1 2317 0
 1455              		@ sp needed
 1456              	.LVL153:
 1457              	.LVL154:
 1458              	.LVL155:
 1459 0038 70BD     		pop	{r4, r5, r6, pc}
 1460              		.cfi_endproc
 1461              	.LFE19:
 1462              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1463 003a C046     		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1464              		.align	2
 1465              		.global	CapSense_SsInitializeSourceSenseClk
 1466              		.code	16
 1467              		.thumb_func
 1468              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1469              	CapSense_SsInitializeSourceSenseClk:
 1470              	.LFB18:
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1471              		.loc 1 2188 0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
 1475 0000 10B5     		push	{r4, lr}
 1476              		.cfi_def_cfa_offset 8
 1477              		.cfi_offset 4, -8
 1478              		.cfi_offset 14, -4
 1479              	.LVL156:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1480              		.loc 1 2192 0
 1481 0002 0024     		movs	r4, #0
 1482 0004 09E0     		b	.L122
 1483              	.LVL157:
 1484              	.L123:
2194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1485              		.loc 1 2194 0
 1486 0006 E200     		lsls	r2, r4, #3
 1487 0008 121B     		subs	r2, r2, r4
 1488 000a 9300     		lsls	r3, r2, #2
 1489 000c 044A     		ldr	r2, .L124
 1490 000e D318     		adds	r3, r2, r3
 1491 0010 5968     		ldr	r1, [r3, #4]
 1492              	.LVL158:
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1493              		.loc 1 2200 0
 1494 0012 2000     		movs	r0, r4
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 79


 1495 0014 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1496              	.LVL159:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1497              		.loc 1 2192 0
 1498 0018 0134     		adds	r4, r4, #1
 1499              	.LVL160:
 1500              	.L122:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1501              		.loc 1 2192 0 is_stmt 0 discriminator 1
 1502 001a 032C     		cmp	r4, #3
 1503 001c F3D9     		bls	.L123
2215:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1504              		.loc 1 2215 0 is_stmt 1
 1505              		@ sp needed
 1506              	.LVL161:
 1507 001e 10BD     		pop	{r4, pc}
 1508              	.L125:
 1509              		.align	2
 1510              	.L124:
 1511 0020 00000000 		.word	CapSense_dsFlash
 1512              		.cfi_endproc
 1513              	.LFE18:
 1514              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1515              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1516              		.align	2
 1517              		.global	CapSense_SsInitialize
 1518              		.code	16
 1519              		.thumb_func
 1520              		.type	CapSense_SsInitialize, %function
 1521              	CapSense_SsInitialize:
 1522              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1523              		.loc 1 517 0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 0
 1526              		@ frame_needed = 0, uses_anonymous_args = 0
 1527 0000 10B5     		push	{r4, lr}
 1528              		.cfi_def_cfa_offset 8
 1529              		.cfi_offset 4, -8
 1530              		.cfi_offset 14, -4
 1531              	.LVL162:
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1532              		.loc 1 556 0
 1533 0002 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1534              	.LVL163:
 561:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1535              		.loc 1 561 0
 1536 0006 FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
 1537              	.LVL164:
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 1538              		.loc 1 568 0
 1539 000a FFF7FEFF 		bl	CapSense_SsCSDInitialize
 1540              	.LVL165:
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 1541              		.loc 1 569 0
 1542 000e 0120     		movs	r0, #1
 1543 0010 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 80


 1544              	.LVL166:
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1545              		.loc 1 584 0
 1546 0014 0020     		movs	r0, #0
 1547              		@ sp needed
 1548 0016 10BD     		pop	{r4, pc}
 1549              		.cfi_endproc
 1550              	.LFE5:
 1551              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1552              		.section	.text.CapSense_BistDischargeExtCapacitors,"ax",%progbits
 1553              		.align	2
 1554              		.global	CapSense_BistDischargeExtCapacitors
 1555              		.code	16
 1556              		.thumb_func
 1557              		.type	CapSense_BistDischargeExtCapacitors, %function
 1558              	CapSense_BistDischargeExtCapacitors:
 1559              	.LFB25:
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2770:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_BistDischargeExtCapacitors
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors.
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_BistDischargeExtCapacitors(void)
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1560              		.loc 1 2786 0
 1561              		.cfi_startproc
 1562              		@ args = 0, pretend = 0, frame = 0
 1563              		@ frame_needed = 0, uses_anonymous_args = 0
 1564 0000 70B5     		push	{r4, r5, r6, lr}
 1565              		.cfi_def_cfa_offset 16
 1566              		.cfi_offset 4, -16
 1567              		.cfi_offset 5, -12
 1568              		.cfi_offset 6, -8
 1569              		.cfi_offset 14, -4
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****         
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1570              		.loc 1 2791 0
 1571 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1572              	.LVL167:
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 81


2792:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1573              		.loc 1 2792 0
 1574 0006 134A     		ldr	r2, .L128
 1575 0008 1168     		ldr	r1, [r2]
 1576              	.LVL168:
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1577              		.loc 1 2793 0
 1578 000a 134B     		ldr	r3, .L128+4
 1579 000c 0B40     		ands	r3, r1
 1580              	.LVL169:
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1581              		.loc 1 2794 0
 1582 000e 1360     		str	r3, [r2]
2795:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1583              		.loc 1 2795 0
 1584 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1585              	.LVL170:
2796:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1586              		.loc 1 2798 0
 1587 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1588              	.LVL171:
2799:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1589              		.loc 1 2799 0
 1590 0018 104A     		ldr	r2, .L128+8
 1591 001a 1368     		ldr	r3, [r2]
 1592              	.LVL172:
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1593              		.loc 1 2800 0
 1594 001c 0421     		movs	r1, #4
 1595 001e 8B43     		bics	r3, r1
 1596              	.LVL173:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1597              		.loc 1 2801 0
 1598 0020 1360     		str	r3, [r2]
2802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1599              		.loc 1 2802 0
 1600 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1601              	.LVL174:
2803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1602              		.loc 1 2805 0
 1603 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 1604              	.LVL175:
2806:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1605              		.loc 1 2806 0
 1606 002a 0D4C     		ldr	r4, .L128+12
 1607 002c 2368     		ldr	r3, [r4]
 1608              	.LVL176:
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1609              		.loc 1 2807 0
 1610 002e 0D4D     		ldr	r5, .L128+16
 1611 0030 2B40     		ands	r3, r5
 1612              	.LVL177:
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 82


 1613              		.loc 1 2808 0
 1614 0032 C022     		movs	r2, #192
 1615 0034 5200     		lsls	r2, r2, #1
 1616 0036 1343     		orrs	r3, r2
 1617              	.LVL178:
2809:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1618              		.loc 1 2809 0
 1619 0038 2360     		str	r3, [r4]
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1620              		.loc 1 2810 0
 1621 003a FFF7FEFF 		bl	CyExitCriticalSection
 1622              	.LVL179:
2811:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2812:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2813:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs(CapSense_EXT_CAP_DISCHARGE_TIME);
 1623              		.loc 1 2813 0
 1624 003e 0120     		movs	r0, #1
 1625 0040 FFF7FEFF 		bl	CyDelayUs
 1626              	.LVL180:
2814:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1627              		.loc 1 2816 0
 1628 0044 FFF7FEFF 		bl	CyEnterCriticalSection
 1629              	.LVL181:
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1630              		.loc 1 2817 0
 1631 0048 2368     		ldr	r3, [r4]
 1632              	.LVL182:
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1633              		.loc 1 2818 0
 1634 004a 1D40     		ands	r5, r3
 1635              	.LVL183:
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1636              		.loc 1 2819 0
 1637 004c 2560     		str	r5, [r4]
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1638              		.loc 1 2820 0
 1639 004e FFF7FEFF 		bl	CyExitCriticalSection
 1640              	.LVL184:
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1641              		.loc 1 2821 0
 1642              		@ sp needed
 1643              	.LVL185:
 1644 0052 70BD     		pop	{r4, r5, r6, pc}
 1645              	.L129:
 1646              		.align	2
 1647              	.L128:
 1648 0054 00040240 		.word	1073873920
 1649 0058 FFF0FFFF 		.word	-3841
 1650 005c 00040440 		.word	1074004992
 1651 0060 08040440 		.word	1074005000
 1652 0064 3FFEFFFF 		.word	-449
 1653              		.cfi_endproc
 1654              	.LFE25:
 1655              		.size	CapSense_BistDischargeExtCapacitors, .-CapSense_BistDischargeExtCapacitors
 1656              		.comm	CapSense_curSnsIOPtr,4,4
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 83


 1657              		.comm	CapSense_curRamSnsPtr,4,4
 1658              		.global	CapSense_requestScanAllWidget
 1659              		.global	CapSense_sensorIndex
 1660              		.global	CapSense_widgetIndex
 1661              		.global	CapSense_scanFreqIndex
 1662              		.global	CapSense_currentSenseMethod
 1663              		.section	.rodata
 1664              		.type	CapSense_scanFreqIndex, %object
 1665              		.size	CapSense_scanFreqIndex, 1
 1666              	CapSense_scanFreqIndex:
 1667 0000 00       		.space	1
 1668              		.bss
 1669              		.set	.LANCHOR0,. + 0
 1670              		.type	CapSense_currentSenseMethod, %object
 1671              		.size	CapSense_currentSenseMethod, 1
 1672              	CapSense_currentSenseMethod:
 1673 0000 00       		.space	1
 1674              		.type	CapSense_requestScanAllWidget, %object
 1675              		.size	CapSense_requestScanAllWidget, 1
 1676              	CapSense_requestScanAllWidget:
 1677 0001 00       		.space	1
 1678              		.type	CapSense_widgetIndex, %object
 1679              		.size	CapSense_widgetIndex, 1
 1680              	CapSense_widgetIndex:
 1681 0002 00       		.space	1
 1682              		.type	CapSense_sensorIndex, %object
 1683              		.size	CapSense_sensorIndex, 1
 1684              	CapSense_sensorIndex:
 1685 0003 00       		.space	1
 1686              		.text
 1687              	.Letext0:
 1688              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1689              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1690              		.file 4 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1691              		.file 5 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1692              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 1693              		.file 7 "Generated_Source\\PSoC4\\CapSense_Adc.h"
 1694              		.file 8 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1695              		.section	.debug_info,"",%progbits
 1696              	.Ldebug_info0:
 1697 0000 F50F0000 		.4byte	0xff5
 1698 0004 0400     		.2byte	0x4
 1699 0006 00000000 		.4byte	.Ldebug_abbrev0
 1700 000a 04       		.byte	0x4
 1701 000b 01       		.uleb128 0x1
 1702 000c F7010000 		.4byte	.LASF179
 1703 0010 0C       		.byte	0xc
 1704 0011 05080000 		.4byte	.LASF180
 1705 0015 7E080000 		.4byte	.LASF181
 1706 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1707 001d 00000000 		.4byte	0
 1708 0021 00000000 		.4byte	.Ldebug_line0
 1709 0025 02       		.uleb128 0x2
 1710 0026 01       		.byte	0x1
 1711 0027 06       		.byte	0x6
 1712 0028 990A0000 		.4byte	.LASF0
 1713 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 84


 1714 002d 01       		.byte	0x1
 1715 002e 08       		.byte	0x8
 1716 002f 67090000 		.4byte	.LASF1
 1717 0033 02       		.uleb128 0x2
 1718 0034 02       		.byte	0x2
 1719 0035 05       		.byte	0x5
 1720 0036 22070000 		.4byte	.LASF2
 1721 003a 02       		.uleb128 0x2
 1722 003b 02       		.byte	0x2
 1723 003c 07       		.byte	0x7
 1724 003d C10A0000 		.4byte	.LASF3
 1725 0041 02       		.uleb128 0x2
 1726 0042 04       		.byte	0x4
 1727 0043 05       		.byte	0x5
 1728 0044 5A070000 		.4byte	.LASF4
 1729 0048 02       		.uleb128 0x2
 1730 0049 04       		.byte	0x4
 1731 004a 07       		.byte	0x7
 1732 004b D7080000 		.4byte	.LASF5
 1733 004f 02       		.uleb128 0x2
 1734 0050 08       		.byte	0x8
 1735 0051 05       		.byte	0x5
 1736 0052 E4040000 		.4byte	.LASF6
 1737 0056 02       		.uleb128 0x2
 1738 0057 08       		.byte	0x8
 1739 0058 07       		.byte	0x7
 1740 0059 BF020000 		.4byte	.LASF7
 1741 005d 03       		.uleb128 0x3
 1742 005e 04       		.byte	0x4
 1743 005f 05       		.byte	0x5
 1744 0060 696E7400 		.ascii	"int\000"
 1745 0064 02       		.uleb128 0x2
 1746 0065 04       		.byte	0x4
 1747 0066 07       		.byte	0x7
 1748 0067 D3000000 		.4byte	.LASF8
 1749 006b 04       		.uleb128 0x4
 1750 006c 370B0000 		.4byte	.LASF9
 1751 0070 02       		.byte	0x2
 1752 0071 F701     		.2byte	0x1f7
 1753 0073 2C000000 		.4byte	0x2c
 1754 0077 04       		.uleb128 0x4
 1755 0078 1D040000 		.4byte	.LASF10
 1756 007c 02       		.byte	0x2
 1757 007d F801     		.2byte	0x1f8
 1758 007f 3A000000 		.4byte	0x3a
 1759 0083 04       		.uleb128 0x4
 1760 0084 EA050000 		.4byte	.LASF11
 1761 0088 02       		.byte	0x2
 1762 0089 F901     		.2byte	0x1f9
 1763 008b 48000000 		.4byte	0x48
 1764 008f 02       		.uleb128 0x2
 1765 0090 04       		.byte	0x4
 1766 0091 04       		.byte	0x4
 1767 0092 D0010000 		.4byte	.LASF12
 1768 0096 02       		.uleb128 0x2
 1769 0097 08       		.byte	0x8
 1770 0098 04       		.byte	0x4
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 85


 1771 0099 3D0B0000 		.4byte	.LASF13
 1772 009d 02       		.uleb128 0x2
 1773 009e 01       		.byte	0x1
 1774 009f 08       		.byte	0x8
 1775 00a0 D2030000 		.4byte	.LASF14
 1776 00a4 04       		.uleb128 0x4
 1777 00a5 5E090000 		.4byte	.LASF15
 1778 00a9 02       		.byte	0x2
 1779 00aa 9902     		.2byte	0x299
 1780 00ac 48000000 		.4byte	0x48
 1781 00b0 05       		.uleb128 0x5
 1782 00b1 6B000000 		.4byte	0x6b
 1783 00b5 04       		.uleb128 0x4
 1784 00b6 99060000 		.4byte	.LASF16
 1785 00ba 02       		.byte	0x2
 1786 00bb A302     		.2byte	0x2a3
 1787 00bd C1000000 		.4byte	0xc1
 1788 00c1 05       		.uleb128 0x5
 1789 00c2 83000000 		.4byte	0x83
 1790 00c6 04       		.uleb128 0x4
 1791 00c7 B8050000 		.4byte	.LASF17
 1792 00cb 02       		.byte	0x2
 1793 00cc B302     		.2byte	0x2b3
 1794 00ce D2000000 		.4byte	0xd2
 1795 00d2 06       		.uleb128 0x6
 1796 00d3 04       		.byte	0x4
 1797 00d4 D8000000 		.4byte	0xd8
 1798 00d8 07       		.uleb128 0x7
 1799 00d9 04       		.uleb128 0x4
 1800 00da A9090000 		.4byte	.LASF18
 1801 00de 03       		.byte	0x3
 1802 00df 0E01     		.2byte	0x10e
 1803 00e1 77000000 		.4byte	0x77
 1804 00e5 04       		.uleb128 0x4
 1805 00e6 5E040000 		.4byte	.LASF19
 1806 00ea 03       		.byte	0x3
 1807 00eb 1201     		.2byte	0x112
 1808 00ed 6B000000 		.4byte	0x6b
 1809 00f1 08       		.uleb128 0x8
 1810 00f2 01       		.byte	0x1
 1811 00f3 2C000000 		.4byte	0x2c
 1812 00f7 04       		.byte	0x4
 1813 00f8 6F       		.byte	0x6f
 1814 00f9 1C010000 		.4byte	0x11c
 1815 00fd 09       		.uleb128 0x9
 1816 00fe BE000000 		.4byte	.LASF20
 1817 0102 00       		.byte	0
 1818 0103 09       		.uleb128 0x9
 1819 0104 46080000 		.4byte	.LASF21
 1820 0108 01       		.byte	0x1
 1821 0109 09       		.uleb128 0x9
 1822 010a 7C070000 		.4byte	.LASF22
 1823 010e 02       		.byte	0x2
 1824 010f 09       		.uleb128 0x9
 1825 0110 D2090000 		.4byte	.LASF23
 1826 0114 03       		.byte	0x3
 1827 0115 09       		.uleb128 0x9
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 86


 1828 0116 54060000 		.4byte	.LASF24
 1829 011a 04       		.byte	0x4
 1830 011b 00       		.byte	0
 1831 011c 0A       		.uleb128 0xa
 1832 011d 97040000 		.4byte	.LASF25
 1833 0121 04       		.byte	0x4
 1834 0122 75       		.byte	0x75
 1835 0123 F1000000 		.4byte	0xf1
 1836 0127 0B       		.uleb128 0xb
 1837 0128 0E       		.byte	0xe
 1838 0129 04       		.byte	0x4
 1839 012a 8D       		.byte	0x8d
 1840 012b A8010000 		.4byte	0x1a8
 1841 012f 0C       		.uleb128 0xc
 1842 0130 33040000 		.4byte	.LASF26
 1843 0134 04       		.byte	0x4
 1844 0135 92       		.byte	0x92
 1845 0136 77000000 		.4byte	0x77
 1846 013a 00       		.byte	0
 1847 013b 0C       		.uleb128 0xc
 1848 013c 25090000 		.4byte	.LASF27
 1849 0140 04       		.byte	0x4
 1850 0141 97       		.byte	0x97
 1851 0142 D9000000 		.4byte	0xd9
 1852 0146 02       		.byte	0x2
 1853 0147 0C       		.uleb128 0xc
 1854 0148 CA030000 		.4byte	.LASF28
 1855 014c 04       		.byte	0x4
 1856 014d 9C       		.byte	0x9c
 1857 014e 6B000000 		.4byte	0x6b
 1858 0152 04       		.byte	0x4
 1859 0153 0C       		.uleb128 0xc
 1860 0154 A4050000 		.4byte	.LASF29
 1861 0158 04       		.byte	0x4
 1862 0159 A1       		.byte	0xa1
 1863 015a 6B000000 		.4byte	0x6b
 1864 015e 05       		.byte	0x5
 1865 015f 0C       		.uleb128 0xc
 1866 0160 77030000 		.4byte	.LASF30
 1867 0164 04       		.byte	0x4
 1868 0165 A7       		.byte	0xa7
 1869 0166 6B000000 		.4byte	0x6b
 1870 016a 06       		.byte	0x6
 1871 016b 0C       		.uleb128 0xc
 1872 016c 13050000 		.4byte	.LASF31
 1873 0170 04       		.byte	0x4
 1874 0171 AD       		.byte	0xad
 1875 0172 6B000000 		.4byte	0x6b
 1876 0176 07       		.byte	0x7
 1877 0177 0C       		.uleb128 0xc
 1878 0178 9B030000 		.4byte	.LASF32
 1879 017c 04       		.byte	0x4
 1880 017d B4       		.byte	0xb4
 1881 017e E5000000 		.4byte	0xe5
 1882 0182 08       		.byte	0x8
 1883 0183 0C       		.uleb128 0xc
 1884 0184 F8080000 		.4byte	.LASF33
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 87


 1885 0188 04       		.byte	0x4
 1886 0189 BB       		.byte	0xbb
 1887 018a A8010000 		.4byte	0x1a8
 1888 018e 09       		.byte	0x9
 1889 018f 0C       		.uleb128 0xc
 1890 0190 400A0000 		.4byte	.LASF34
 1891 0194 04       		.byte	0x4
 1892 0195 C3       		.byte	0xc3
 1893 0196 77000000 		.4byte	0x77
 1894 019a 0A       		.byte	0xa
 1895 019b 0C       		.uleb128 0xc
 1896 019c DF060000 		.4byte	.LASF35
 1897 01a0 04       		.byte	0x4
 1898 01a1 C8       		.byte	0xc8
 1899 01a2 6B000000 		.4byte	0x6b
 1900 01a6 0C       		.byte	0xc
 1901 01a7 00       		.byte	0
 1902 01a8 0D       		.uleb128 0xd
 1903 01a9 6B000000 		.4byte	0x6b
 1904 01ad B8010000 		.4byte	0x1b8
 1905 01b1 0E       		.uleb128 0xe
 1906 01b2 B8010000 		.4byte	0x1b8
 1907 01b6 00       		.byte	0
 1908 01b7 00       		.byte	0
 1909 01b8 02       		.uleb128 0x2
 1910 01b9 04       		.byte	0x4
 1911 01ba 07       		.byte	0x7
 1912 01bb C6080000 		.4byte	.LASF36
 1913 01bf 0A       		.uleb128 0xa
 1914 01c0 C5050000 		.4byte	.LASF37
 1915 01c4 04       		.byte	0x4
 1916 01c5 C9       		.byte	0xc9
 1917 01c6 27010000 		.4byte	0x127
 1918 01ca 0B       		.uleb128 0xb
 1919 01cb 0E       		.byte	0xe
 1920 01cc 04       		.byte	0x4
 1921 01cd CE       		.byte	0xce
 1922 01ce 4D020000 		.4byte	0x24d
 1923 01d2 0C       		.uleb128 0xc
 1924 01d3 33040000 		.4byte	.LASF26
 1925 01d7 04       		.byte	0x4
 1926 01d8 D3       		.byte	0xd3
 1927 01d9 77000000 		.4byte	0x77
 1928 01dd 00       		.byte	0
 1929 01de 0C       		.uleb128 0xc
 1930 01df 25090000 		.4byte	.LASF27
 1931 01e3 04       		.byte	0x4
 1932 01e4 D8       		.byte	0xd8
 1933 01e5 D9000000 		.4byte	0xd9
 1934 01e9 02       		.byte	0x2
 1935 01ea 0C       		.uleb128 0xc
 1936 01eb CA030000 		.4byte	.LASF28
 1937 01ef 04       		.byte	0x4
 1938 01f0 DD       		.byte	0xdd
 1939 01f1 6B000000 		.4byte	0x6b
 1940 01f5 04       		.byte	0x4
 1941 01f6 0C       		.uleb128 0xc
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 88


 1942 01f7 A4050000 		.4byte	.LASF29
 1943 01fb 04       		.byte	0x4
 1944 01fc E2       		.byte	0xe2
 1945 01fd 6B000000 		.4byte	0x6b
 1946 0201 05       		.byte	0x5
 1947 0202 0C       		.uleb128 0xc
 1948 0203 77030000 		.4byte	.LASF30
 1949 0207 04       		.byte	0x4
 1950 0208 E8       		.byte	0xe8
 1951 0209 6B000000 		.4byte	0x6b
 1952 020d 06       		.byte	0x6
 1953 020e 0C       		.uleb128 0xc
 1954 020f 13050000 		.4byte	.LASF31
 1955 0213 04       		.byte	0x4
 1956 0214 EE       		.byte	0xee
 1957 0215 6B000000 		.4byte	0x6b
 1958 0219 07       		.byte	0x7
 1959 021a 0C       		.uleb128 0xc
 1960 021b 9B030000 		.4byte	.LASF32
 1961 021f 04       		.byte	0x4
 1962 0220 F5       		.byte	0xf5
 1963 0221 E5000000 		.4byte	0xe5
 1964 0225 08       		.byte	0x8
 1965 0226 0C       		.uleb128 0xc
 1966 0227 F8080000 		.4byte	.LASF33
 1967 022b 04       		.byte	0x4
 1968 022c FC       		.byte	0xfc
 1969 022d A8010000 		.4byte	0x1a8
 1970 0231 09       		.byte	0x9
 1971 0232 0F       		.uleb128 0xf
 1972 0233 400A0000 		.4byte	.LASF34
 1973 0237 04       		.byte	0x4
 1974 0238 0401     		.2byte	0x104
 1975 023a 77000000 		.4byte	0x77
 1976 023e 0A       		.byte	0xa
 1977 023f 0F       		.uleb128 0xf
 1978 0240 DF060000 		.4byte	.LASF35
 1979 0244 04       		.byte	0x4
 1980 0245 0901     		.2byte	0x109
 1981 0247 6B000000 		.4byte	0x6b
 1982 024b 0C       		.byte	0xc
 1983 024c 00       		.byte	0
 1984 024d 04       		.uleb128 0x4
 1985 024e 40090000 		.4byte	.LASF38
 1986 0252 04       		.byte	0x4
 1987 0253 0A01     		.2byte	0x10a
 1988 0255 CA010000 		.4byte	0x1ca
 1989 0259 10       		.uleb128 0x10
 1990 025a 38       		.byte	0x38
 1991 025b 04       		.byte	0x4
 1992 025c 1001     		.2byte	0x110
 1993 025e 97020000 		.4byte	0x297
 1994 0262 0F       		.uleb128 0xf
 1995 0263 310B0000 		.4byte	.LASF39
 1996 0267 04       		.byte	0x4
 1997 0268 1501     		.2byte	0x115
 1998 026a 4D020000 		.4byte	0x24d
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 89


 1999 026e 00       		.byte	0
 2000 026f 0F       		.uleb128 0xf
 2001 0270 26030000 		.4byte	.LASF40
 2002 0274 04       		.byte	0x4
 2003 0275 1A01     		.2byte	0x11a
 2004 0277 4D020000 		.4byte	0x24d
 2005 027b 0E       		.byte	0xe
 2006 027c 0F       		.uleb128 0xf
 2007 027d B2040000 		.4byte	.LASF41
 2008 0281 04       		.byte	0x4
 2009 0282 1F01     		.2byte	0x11f
 2010 0284 4D020000 		.4byte	0x24d
 2011 0288 1C       		.byte	0x1c
 2012 0289 0F       		.uleb128 0xf
 2013 028a 470A0000 		.4byte	.LASF42
 2014 028e 04       		.byte	0x4
 2015 028f 2401     		.2byte	0x124
 2016 0291 4D020000 		.4byte	0x24d
 2017 0295 2A       		.byte	0x2a
 2018 0296 00       		.byte	0
 2019 0297 04       		.uleb128 0x4
 2020 0298 61010000 		.4byte	.LASF43
 2021 029c 04       		.byte	0x4
 2022 029d 2501     		.2byte	0x125
 2023 029f 59020000 		.4byte	0x259
 2024 02a3 10       		.uleb128 0x10
 2025 02a4 0A       		.byte	0xa
 2026 02a5 04       		.byte	0x4
 2027 02a6 2B01     		.2byte	0x12b
 2028 02a8 FB020000 		.4byte	0x2fb
 2029 02ac 11       		.uleb128 0x11
 2030 02ad 72617700 		.ascii	"raw\000"
 2031 02b1 04       		.byte	0x4
 2032 02b2 3001     		.2byte	0x130
 2033 02b4 FB020000 		.4byte	0x2fb
 2034 02b8 00       		.byte	0
 2035 02b9 0F       		.uleb128 0xf
 2036 02ba BC0A0000 		.4byte	.LASF44
 2037 02be 04       		.byte	0x4
 2038 02bf 3501     		.2byte	0x135
 2039 02c1 FB020000 		.4byte	0x2fb
 2040 02c5 02       		.byte	0x2
 2041 02c6 0F       		.uleb128 0xf
 2042 02c7 38090000 		.4byte	.LASF45
 2043 02cb 04       		.byte	0x4
 2044 02cc 3B01     		.2byte	0x13b
 2045 02ce A8010000 		.4byte	0x1a8
 2046 02d2 04       		.byte	0x4
 2047 02d3 0F       		.uleb128 0xf
 2048 02d4 6E070000 		.4byte	.LASF46
 2049 02d8 04       		.byte	0x4
 2050 02d9 4001     		.2byte	0x140
 2051 02db D9000000 		.4byte	0xd9
 2052 02df 06       		.byte	0x6
 2053 02e0 0F       		.uleb128 0xf
 2054 02e1 440B0000 		.4byte	.LASF47
 2055 02e5 04       		.byte	0x4
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 90


 2056 02e6 4501     		.2byte	0x145
 2057 02e8 0B030000 		.4byte	0x30b
 2058 02ec 08       		.byte	0x8
 2059 02ed 0F       		.uleb128 0xf
 2060 02ee B9040000 		.4byte	.LASF48
 2061 02f2 04       		.byte	0x4
 2062 02f3 4A01     		.2byte	0x14a
 2063 02f5 A8010000 		.4byte	0x1a8
 2064 02f9 09       		.byte	0x9
 2065 02fa 00       		.byte	0
 2066 02fb 0D       		.uleb128 0xd
 2067 02fc 77000000 		.4byte	0x77
 2068 0300 0B030000 		.4byte	0x30b
 2069 0304 0E       		.uleb128 0xe
 2070 0305 B8010000 		.4byte	0x1b8
 2071 0309 00       		.byte	0
 2072 030a 00       		.byte	0
 2073 030b 0D       		.uleb128 0xd
 2074 030c E5000000 		.4byte	0xe5
 2075 0310 1B030000 		.4byte	0x31b
 2076 0314 0E       		.uleb128 0xe
 2077 0315 B8010000 		.4byte	0x1b8
 2078 0319 00       		.byte	0
 2079 031a 00       		.byte	0
 2080 031b 04       		.uleb128 0x4
 2081 031c 38030000 		.4byte	.LASF49
 2082 0320 04       		.byte	0x4
 2083 0321 4B01     		.2byte	0x14b
 2084 0323 A3020000 		.4byte	0x2a3
 2085 0327 10       		.uleb128 0x10
 2086 0328 28       		.byte	0x28
 2087 0329 04       		.byte	0x4
 2088 032a 5101     		.2byte	0x151
 2089 032c 65030000 		.4byte	0x365
 2090 0330 0F       		.uleb128 0xf
 2091 0331 310B0000 		.4byte	.LASF39
 2092 0335 04       		.byte	0x4
 2093 0336 5601     		.2byte	0x156
 2094 0338 65030000 		.4byte	0x365
 2095 033c 00       		.byte	0
 2096 033d 0F       		.uleb128 0xf
 2097 033e 26030000 		.4byte	.LASF40
 2098 0342 04       		.byte	0x4
 2099 0343 5B01     		.2byte	0x15b
 2100 0345 65030000 		.4byte	0x365
 2101 0349 0A       		.byte	0xa
 2102 034a 0F       		.uleb128 0xf
 2103 034b B2040000 		.4byte	.LASF41
 2104 034f 04       		.byte	0x4
 2105 0350 6001     		.2byte	0x160
 2106 0352 65030000 		.4byte	0x365
 2107 0356 14       		.byte	0x14
 2108 0357 0F       		.uleb128 0xf
 2109 0358 470A0000 		.4byte	.LASF42
 2110 035c 04       		.byte	0x4
 2111 035d 6501     		.2byte	0x165
 2112 035f 65030000 		.4byte	0x365
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 91


 2113 0363 1E       		.byte	0x1e
 2114 0364 00       		.byte	0
 2115 0365 0D       		.uleb128 0xd
 2116 0366 1B030000 		.4byte	0x31b
 2117 036a 75030000 		.4byte	0x375
 2118 036e 0E       		.uleb128 0xe
 2119 036f B8010000 		.4byte	0x1b8
 2120 0373 00       		.byte	0
 2121 0374 00       		.byte	0
 2122 0375 04       		.uleb128 0x4
 2123 0376 E50B0000 		.4byte	.LASF50
 2124 037a 04       		.byte	0x4
 2125 037b 6601     		.2byte	0x166
 2126 037d 27030000 		.4byte	0x327
 2127 0381 10       		.uleb128 0x10
 2128 0382 90       		.byte	0x90
 2129 0383 04       		.byte	0x4
 2130 0384 6C01     		.2byte	0x16c
 2131 0386 C3040000 		.4byte	0x4c3
 2132 038a 0F       		.uleb128 0xf
 2133 038b B2060000 		.4byte	.LASF51
 2134 038f 04       		.byte	0x4
 2135 0390 7301     		.2byte	0x173
 2136 0392 77000000 		.4byte	0x77
 2137 0396 00       		.byte	0
 2138 0397 0F       		.uleb128 0xf
 2139 0398 840B0000 		.4byte	.LASF52
 2140 039c 04       		.byte	0x4
 2141 039d 7801     		.2byte	0x178
 2142 039f 77000000 		.4byte	0x77
 2143 03a3 02       		.byte	0x2
 2144 03a4 0F       		.uleb128 0xf
 2145 03a5 EC000000 		.4byte	.LASF53
 2146 03a9 04       		.byte	0x4
 2147 03aa 7D01     		.2byte	0x17d
 2148 03ac 77000000 		.4byte	0x77
 2149 03b0 04       		.byte	0x4
 2150 03b1 0F       		.uleb128 0xf
 2151 03b2 73070000 		.4byte	.LASF54
 2152 03b6 04       		.byte	0x4
 2153 03b7 8301     		.2byte	0x183
 2154 03b9 77000000 		.4byte	0x77
 2155 03bd 06       		.byte	0x6
 2156 03be 0F       		.uleb128 0xf
 2157 03bf E0000000 		.4byte	.LASF55
 2158 03c3 04       		.byte	0x4
 2159 03c4 8801     		.2byte	0x188
 2160 03c6 77000000 		.4byte	0x77
 2161 03ca 08       		.byte	0x8
 2162 03cb 0F       		.uleb128 0xf
 2163 03cc 3E040000 		.4byte	.LASF56
 2164 03d0 04       		.byte	0x4
 2165 03d1 8D01     		.2byte	0x18d
 2166 03d3 C1000000 		.4byte	0xc1
 2167 03d7 0C       		.byte	0xc
 2168 03d8 0F       		.uleb128 0xf
 2169 03d9 63070000 		.4byte	.LASF57
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 92


 2170 03dd 04       		.byte	0x4
 2171 03de 9301     		.2byte	0x193
 2172 03e0 C3040000 		.4byte	0x4c3
 2173 03e4 10       		.byte	0x10
 2174 03e5 0F       		.uleb128 0xf
 2175 03e6 FA070000 		.4byte	.LASF58
 2176 03ea 04       		.byte	0x4
 2177 03eb 9A01     		.2byte	0x19a
 2178 03ed C3040000 		.4byte	0x4c3
 2179 03f1 14       		.byte	0x14
 2180 03f2 0F       		.uleb128 0xf
 2181 03f3 C6060000 		.4byte	.LASF59
 2182 03f7 04       		.byte	0x4
 2183 03f8 AA01     		.2byte	0x1aa
 2184 03fa D3040000 		.4byte	0x4d3
 2185 03fe 18       		.byte	0x18
 2186 03ff 0F       		.uleb128 0xf
 2187 0400 2E090000 		.4byte	.LASF60
 2188 0404 04       		.byte	0x4
 2189 0405 B001     		.2byte	0x1b0
 2190 0407 FB020000 		.4byte	0x2fb
 2191 040b 1C       		.byte	0x1c
 2192 040c 0F       		.uleb128 0xf
 2193 040d 020C0000 		.4byte	.LASF61
 2194 0411 04       		.byte	0x4
 2195 0412 B601     		.2byte	0x1b6
 2196 0414 FB020000 		.4byte	0x2fb
 2197 0418 1E       		.byte	0x1e
 2198 0419 0F       		.uleb128 0xf
 2199 041a E40A0000 		.4byte	.LASF62
 2200 041e 04       		.byte	0x4
 2201 041f BB01     		.2byte	0x1bb
 2202 0421 B0000000 		.4byte	0xb0
 2203 0425 20       		.byte	0x20
 2204 0426 0F       		.uleb128 0xf
 2205 0427 2C0A0000 		.4byte	.LASF63
 2206 042b 04       		.byte	0x4
 2207 042c C001     		.2byte	0x1c0
 2208 042e 6B000000 		.4byte	0x6b
 2209 0432 21       		.byte	0x21
 2210 0433 0F       		.uleb128 0xf
 2211 0434 B3020000 		.4byte	.LASF64
 2212 0438 04       		.byte	0x4
 2213 0439 C501     		.2byte	0x1c5
 2214 043b 6B000000 		.4byte	0x6b
 2215 043f 22       		.byte	0x22
 2216 0440 0F       		.uleb128 0xf
 2217 0441 AD050000 		.4byte	.LASF65
 2218 0445 04       		.byte	0x4
 2219 0446 CB01     		.2byte	0x1cb
 2220 0448 77000000 		.4byte	0x77
 2221 044c 24       		.byte	0x24
 2222 044d 0F       		.uleb128 0xf
 2223 044e 2E030000 		.4byte	.LASF66
 2224 0452 04       		.byte	0x4
 2225 0453 D001     		.2byte	0x1d0
 2226 0455 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 93


 2227 0459 26       		.byte	0x26
 2228 045a 0F       		.uleb128 0xf
 2229 045b 0C0B0000 		.4byte	.LASF67
 2230 045f 04       		.byte	0x4
 2231 0460 D501     		.2byte	0x1d5
 2232 0462 6B000000 		.4byte	0x6b
 2233 0466 27       		.byte	0x27
 2234 0467 0F       		.uleb128 0xf
 2235 0468 F1050000 		.4byte	.LASF68
 2236 046c 04       		.byte	0x4
 2237 046d DA01     		.2byte	0x1da
 2238 046f 6B000000 		.4byte	0x6b
 2239 0473 28       		.byte	0x28
 2240 0474 0F       		.uleb128 0xf
 2241 0475 2E050000 		.4byte	.LASF69
 2242 0479 04       		.byte	0x4
 2243 047a DF01     		.2byte	0x1df
 2244 047c 97020000 		.4byte	0x297
 2245 0480 2A       		.byte	0x2a
 2246 0481 0F       		.uleb128 0xf
 2247 0482 AB020000 		.4byte	.LASF70
 2248 0486 04       		.byte	0x4
 2249 0487 E401     		.2byte	0x1e4
 2250 0489 75030000 		.4byte	0x375
 2251 048d 62       		.byte	0x62
 2252 048e 0F       		.uleb128 0xf
 2253 048f AE000000 		.4byte	.LASF71
 2254 0493 04       		.byte	0x4
 2255 0494 E901     		.2byte	0x1e9
 2256 0496 6B000000 		.4byte	0x6b
 2257 049a 8A       		.byte	0x8a
 2258 049b 0F       		.uleb128 0xf
 2259 049c 04030000 		.4byte	.LASF72
 2260 04a0 04       		.byte	0x4
 2261 04a1 EE01     		.2byte	0x1ee
 2262 04a3 6B000000 		.4byte	0x6b
 2263 04a7 8B       		.byte	0x8b
 2264 04a8 0F       		.uleb128 0xf
 2265 04a9 9F060000 		.4byte	.LASF73
 2266 04ad 04       		.byte	0x4
 2267 04ae F301     		.2byte	0x1f3
 2268 04b0 77000000 		.4byte	0x77
 2269 04b4 8C       		.byte	0x8c
 2270 04b5 0F       		.uleb128 0xf
 2271 04b6 94050000 		.4byte	.LASF74
 2272 04ba 04       		.byte	0x4
 2273 04bb F801     		.2byte	0x1f8
 2274 04bd FB020000 		.4byte	0x2fb
 2275 04c1 8E       		.byte	0x8e
 2276 04c2 00       		.byte	0
 2277 04c3 0D       		.uleb128 0xd
 2278 04c4 83000000 		.4byte	0x83
 2279 04c8 D3040000 		.4byte	0x4d3
 2280 04cc 0E       		.uleb128 0xe
 2281 04cd B8010000 		.4byte	0x1b8
 2282 04d1 00       		.byte	0
 2283 04d2 00       		.byte	0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 94


 2284 04d3 0D       		.uleb128 0xd
 2285 04d4 6B000000 		.4byte	0x6b
 2286 04d8 E3040000 		.4byte	0x4e3
 2287 04dc 0E       		.uleb128 0xe
 2288 04dd B8010000 		.4byte	0x1b8
 2289 04e1 03       		.byte	0x3
 2290 04e2 00       		.byte	0
 2291 04e3 04       		.uleb128 0x4
 2292 04e4 2C070000 		.4byte	.LASF75
 2293 04e8 04       		.byte	0x4
 2294 04e9 F901     		.2byte	0x1f9
 2295 04eb 81030000 		.4byte	0x381
 2296 04ef 10       		.uleb128 0x10
 2297 04f0 1C       		.byte	0x1c
 2298 04f1 04       		.byte	0x4
 2299 04f2 FF01     		.2byte	0x1ff
 2300 04f4 6E050000 		.4byte	0x56e
 2301 04f8 0F       		.uleb128 0xf
 2302 04f9 E1050000 		.4byte	.LASF76
 2303 04fd 04       		.byte	0x4
 2304 04fe 0402     		.2byte	0x204
 2305 0500 6E050000 		.4byte	0x56e
 2306 0504 00       		.byte	0
 2307 0505 0F       		.uleb128 0xf
 2308 0506 C2040000 		.4byte	.LASF77
 2309 050a 04       		.byte	0x4
 2310 050b 0902     		.2byte	0x209
 2311 050d 6E050000 		.4byte	0x56e
 2312 0511 04       		.byte	0x4
 2313 0512 0F       		.uleb128 0xf
 2314 0513 6A030000 		.4byte	.LASF78
 2315 0517 04       		.byte	0x4
 2316 0518 0E02     		.2byte	0x20e
 2317 051a 6E050000 		.4byte	0x56e
 2318 051e 08       		.byte	0x8
 2319 051f 0F       		.uleb128 0xf
 2320 0520 B2070000 		.4byte	.LASF79
 2321 0524 04       		.byte	0x4
 2322 0525 1302     		.2byte	0x213
 2323 0527 6E050000 		.4byte	0x56e
 2324 052b 0C       		.byte	0xc
 2325 052c 0F       		.uleb128 0xf
 2326 052d 220A0000 		.4byte	.LASF80
 2327 0531 04       		.byte	0x4
 2328 0532 1802     		.2byte	0x218
 2329 0534 83000000 		.4byte	0x83
 2330 0538 10       		.byte	0x10
 2331 0539 0F       		.uleb128 0xf
 2332 053a 20060000 		.4byte	.LASF81
 2333 053e 04       		.byte	0x4
 2334 053f 1D02     		.2byte	0x21d
 2335 0541 83000000 		.4byte	0x83
 2336 0545 14       		.byte	0x14
 2337 0546 0F       		.uleb128 0xf
 2338 0547 12040000 		.4byte	.LASF82
 2339 054b 04       		.byte	0x4
 2340 054c 2202     		.2byte	0x222
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 95


 2341 054e 6B000000 		.4byte	0x6b
 2342 0552 18       		.byte	0x18
 2343 0553 0F       		.uleb128 0xf
 2344 0554 CF080000 		.4byte	.LASF83
 2345 0558 04       		.byte	0x4
 2346 0559 2702     		.2byte	0x227
 2347 055b 6B000000 		.4byte	0x6b
 2348 055f 19       		.byte	0x19
 2349 0560 0F       		.uleb128 0xf
 2350 0561 D6010000 		.4byte	.LASF84
 2351 0565 04       		.byte	0x4
 2352 0566 2C02     		.2byte	0x22c
 2353 0568 6B000000 		.4byte	0x6b
 2354 056c 1A       		.byte	0x1a
 2355 056d 00       		.byte	0
 2356 056e 06       		.uleb128 0x6
 2357 056f 04       		.byte	0x4
 2358 0570 B5000000 		.4byte	0xb5
 2359 0574 04       		.uleb128 0x4
 2360 0575 EB020000 		.4byte	.LASF85
 2361 0579 04       		.byte	0x4
 2362 057a 2D02     		.2byte	0x22d
 2363 057c EF040000 		.4byte	0x4ef
 2364 0580 10       		.uleb128 0x10
 2365 0581 1C       		.byte	0x1c
 2366 0582 04       		.byte	0x4
 2367 0583 6002     		.2byte	0x260
 2368 0585 FF050000 		.4byte	0x5ff
 2369 0589 0F       		.uleb128 0xf
 2370 058a 54050000 		.4byte	.LASF86
 2371 058e 04       		.byte	0x4
 2372 058f 6902     		.2byte	0x269
 2373 0591 FF050000 		.4byte	0x5ff
 2374 0595 00       		.byte	0
 2375 0596 0F       		.uleb128 0xf
 2376 0597 9D090000 		.4byte	.LASF87
 2377 059b 04       		.byte	0x4
 2378 059c 7002     		.2byte	0x270
 2379 059e 06060000 		.4byte	0x606
 2380 05a2 04       		.byte	0x4
 2381 05a3 0F       		.uleb128 0xf
 2382 05a4 BB060000 		.4byte	.LASF88
 2383 05a8 04       		.byte	0x4
 2384 05a9 7602     		.2byte	0x276
 2385 05ab 08060000 		.4byte	0x608
 2386 05af 08       		.byte	0x8
 2387 05b0 0F       		.uleb128 0xf
 2388 05b1 FB050000 		.4byte	.LASF89
 2389 05b5 04       		.byte	0x4
 2390 05b6 7C02     		.2byte	0x27c
 2391 05b8 06060000 		.4byte	0x606
 2392 05bc 0C       		.byte	0xc
 2393 05bd 0F       		.uleb128 0xf
 2394 05be 15090000 		.4byte	.LASF90
 2395 05c2 04       		.byte	0x4
 2396 05c3 8302     		.2byte	0x283
 2397 05c5 0E060000 		.4byte	0x60e
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 96


 2398 05c9 10       		.byte	0x10
 2399 05ca 0F       		.uleb128 0xf
 2400 05cb 8A090000 		.4byte	.LASF91
 2401 05cf 04       		.byte	0x4
 2402 05d0 8802     		.2byte	0x288
 2403 05d2 83000000 		.4byte	0x83
 2404 05d6 14       		.byte	0x14
 2405 05d7 0F       		.uleb128 0xf
 2406 05d8 BE030000 		.4byte	.LASF92
 2407 05dc 04       		.byte	0x4
 2408 05dd 8F02     		.2byte	0x28f
 2409 05df 77000000 		.4byte	0x77
 2410 05e3 18       		.byte	0x18
 2411 05e4 0F       		.uleb128 0xf
 2412 05e5 14030000 		.4byte	.LASF93
 2413 05e9 04       		.byte	0x4
 2414 05ea 9602     		.2byte	0x296
 2415 05ec 6B000000 		.4byte	0x6b
 2416 05f0 1A       		.byte	0x1a
 2417 05f1 0F       		.uleb128 0xf
 2418 05f2 F2040000 		.4byte	.LASF94
 2419 05f6 04       		.byte	0x4
 2420 05f7 A002     		.2byte	0x2a0
 2421 05f9 6B000000 		.4byte	0x6b
 2422 05fd 1B       		.byte	0x1b
 2423 05fe 00       		.byte	0
 2424 05ff 06       		.uleb128 0x6
 2425 0600 04       		.byte	0x4
 2426 0601 05060000 		.4byte	0x605
 2427 0605 12       		.uleb128 0x12
 2428 0606 13       		.uleb128 0x13
 2429 0607 04       		.byte	0x4
 2430 0608 06       		.uleb128 0x6
 2431 0609 04       		.byte	0x4
 2432 060a 1B030000 		.4byte	0x31b
 2433 060e 06       		.uleb128 0x6
 2434 060f 04       		.byte	0x4
 2435 0610 6B000000 		.4byte	0x6b
 2436 0614 04       		.uleb128 0x4
 2437 0615 82030000 		.4byte	.LASF95
 2438 0619 04       		.byte	0x4
 2439 061a A102     		.2byte	0x2a1
 2440 061c 80050000 		.4byte	0x580
 2441 0620 10       		.uleb128 0x10
 2442 0621 70       		.byte	0x70
 2443 0622 04       		.byte	0x4
 2444 0623 A702     		.2byte	0x2a7
 2445 0625 37060000 		.4byte	0x637
 2446 0629 0F       		.uleb128 0xf
 2447 062a 0A0C0000 		.4byte	.LASF96
 2448 062e 04       		.byte	0x4
 2449 062f AC02     		.2byte	0x2ac
 2450 0631 37060000 		.4byte	0x637
 2451 0635 00       		.byte	0
 2452 0636 00       		.byte	0
 2453 0637 0D       		.uleb128 0xd
 2454 0638 14060000 		.4byte	0x614
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 97


 2455 063c 47060000 		.4byte	0x647
 2456 0640 0E       		.uleb128 0xe
 2457 0641 B8010000 		.4byte	0x1b8
 2458 0645 03       		.byte	0x3
 2459 0646 00       		.byte	0
 2460 0647 04       		.uleb128 0x4
 2461 0648 61050000 		.4byte	.LASF97
 2462 064c 04       		.byte	0x4
 2463 064d AD02     		.2byte	0x2ad
 2464 064f 20060000 		.4byte	0x620
 2465 0653 02       		.uleb128 0x2
 2466 0654 08       		.byte	0x8
 2467 0655 04       		.byte	0x4
 2468 0656 8D060000 		.4byte	.LASF98
 2469 065a 14       		.uleb128 0x14
 2470 065b A6030000 		.4byte	.LASF101
 2471 065f 01       		.byte	0x1
 2472 0660 6209     		.2byte	0x962
 2473 0662 6B000000 		.4byte	0x6b
 2474 0666 00000000 		.4byte	.LFB20
 2475 066a 84000000 		.4byte	.LFE20-.LFB20
 2476 066e 01       		.uleb128 0x1
 2477 066f 9C       		.byte	0x9c
 2478 0670 A5060000 		.4byte	0x6a5
 2479 0674 15       		.uleb128 0x15
 2480 0675 680B0000 		.4byte	.LASF99
 2481 0679 01       		.byte	0x1
 2482 067a 6209     		.2byte	0x962
 2483 067c 83000000 		.4byte	0x83
 2484 0680 00000000 		.4byte	.LLST0
 2485 0684 15       		.uleb128 0x15
 2486 0685 24040000 		.4byte	.LASF100
 2487 0689 01       		.byte	0x1
 2488 068a 6209     		.2byte	0x962
 2489 068c 83000000 		.4byte	0x83
 2490 0690 2C000000 		.4byte	.LLST1
 2491 0694 16       		.uleb128 0x16
 2492 0695 1D030000 		.4byte	.LASF103
 2493 0699 01       		.byte	0x1
 2494 069a 6409     		.2byte	0x964
 2495 069c 6B000000 		.4byte	0x6b
 2496 06a0 58000000 		.4byte	.LLST2
 2497 06a4 00       		.byte	0
 2498 06a5 14       		.uleb128 0x14
 2499 06a6 B7010000 		.4byte	.LASF102
 2500 06aa 01       		.byte	0x1
 2501 06ab AE09     		.2byte	0x9ae
 2502 06ad 6B000000 		.4byte	0x6b
 2503 06b1 00000000 		.4byte	.LFB21
 2504 06b5 42000000 		.4byte	.LFE21-.LFB21
 2505 06b9 01       		.uleb128 0x1
 2506 06ba 9C       		.byte	0x9c
 2507 06bb 10070000 		.4byte	0x710
 2508 06bf 15       		.uleb128 0x15
 2509 06c0 680B0000 		.4byte	.LASF99
 2510 06c4 01       		.byte	0x1
 2511 06c5 AE09     		.2byte	0x9ae
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 98


 2512 06c7 83000000 		.4byte	0x83
 2513 06cb 77000000 		.4byte	.LLST3
 2514 06cf 15       		.uleb128 0x15
 2515 06d0 1D030000 		.4byte	.LASF103
 2516 06d4 01       		.byte	0x1
 2517 06d5 AE09     		.2byte	0x9ae
 2518 06d7 6B000000 		.4byte	0x6b
 2519 06db BC000000 		.4byte	.LLST4
 2520 06df 16       		.uleb128 0x16
 2521 06e0 17010000 		.4byte	.LASF104
 2522 06e4 01       		.byte	0x1
 2523 06e5 B009     		.2byte	0x9b0
 2524 06e7 83000000 		.4byte	0x83
 2525 06eb F6000000 		.4byte	.LLST5
 2526 06ef 16       		.uleb128 0x16
 2527 06f0 21010000 		.4byte	.LASF105
 2528 06f4 01       		.byte	0x1
 2529 06f5 B109     		.2byte	0x9b1
 2530 06f7 83000000 		.4byte	0x83
 2531 06fb 20010000 		.4byte	.LLST6
 2532 06ff 16       		.uleb128 0x16
 2533 0700 1A0B0000 		.4byte	.LASF106
 2534 0704 01       		.byte	0x1
 2535 0705 B209     		.2byte	0x9b2
 2536 0707 83000000 		.4byte	0x83
 2537 070b 49010000 		.4byte	.LLST7
 2538 070f 00       		.byte	0
 2539 0710 17       		.uleb128 0x17
 2540 0711 3B000000 		.4byte	.LASF149
 2541 0715 01       		.byte	0x1
 2542 0716 0003     		.2byte	0x300
 2543 0718 00000000 		.4byte	.LFB7
 2544 071c 28000000 		.4byte	.LFE7-.LFB7
 2545 0720 01       		.uleb128 0x1
 2546 0721 9C       		.byte	0x9c
 2547 0722 40070000 		.4byte	0x740
 2548 0726 16       		.uleb128 0x16
 2549 0727 250B0000 		.4byte	.LASF107
 2550 072b 01       		.byte	0x1
 2551 072c 0203     		.2byte	0x302
 2552 072e 83000000 		.4byte	0x83
 2553 0732 5C010000 		.4byte	.LLST8
 2554 0736 18       		.uleb128 0x18
 2555 0737 1A000000 		.4byte	.LVL29
 2556 073b 560F0000 		.4byte	0xf56
 2557 073f 00       		.byte	0
 2558 0740 19       		.uleb128 0x19
 2559 0741 30010000 		.4byte	.LASF182
 2560 0745 01       		.byte	0x1
 2561 0746 E9       		.byte	0xe9
 2562 0747 83000000 		.4byte	0x83
 2563 074b 00000000 		.4byte	.LFB1
 2564 074f 10000000 		.4byte	.LFE1-.LFB1
 2565 0753 01       		.uleb128 0x1
 2566 0754 9C       		.byte	0x9c
 2567 0755 1A       		.uleb128 0x1a
 2568 0756 B8070000 		.4byte	.LASF110
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 99


 2569 075a 01       		.byte	0x1
 2570 075b 1D01     		.2byte	0x11d
 2571 075d A4000000 		.4byte	0xa4
 2572 0761 00000000 		.4byte	.LFB2
 2573 0765 40000000 		.4byte	.LFE2-.LFB2
 2574 0769 01       		.uleb128 0x1
 2575 076a 9C       		.byte	0x9c
 2576 076b 99070000 		.4byte	0x799
 2577 076f 15       		.uleb128 0x15
 2578 0770 9A0B0000 		.4byte	.LASF108
 2579 0774 01       		.byte	0x1
 2580 0775 1D01     		.2byte	0x11d
 2581 0777 83000000 		.4byte	0x83
 2582 077b 7A010000 		.4byte	.LLST9
 2583 077f 16       		.uleb128 0x16
 2584 0780 8D0B0000 		.4byte	.LASF109
 2585 0784 01       		.byte	0x1
 2586 0785 1F01     		.2byte	0x11f
 2587 0787 A4000000 		.4byte	0xa4
 2588 078b 9B010000 		.4byte	.LLST10
 2589 078f 18       		.uleb128 0x18
 2590 0790 38000000 		.4byte	.LVL32
 2591 0794 620F0000 		.4byte	0xf62
 2592 0798 00       		.byte	0
 2593 0799 1A       		.uleb128 0x1a
 2594 079a 77050000 		.4byte	.LASF111
 2595 079e 01       		.byte	0x1
 2596 079f 7001     		.2byte	0x170
 2597 07a1 A4000000 		.4byte	0xa4
 2598 07a5 00000000 		.4byte	.LFB3
 2599 07a9 2C000000 		.4byte	.LFE3-.LFB3
 2600 07ad 01       		.uleb128 0x1
 2601 07ae 9C       		.byte	0x9c
 2602 07af CD070000 		.4byte	0x7cd
 2603 07b3 16       		.uleb128 0x16
 2604 07b4 30000000 		.4byte	.LASF112
 2605 07b8 01       		.byte	0x1
 2606 07b9 7201     		.2byte	0x172
 2607 07bb A4000000 		.4byte	0xa4
 2608 07bf B9010000 		.4byte	.LLST11
 2609 07c3 18       		.uleb128 0x18
 2610 07c4 16000000 		.4byte	.LVL35
 2611 07c8 6E0F0000 		.4byte	0xf6e
 2612 07cc 00       		.byte	0
 2613 07cd 1A       		.uleb128 0x1a
 2614 07ce 0A0A0000 		.4byte	.LASF113
 2615 07d2 01       		.byte	0x1
 2616 07d3 AE01     		.2byte	0x1ae
 2617 07d5 A4000000 		.4byte	0xa4
 2618 07d9 00000000 		.4byte	.LFB4
 2619 07dd 48000000 		.4byte	.LFE4-.LFB4
 2620 07e1 01       		.uleb128 0x1
 2621 07e2 9C       		.byte	0x9c
 2622 07e3 25080000 		.4byte	0x825
 2623 07e7 16       		.uleb128 0x16
 2624 07e8 30000000 		.4byte	.LASF112
 2625 07ec 01       		.byte	0x1
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 100


 2626 07ed B001     		.2byte	0x1b0
 2627 07ef A4000000 		.4byte	0xa4
 2628 07f3 D8010000 		.4byte	.LLST12
 2629 07f7 16       		.uleb128 0x16
 2630 07f8 41060000 		.4byte	.LASF114
 2631 07fc 01       		.byte	0x1
 2632 07fd B201     		.2byte	0x1b2
 2633 07ff 83000000 		.4byte	0x83
 2634 0803 26020000 		.4byte	.LLST13
 2635 0807 1B       		.uleb128 0x1b
 2636 0808 18000000 		.4byte	.LVL40
 2637 080c 55070000 		.4byte	0x755
 2638 0810 1B080000 		.4byte	0x81b
 2639 0814 1C       		.uleb128 0x1c
 2640 0815 01       		.uleb128 0x1
 2641 0816 50       		.byte	0x50
 2642 0817 02       		.uleb128 0x2
 2643 0818 74       		.byte	0x74
 2644 0819 00       		.sleb128 0
 2645 081a 00       		.byte	0
 2646 081b 18       		.uleb128 0x18
 2647 081c 32000000 		.4byte	.LVL41
 2648 0820 99070000 		.4byte	0x799
 2649 0824 00       		.byte	0
 2650 0825 1D       		.uleb128 0x1d
 2651 0826 75090000 		.4byte	.LASF121
 2652 082a 01       		.byte	0x1
 2653 082b 8F02     		.2byte	0x28f
 2654 082d 00000000 		.4byte	.LFB6
 2655 0831 A0000000 		.4byte	.LFE6-.LFB6
 2656 0835 01       		.uleb128 0x1
 2657 0836 9C       		.byte	0x9c
 2658 0837 EF080000 		.4byte	0x8ef
 2659 083b 15       		.uleb128 0x15
 2660 083c 9A0B0000 		.4byte	.LASF108
 2661 0840 01       		.byte	0x1
 2662 0841 8F02     		.2byte	0x28f
 2663 0843 83000000 		.4byte	0x83
 2664 0847 39020000 		.4byte	.LLST14
 2665 084b 15       		.uleb128 0x15
 2666 084c 22000000 		.4byte	.LASF115
 2667 0850 01       		.byte	0x1
 2668 0851 8F02     		.2byte	0x28f
 2669 0853 83000000 		.4byte	0x83
 2670 0857 5A020000 		.4byte	.LLST15
 2671 085b 15       		.uleb128 0x15
 2672 085c FA090000 		.4byte	.LASF116
 2673 0860 01       		.byte	0x1
 2674 0861 8F02     		.2byte	0x28f
 2675 0863 83000000 		.4byte	0x83
 2676 0867 7B020000 		.4byte	.LLST16
 2677 086b 1E       		.uleb128 0x1e
 2678 086c 7D010000 		.4byte	.LASF117
 2679 0870 01       		.byte	0x1
 2680 0871 9102     		.2byte	0x291
 2681 0873 83000000 		.4byte	0x83
 2682 0877 01       		.byte	0x1
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 101


 2683 0878 16       		.uleb128 0x16
 2684 0879 000A0000 		.4byte	.LASF118
 2685 087d 01       		.byte	0x1
 2686 087e 9202     		.2byte	0x292
 2687 0880 83000000 		.4byte	0x83
 2688 0884 A7020000 		.4byte	.LLST17
 2689 0888 16       		.uleb128 0x16
 2690 0889 08010000 		.4byte	.LASF119
 2691 088d 01       		.byte	0x1
 2692 088e 9302     		.2byte	0x293
 2693 0890 6B000000 		.4byte	0x6b
 2694 0894 C6020000 		.4byte	.LLST18
 2695 0898 16       		.uleb128 0x16
 2696 0899 97090000 		.4byte	.LASF120
 2697 089d 01       		.byte	0x1
 2698 089e 9402     		.2byte	0x294
 2699 08a0 EF080000 		.4byte	0x8ef
 2700 08a4 EF020000 		.4byte	.LLST19
 2701 08a8 18       		.uleb128 0x18
 2702 08a9 1E000000 		.4byte	.LVL51
 2703 08ad 7A0F0000 		.4byte	0xf7a
 2704 08b1 18       		.uleb128 0x18
 2705 08b2 3E000000 		.4byte	.LVL52
 2706 08b6 850F0000 		.4byte	0xf85
 2707 08ba 18       		.uleb128 0x18
 2708 08bb 50000000 		.4byte	.LVL53
 2709 08bf 7A0F0000 		.4byte	0xf7a
 2710 08c3 18       		.uleb128 0x18
 2711 08c4 70000000 		.4byte	.LVL54
 2712 08c8 850F0000 		.4byte	0xf85
 2713 08cc 18       		.uleb128 0x18
 2714 08cd 76000000 		.4byte	.LVL55
 2715 08d1 7A0F0000 		.4byte	0xf7a
 2716 08d5 18       		.uleb128 0x18
 2717 08d6 88000000 		.4byte	.LVL56
 2718 08da 850F0000 		.4byte	0xf85
 2719 08de 1F       		.uleb128 0x1f
 2720 08df 90000000 		.4byte	.LVL57
 2721 08e3 900F0000 		.4byte	0xf90
 2722 08e7 1C       		.uleb128 0x1c
 2723 08e8 01       		.uleb128 0x1
 2724 08e9 50       		.byte	0x50
 2725 08ea 02       		.uleb128 0x2
 2726 08eb 74       		.byte	0x74
 2727 08ec 00       		.sleb128 0
 2728 08ed 00       		.byte	0
 2729 08ee 00       		.byte	0
 2730 08ef 06       		.uleb128 0x6
 2731 08f0 04       		.byte	0x4
 2732 08f1 F5080000 		.4byte	0x8f5
 2733 08f5 20       		.uleb128 0x20
 2734 08f6 74050000 		.4byte	0x574
 2735 08fa 1D       		.uleb128 0x1d
 2736 08fb 4F0A0000 		.4byte	.LASF122
 2737 08ff 01       		.byte	0x1
 2738 0900 8B03     		.2byte	0x38b
 2739 0902 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 102


 2740 0906 50000000 		.4byte	.LFE8-.LFB8
 2741 090a 01       		.uleb128 0x1
 2742 090b 9C       		.byte	0x9c
 2743 090c 3C090000 		.4byte	0x93c
 2744 0910 15       		.uleb128 0x15
 2745 0911 2B010000 		.4byte	.LASF123
 2746 0915 01       		.byte	0x1
 2747 0916 8B03     		.2byte	0x38b
 2748 0918 1C010000 		.4byte	0x11c
 2749 091c 02030000 		.4byte	.LLST20
 2750 0920 18       		.uleb128 0x18
 2751 0921 14000000 		.4byte	.LVL64
 2752 0925 10070000 		.4byte	0x710
 2753 0929 18       		.uleb128 0x18
 2754 092a 26000000 		.4byte	.LVL66
 2755 092e 9C0F0000 		.4byte	0xf9c
 2756 0932 18       		.uleb128 0x18
 2757 0933 2E000000 		.4byte	.LVL67
 2758 0937 A70F0000 		.4byte	0xfa7
 2759 093b 00       		.byte	0
 2760 093c 1D       		.uleb128 0x1d
 2761 093d 55000000 		.4byte	.LASF124
 2762 0941 01       		.byte	0x1
 2763 0942 EE03     		.2byte	0x3ee
 2764 0944 00000000 		.4byte	.LFB9
 2765 0948 44000000 		.4byte	.LFE9-.LFB9
 2766 094c 01       		.uleb128 0x1
 2767 094d 9C       		.byte	0x9c
 2768 094e 8C090000 		.4byte	0x98c
 2769 0952 16       		.uleb128 0x16
 2770 0953 97090000 		.4byte	.LASF120
 2771 0957 01       		.byte	0x1
 2772 0958 F003     		.2byte	0x3f0
 2773 095a EF080000 		.4byte	0x8ef
 2774 095e 3C030000 		.4byte	.LLST21
 2775 0962 16       		.uleb128 0x16
 2776 0963 AD010000 		.4byte	.LASF125
 2777 0967 01       		.byte	0x1
 2778 0968 F103     		.2byte	0x3f1
 2779 096a 83000000 		.4byte	0x83
 2780 096e 4F030000 		.4byte	.LLST22
 2781 0972 16       		.uleb128 0x16
 2782 0973 FF000000 		.4byte	.LASF126
 2783 0977 01       		.byte	0x1
 2784 0978 F203     		.2byte	0x3f2
 2785 097a 83000000 		.4byte	0x83
 2786 097e 6E030000 		.4byte	.LLST23
 2787 0982 18       		.uleb128 0x18
 2788 0983 3E000000 		.4byte	.LVL80
 2789 0987 B30F0000 		.4byte	0xfb3
 2790 098b 00       		.byte	0
 2791 098c 1A       		.uleb128 0x1a
 2792 098d C8040000 		.4byte	.LASF127
 2793 0991 01       		.byte	0x1
 2794 0992 2804     		.2byte	0x428
 2795 0994 A4000000 		.4byte	0xa4
 2796 0998 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 103


 2797 099c 24000000 		.4byte	.LFE10-.LFB10
 2798 09a0 01       		.uleb128 0x1
 2799 09a1 9C       		.byte	0x9c
 2800 09a2 C0090000 		.4byte	0x9c0
 2801 09a6 16       		.uleb128 0x16
 2802 09a7 EF090000 		.4byte	.LASF128
 2803 09ab 01       		.byte	0x1
 2804 09ac 2A04     		.2byte	0x42a
 2805 09ae A4000000 		.4byte	0xa4
 2806 09b2 97030000 		.4byte	.LLST24
 2807 09b6 18       		.uleb128 0x18
 2808 09b7 0E000000 		.4byte	.LVL82
 2809 09bb 10070000 		.4byte	0x710
 2810 09bf 00       		.byte	0
 2811 09c0 1D       		.uleb128 0x1d
 2812 09c1 EE0A0000 		.4byte	.LASF129
 2813 09c5 01       		.byte	0x1
 2814 09c6 6404     		.2byte	0x464
 2815 09c8 00000000 		.4byte	.LFB11
 2816 09cc 78000000 		.4byte	.LFE11-.LFB11
 2817 09d0 01       		.uleb128 0x1
 2818 09d1 9C       		.byte	0x9c
 2819 09d2 F9090000 		.4byte	0x9f9
 2820 09d6 16       		.uleb128 0x16
 2821 09d7 D0060000 		.4byte	.LASF130
 2822 09db 01       		.byte	0x1
 2823 09dc 6C04     		.2byte	0x46c
 2824 09de A4000000 		.4byte	0xa4
 2825 09e2 B6030000 		.4byte	.LLST25
 2826 09e6 18       		.uleb128 0x18
 2827 09e7 14000000 		.4byte	.LVL84
 2828 09eb 55070000 		.4byte	0x755
 2829 09ef 18       		.uleb128 0x18
 2830 09f0 2A000000 		.4byte	.LVL86
 2831 09f4 99070000 		.4byte	0x799
 2832 09f8 00       		.byte	0
 2833 09f9 1D       		.uleb128 0x1d
 2834 09fa 09070000 		.4byte	.LASF131
 2835 09fe 01       		.byte	0x1
 2836 09ff B104     		.2byte	0x4b1
 2837 0a01 00000000 		.4byte	.LFB12
 2838 0a05 08000000 		.4byte	.LFE12-.LFB12
 2839 0a09 01       		.uleb128 0x1
 2840 0a0a 9C       		.byte	0x9c
 2841 0a0b 310A0000 		.4byte	0xa31
 2842 0a0f 15       		.uleb128 0x15
 2843 0a10 F0080000 		.4byte	.LASF132
 2844 0a14 01       		.byte	0x1
 2845 0a15 B104     		.2byte	0x4b1
 2846 0a17 C6000000 		.4byte	0xc6
 2847 0a1b 01040000 		.4byte	.LLST26
 2848 0a1f 1F       		.uleb128 0x1f
 2849 0a20 06000000 		.4byte	.LVL93
 2850 0a24 BE0F0000 		.4byte	0xfbe
 2851 0a28 1C       		.uleb128 0x1c
 2852 0a29 01       		.uleb128 0x1
 2853 0a2a 50       		.byte	0x50
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 104


 2854 0a2b 03       		.uleb128 0x3
 2855 0a2c F3       		.byte	0xf3
 2856 0a2d 01       		.uleb128 0x1
 2857 0a2e 50       		.byte	0x50
 2858 0a2f 00       		.byte	0
 2859 0a30 00       		.byte	0
 2860 0a31 1D       		.uleb128 0x1d
 2861 0a32 40010000 		.4byte	.LASF133
 2862 0a36 01       		.byte	0x1
 2863 0a37 C804     		.2byte	0x4c8
 2864 0a39 00000000 		.4byte	.LFB13
 2865 0a3d 30000000 		.4byte	.LFE13-.LFB13
 2866 0a41 01       		.uleb128 0x1
 2867 0a42 9C       		.byte	0x9c
 2868 0a43 580A0000 		.4byte	0xa58
 2869 0a47 15       		.uleb128 0x15
 2870 0a48 70030000 		.4byte	.LASF134
 2871 0a4c 01       		.byte	0x1
 2872 0a4d C804     		.2byte	0x4c8
 2873 0a4f 83000000 		.4byte	0x83
 2874 0a53 22040000 		.4byte	.LLST27
 2875 0a57 00       		.byte	0
 2876 0a58 1D       		.uleb128 0x1d
 2877 0a59 79040000 		.4byte	.LASF135
 2878 0a5d 01       		.byte	0x1
 2879 0a5e 0C05     		.2byte	0x50c
 2880 0a60 00000000 		.4byte	.LFB14
 2881 0a64 14000000 		.4byte	.LFE14-.LFB14
 2882 0a68 01       		.uleb128 0x1
 2883 0a69 9C       		.byte	0x9c
 2884 0a6a 8F0A0000 		.4byte	0xa8f
 2885 0a6e 15       		.uleb128 0x15
 2886 0a6f 400A0000 		.4byte	.LASF34
 2887 0a73 01       		.byte	0x1
 2888 0a74 0C05     		.2byte	0x50c
 2889 0a76 83000000 		.4byte	0x83
 2890 0a7a 50040000 		.4byte	.LLST28
 2891 0a7e 16       		.uleb128 0x16
 2892 0a7f 250B0000 		.4byte	.LASF107
 2893 0a83 01       		.byte	0x1
 2894 0a84 0F05     		.2byte	0x50f
 2895 0a86 83000000 		.4byte	0x83
 2896 0a8a 7E040000 		.4byte	.LLST29
 2897 0a8e 00       		.byte	0
 2898 0a8f 1D       		.uleb128 0x1d
 2899 0a90 25060000 		.4byte	.LASF136
 2900 0a94 01       		.byte	0x1
 2901 0a95 6005     		.2byte	0x560
 2902 0a97 00000000 		.4byte	.LFB15
 2903 0a9b 12000000 		.4byte	.LFE15-.LFB15
 2904 0a9f 01       		.uleb128 0x1
 2905 0aa0 9C       		.byte	0x9c
 2906 0aa1 EB0A0000 		.4byte	0xaeb
 2907 0aa5 15       		.uleb128 0x15
 2908 0aa6 400A0000 		.4byte	.LASF34
 2909 0aaa 01       		.byte	0x1
 2910 0aab 6005     		.2byte	0x560
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 105


 2911 0aad 83000000 		.4byte	0x83
 2912 0ab1 A7040000 		.4byte	.LLST30
 2913 0ab5 15       		.uleb128 0x15
 2914 0ab6 70030000 		.4byte	.LASF134
 2915 0aba 01       		.byte	0x1
 2916 0abb 6005     		.2byte	0x560
 2917 0abd 83000000 		.4byte	0x83
 2918 0ac1 D3040000 		.4byte	.LLST31
 2919 0ac5 1B       		.uleb128 0x1b
 2920 0ac6 0A000000 		.4byte	.LVL105
 2921 0aca 310A0000 		.4byte	0xa31
 2922 0ace DA0A0000 		.4byte	0xada
 2923 0ad2 1C       		.uleb128 0x1c
 2924 0ad3 01       		.uleb128 0x1
 2925 0ad4 50       		.byte	0x50
 2926 0ad5 03       		.uleb128 0x3
 2927 0ad6 F3       		.byte	0xf3
 2928 0ad7 01       		.uleb128 0x1
 2929 0ad8 51       		.byte	0x51
 2930 0ad9 00       		.byte	0
 2931 0ada 1F       		.uleb128 0x1f
 2932 0adb 10000000 		.4byte	.LVL106
 2933 0adf 580A0000 		.4byte	0xa58
 2934 0ae3 1C       		.uleb128 0x1c
 2935 0ae4 01       		.uleb128 0x1
 2936 0ae5 50       		.byte	0x50
 2937 0ae6 02       		.uleb128 0x2
 2938 0ae7 74       		.byte	0x74
 2939 0ae8 00       		.sleb128 0
 2940 0ae9 00       		.byte	0
 2941 0aea 00       		.byte	0
 2942 0aeb 1A       		.uleb128 0x1a
 2943 0aec 45040000 		.4byte	.LASF137
 2944 0af0 01       		.byte	0x1
 2945 0af1 9405     		.2byte	0x594
 2946 0af3 A4000000 		.4byte	0xa4
 2947 0af7 00000000 		.4byte	.LFB16
 2948 0afb 1C000000 		.4byte	.LFE16-.LFB16
 2949 0aff 01       		.uleb128 0x1
 2950 0b00 9C       		.byte	0x9c
 2951 0b01 3D0B0000 		.4byte	0xb3d
 2952 0b05 15       		.uleb128 0x15
 2953 0b06 9A0B0000 		.4byte	.LASF108
 2954 0b0a 01       		.byte	0x1
 2955 0b0b 9405     		.2byte	0x594
 2956 0b0d 83000000 		.4byte	0x83
 2957 0b11 F4040000 		.4byte	.LLST32
 2958 0b15 16       		.uleb128 0x16
 2959 0b16 1E050000 		.4byte	.LASF138
 2960 0b1a 01       		.byte	0x1
 2961 0b1b 9605     		.2byte	0x596
 2962 0b1d A4000000 		.4byte	0xa4
 2963 0b21 36050000 		.4byte	.LLST33
 2964 0b25 1F       		.uleb128 0x1f
 2965 0b26 1A000000 		.4byte	.LVL114
 2966 0b2a C90F0000 		.4byte	0xfc9
 2967 0b2e 1C       		.uleb128 0x1c
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 106


 2968 0b2f 01       		.uleb128 0x1
 2969 0b30 50       		.byte	0x50
 2970 0b31 03       		.uleb128 0x3
 2971 0b32 F3       		.byte	0xf3
 2972 0b33 01       		.uleb128 0x1
 2973 0b34 50       		.byte	0x50
 2974 0b35 1C       		.uleb128 0x1c
 2975 0b36 01       		.uleb128 0x1
 2976 0b37 51       		.byte	0x51
 2977 0b38 02       		.uleb128 0x2
 2978 0b39 08       		.byte	0x8
 2979 0b3a 55       		.byte	0x55
 2980 0b3b 00       		.byte	0
 2981 0b3c 00       		.byte	0
 2982 0b3d 1A       		.uleb128 0x1a
 2983 0b3e 37050000 		.4byte	.LASF139
 2984 0b42 01       		.byte	0x1
 2985 0b43 0506     		.2byte	0x605
 2986 0b45 A4000000 		.4byte	0xa4
 2987 0b49 00000000 		.4byte	.LFB17
 2988 0b4d 1A000000 		.4byte	.LFE17-.LFB17
 2989 0b51 01       		.uleb128 0x1
 2990 0b52 9C       		.byte	0x9c
 2991 0b53 880B0000 		.4byte	0xb88
 2992 0b57 16       		.uleb128 0x16
 2993 0b58 1E050000 		.4byte	.LASF138
 2994 0b5c 01       		.byte	0x1
 2995 0b5d 0706     		.2byte	0x607
 2996 0b5f A4000000 		.4byte	0xa4
 2997 0b63 60050000 		.4byte	.LLST34
 2998 0b67 16       		.uleb128 0x16
 2999 0b68 41060000 		.4byte	.LASF114
 3000 0b6c 01       		.byte	0x1
 3001 0b6d 0806     		.2byte	0x608
 3002 0b6f 83000000 		.4byte	0x83
 3003 0b73 8A050000 		.4byte	.LLST35
 3004 0b77 1F       		.uleb128 0x1f
 3005 0b78 0E000000 		.4byte	.LVL117
 3006 0b7c EB0A0000 		.4byte	0xaeb
 3007 0b80 1C       		.uleb128 0x1c
 3008 0b81 01       		.uleb128 0x1
 3009 0b82 50       		.byte	0x50
 3010 0b83 02       		.uleb128 0x2
 3011 0b84 74       		.byte	0x74
 3012 0b85 00       		.sleb128 0
 3013 0b86 00       		.byte	0
 3014 0b87 00       		.byte	0
 3015 0b88 1D       		.uleb128 0x1d
 3016 0b89 DC010000 		.4byte	.LASF140
 3017 0b8d 01       		.byte	0x1
 3018 0b8e 080A     		.2byte	0xa08
 3019 0b90 00000000 		.4byte	.LFB22
 3020 0b94 40000000 		.4byte	.LFE22-.LFB22
 3021 0b98 01       		.uleb128 0x1
 3022 0b99 9C       		.byte	0x9c
 3023 0b9a E90B0000 		.4byte	0xbe9
 3024 0b9e 16       		.uleb128 0x16
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 107


 3025 0b9f 41060000 		.4byte	.LASF114
 3026 0ba3 01       		.byte	0x1
 3027 0ba4 0A0A     		.2byte	0xa0a
 3028 0ba6 83000000 		.4byte	0x83
 3029 0baa A9050000 		.4byte	.LLST36
 3030 0bae 16       		.uleb128 0x16
 3031 0baf 4B060000 		.4byte	.LASF141
 3032 0bb3 01       		.byte	0x1
 3033 0bb4 0B0A     		.2byte	0xa0b
 3034 0bb6 83000000 		.4byte	0x83
 3035 0bba C8050000 		.4byte	.LLST37
 3036 0bbe 16       		.uleb128 0x16
 3037 0bbf 340A0000 		.4byte	.LASF142
 3038 0bc3 01       		.byte	0x1
 3039 0bc4 170A     		.2byte	0xa17
 3040 0bc6 EF080000 		.4byte	0x8ef
 3041 0bca E7050000 		.4byte	.LLST38
 3042 0bce 1F       		.uleb128 0x1f
 3043 0bcf 20000000 		.4byte	.LVL126
 3044 0bd3 D50F0000 		.4byte	0xfd5
 3045 0bd7 1C       		.uleb128 0x1c
 3046 0bd8 01       		.uleb128 0x1
 3047 0bd9 50       		.byte	0x50
 3048 0bda 0C       		.uleb128 0xc
 3049 0bdb 74       		.byte	0x74
 3050 0bdc 00       		.sleb128 0
 3051 0bdd 33       		.byte	0x33
 3052 0bde 24       		.byte	0x24
 3053 0bdf 74       		.byte	0x74
 3054 0be0 00       		.sleb128 0
 3055 0be1 1C       		.byte	0x1c
 3056 0be2 32       		.byte	0x32
 3057 0be3 24       		.byte	0x24
 3058 0be4 76       		.byte	0x76
 3059 0be5 00       		.sleb128 0
 3060 0be6 22       		.byte	0x22
 3061 0be7 00       		.byte	0
 3062 0be8 00       		.byte	0
 3063 0be9 1A       		.uleb128 0x1a
 3064 0bea 00000000 		.4byte	.LASF143
 3065 0bee 01       		.byte	0x1
 3066 0bef 5A0A     		.2byte	0xa5a
 3067 0bf1 83000000 		.4byte	0x83
 3068 0bf5 00000000 		.4byte	.LFB23
 3069 0bf9 14000000 		.4byte	.LFE23-.LFB23
 3070 0bfd 01       		.uleb128 0x1
 3071 0bfe 9C       		.byte	0x9c
 3072 0bff 300C0000 		.4byte	0xc30
 3073 0c03 15       		.uleb128 0x15
 3074 0c04 9A0B0000 		.4byte	.LASF108
 3075 0c08 01       		.byte	0x1
 3076 0c09 5A0A     		.2byte	0xa5a
 3077 0c0b 83000000 		.4byte	0x83
 3078 0c0f FA050000 		.4byte	.LLST39
 3079 0c13 21       		.uleb128 0x21
 3080 0c14 E9080000 		.4byte	.LASF144
 3081 0c18 01       		.byte	0x1
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 108


 3082 0c19 5C0A     		.2byte	0xa5c
 3083 0c1b 83000000 		.4byte	0x83
 3084 0c1f 01       		.uleb128 0x1
 3085 0c20 50       		.byte	0x50
 3086 0c21 21       		.uleb128 0x21
 3087 0c22 85010000 		.4byte	.LASF145
 3088 0c26 01       		.byte	0x1
 3089 0c27 600A     		.2byte	0xa60
 3090 0c29 300C0000 		.4byte	0xc30
 3091 0c2d 01       		.uleb128 0x1
 3092 0c2e 53       		.byte	0x53
 3093 0c2f 00       		.byte	0
 3094 0c30 06       		.uleb128 0x6
 3095 0c31 04       		.byte	0x4
 3096 0c32 BF010000 		.4byte	0x1bf
 3097 0c36 1A       		.uleb128 0x1a
 3098 0c37 50030000 		.4byte	.LASF146
 3099 0c3b 01       		.byte	0x1
 3100 0c3c B10A     		.2byte	0xab1
 3101 0c3e 6B000000 		.4byte	0x6b
 3102 0c42 00000000 		.4byte	.LFB24
 3103 0c46 24000000 		.4byte	.LFE24-.LFB24
 3104 0c4a 01       		.uleb128 0x1
 3105 0c4b 9C       		.byte	0x9c
 3106 0c4c 8C0C0000 		.4byte	0xc8c
 3107 0c50 15       		.uleb128 0x15
 3108 0c51 680B0000 		.4byte	.LASF99
 3109 0c55 01       		.byte	0x1
 3110 0c56 B10A     		.2byte	0xab1
 3111 0c58 83000000 		.4byte	0x83
 3112 0c5c 1B060000 		.4byte	.LLST40
 3113 0c60 22       		.uleb128 0x22
 3114 0c61 33040000 		.4byte	.LASF26
 3115 0c65 01       		.byte	0x1
 3116 0c66 B10A     		.2byte	0xab1
 3117 0c68 83000000 		.4byte	0x83
 3118 0c6c 01       		.uleb128 0x1
 3119 0c6d 51       		.byte	0x51
 3120 0c6e 16       		.uleb128 0x16
 3121 0c6f BE080000 		.4byte	.LASF147
 3122 0c73 01       		.byte	0x1
 3123 0c74 B30A     		.2byte	0xab3
 3124 0c76 83000000 		.4byte	0x83
 3125 0c7a 55060000 		.4byte	.LLST41
 3126 0c7e 1E       		.uleb128 0x1e
 3127 0c7f 760B0000 		.4byte	.LASF148
 3128 0c83 01       		.byte	0x1
 3129 0c84 B40A     		.2byte	0xab4
 3130 0c86 83000000 		.4byte	0x83
 3131 0c8a 01       		.byte	0x1
 3132 0c8b 00       		.byte	0
 3133 0c8c 17       		.uleb128 0x17
 3134 0c8d 8D010000 		.4byte	.LASF150
 3135 0c91 01       		.byte	0x1
 3136 0c92 C008     		.2byte	0x8c0
 3137 0c94 00000000 		.4byte	.LFB19
 3138 0c98 3A000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 109


 3139 0c9c 01       		.uleb128 0x1
 3140 0c9d 9C       		.byte	0x9c
 3141 0c9e 710D0000 		.4byte	0xd71
 3142 0ca2 15       		.uleb128 0x15
 3143 0ca3 41060000 		.4byte	.LASF114
 3144 0ca7 01       		.byte	0x1
 3145 0ca8 C008     		.2byte	0x8c0
 3146 0caa 83000000 		.4byte	0x83
 3147 0cae 68060000 		.4byte	.LLST42
 3148 0cb2 15       		.uleb128 0x15
 3149 0cb3 85010000 		.4byte	.LASF145
 3150 0cb7 01       		.byte	0x1
 3151 0cb8 C008     		.2byte	0x8c0
 3152 0cba 300C0000 		.4byte	0xc30
 3153 0cbe 89060000 		.4byte	.LLST43
 3154 0cc2 16       		.uleb128 0x16
 3155 0cc3 1D030000 		.4byte	.LASF103
 3156 0cc7 01       		.byte	0x1
 3157 0cc8 C208     		.2byte	0x8c2
 3158 0cca 6B000000 		.4byte	0x6b
 3159 0cce B5060000 		.4byte	.LLST44
 3160 0cd2 16       		.uleb128 0x16
 3161 0cd3 17010000 		.4byte	.LASF104
 3162 0cd7 01       		.byte	0x1
 3163 0cd8 C308     		.2byte	0x8c3
 3164 0cda 6B000000 		.4byte	0x6b
 3165 0cde D3060000 		.4byte	.LLST45
 3166 0ce2 16       		.uleb128 0x16
 3167 0ce3 24040000 		.4byte	.LASF100
 3168 0ce7 01       		.byte	0x1
 3169 0ce8 C708     		.2byte	0x8c7
 3170 0cea 83000000 		.4byte	0x83
 3171 0cee E6060000 		.4byte	.LLST46
 3172 0cf2 16       		.uleb128 0x16
 3173 0cf3 680B0000 		.4byte	.LASF99
 3174 0cf7 01       		.byte	0x1
 3175 0cf8 C908     		.2byte	0x8c9
 3176 0cfa 83000000 		.4byte	0x83
 3177 0cfe 04070000 		.4byte	.LLST47
 3178 0d02 1B       		.uleb128 0x1b
 3179 0d03 08000000 		.4byte	.LVL141
 3180 0d07 E90B0000 		.4byte	0xbe9
 3181 0d0b 170D0000 		.4byte	0xd17
 3182 0d0f 1C       		.uleb128 0x1c
 3183 0d10 01       		.uleb128 0x1
 3184 0d11 50       		.byte	0x50
 3185 0d12 03       		.uleb128 0x3
 3186 0d13 F3       		.byte	0xf3
 3187 0d14 01       		.uleb128 0x1
 3188 0d15 50       		.byte	0x50
 3189 0d16 00       		.byte	0
 3190 0d17 1B       		.uleb128 0x1b
 3191 0d18 12000000 		.4byte	.LVL143
 3192 0d1c E10F0000 		.4byte	0xfe1
 3193 0d20 300D0000 		.4byte	0xd30
 3194 0d24 1C       		.uleb128 0x1c
 3195 0d25 01       		.uleb128 0x1
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 110


 3196 0d26 50       		.byte	0x50
 3197 0d27 02       		.uleb128 0x2
 3198 0d28 75       		.byte	0x75
 3199 0d29 00       		.sleb128 0
 3200 0d2a 1C       		.uleb128 0x1c
 3201 0d2b 01       		.uleb128 0x1
 3202 0d2c 52       		.byte	0x52
 3203 0d2d 01       		.uleb128 0x1
 3204 0d2e 30       		.byte	0x30
 3205 0d2f 00       		.byte	0
 3206 0d30 1B       		.uleb128 0x1b
 3207 0d31 1A000000 		.4byte	.LVL146
 3208 0d35 5A060000 		.4byte	0x65a
 3209 0d39 440D0000 		.4byte	0xd44
 3210 0d3d 1C       		.uleb128 0x1c
 3211 0d3e 01       		.uleb128 0x1
 3212 0d3f 50       		.byte	0x50
 3213 0d40 02       		.uleb128 0x2
 3214 0d41 75       		.byte	0x75
 3215 0d42 00       		.sleb128 0
 3216 0d43 00       		.byte	0
 3217 0d44 1B       		.uleb128 0x1b
 3218 0d45 26000000 		.4byte	.LVL149
 3219 0d49 360C0000 		.4byte	0xc36
 3220 0d4d 5A0D0000 		.4byte	0xd5a
 3221 0d51 1C       		.uleb128 0x1c
 3222 0d52 01       		.uleb128 0x1
 3223 0d53 50       		.byte	0x50
 3224 0d54 04       		.uleb128 0x4
 3225 0d55 75       		.byte	0x75
 3226 0d56 00       		.sleb128 0
 3227 0d57 31       		.byte	0x31
 3228 0d58 24       		.byte	0x24
 3229 0d59 00       		.byte	0
 3230 0d5a 1F       		.uleb128 0x1f
 3231 0d5b 30000000 		.4byte	.LVL151
 3232 0d5f A5060000 		.4byte	0x6a5
 3233 0d63 1C       		.uleb128 0x1c
 3234 0d64 01       		.uleb128 0x1
 3235 0d65 50       		.byte	0x50
 3236 0d66 02       		.uleb128 0x2
 3237 0d67 75       		.byte	0x75
 3238 0d68 00       		.sleb128 0
 3239 0d69 1C       		.uleb128 0x1c
 3240 0d6a 01       		.uleb128 0x1
 3241 0d6b 51       		.byte	0x51
 3242 0d6c 02       		.uleb128 0x2
 3243 0d6d 74       		.byte	0x74
 3244 0d6e 00       		.sleb128 0
 3245 0d6f 00       		.byte	0
 3246 0d70 00       		.byte	0
 3247 0d71 1D       		.uleb128 0x1d
 3248 0d72 C10B0000 		.4byte	.LASF151
 3249 0d76 01       		.byte	0x1
 3250 0d77 8B08     		.2byte	0x88b
 3251 0d79 00000000 		.4byte	.LFB18
 3252 0d7d 24000000 		.4byte	.LFE18-.LFB18
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 111


 3253 0d81 01       		.uleb128 0x1
 3254 0d82 9C       		.byte	0x9c
 3255 0d83 B80D0000 		.4byte	0xdb8
 3256 0d87 16       		.uleb128 0x16
 3257 0d88 41060000 		.4byte	.LASF114
 3258 0d8c 01       		.byte	0x1
 3259 0d8d 8D08     		.2byte	0x88d
 3260 0d8f 83000000 		.4byte	0x83
 3261 0d93 22070000 		.4byte	.LLST48
 3262 0d97 16       		.uleb128 0x16
 3263 0d98 85010000 		.4byte	.LASF145
 3264 0d9c 01       		.byte	0x1
 3265 0d9d 8E08     		.2byte	0x88e
 3266 0d9f 300C0000 		.4byte	0xc30
 3267 0da3 41070000 		.4byte	.LLST49
 3268 0da7 1F       		.uleb128 0x1f
 3269 0da8 18000000 		.4byte	.LVL159
 3270 0dac 8C0C0000 		.4byte	0xc8c
 3271 0db0 1C       		.uleb128 0x1c
 3272 0db1 01       		.uleb128 0x1
 3273 0db2 50       		.byte	0x50
 3274 0db3 02       		.uleb128 0x2
 3275 0db4 74       		.byte	0x74
 3276 0db5 00       		.sleb128 0
 3277 0db6 00       		.byte	0
 3278 0db7 00       		.byte	0
 3279 0db8 1A       		.uleb128 0x1a
 3280 0db9 520B0000 		.4byte	.LASF152
 3281 0dbd 01       		.byte	0x1
 3282 0dbe 0402     		.2byte	0x204
 3283 0dc0 A4000000 		.4byte	0xa4
 3284 0dc4 00000000 		.4byte	.LFB5
 3285 0dc8 18000000 		.4byte	.LFE5-.LFB5
 3286 0dcc 01       		.uleb128 0x1
 3287 0dcd 9C       		.byte	0x9c
 3288 0dce 0A0E0000 		.4byte	0xe0a
 3289 0dd2 1E       		.uleb128 0x1e
 3290 0dd3 F4000000 		.4byte	.LASF153
 3291 0dd7 01       		.byte	0x1
 3292 0dd8 0602     		.2byte	0x206
 3293 0dda A4000000 		.4byte	0xa4
 3294 0dde 00       		.byte	0
 3295 0ddf 18       		.uleb128 0x18
 3296 0de0 06000000 		.4byte	.LVL163
 3297 0de4 710D0000 		.4byte	0xd71
 3298 0de8 18       		.uleb128 0x18
 3299 0de9 0A000000 		.4byte	.LVL164
 3300 0ded 3C090000 		.4byte	0x93c
 3301 0df1 18       		.uleb128 0x18
 3302 0df2 0E000000 		.4byte	.LVL165
 3303 0df6 A70F0000 		.4byte	0xfa7
 3304 0dfa 1F       		.uleb128 0x1f
 3305 0dfb 14000000 		.4byte	.LVL166
 3306 0dff FA080000 		.4byte	0x8fa
 3307 0e03 1C       		.uleb128 0x1c
 3308 0e04 01       		.uleb128 0x1
 3309 0e05 50       		.byte	0x50
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 112


 3310 0e06 01       		.uleb128 0x1
 3311 0e07 31       		.byte	0x31
 3312 0e08 00       		.byte	0
 3313 0e09 00       		.byte	0
 3314 0e0a 1D       		.uleb128 0x1d
 3315 0e0b 75000000 		.4byte	.LASF154
 3316 0e0f 01       		.byte	0x1
 3317 0e10 E10A     		.2byte	0xae1
 3318 0e12 00000000 		.4byte	.LFB25
 3319 0e16 68000000 		.4byte	.LFE25-.LFB25
 3320 0e1a 01       		.uleb128 0x1
 3321 0e1b 9C       		.byte	0x9c
 3322 0e1c 9C0E0000 		.4byte	0xe9c
 3323 0e20 16       		.uleb128 0x16
 3324 0e21 250B0000 		.4byte	.LASF107
 3325 0e25 01       		.byte	0x1
 3326 0e26 E30A     		.2byte	0xae3
 3327 0e28 83000000 		.4byte	0x83
 3328 0e2c 54070000 		.4byte	.LLST50
 3329 0e30 16       		.uleb128 0x16
 3330 0e31 08010000 		.4byte	.LASF119
 3331 0e35 01       		.byte	0x1
 3332 0e36 E40A     		.2byte	0xae4
 3333 0e38 6B000000 		.4byte	0x6b
 3334 0e3c 9E070000 		.4byte	.LLST51
 3335 0e40 18       		.uleb128 0x18
 3336 0e41 06000000 		.4byte	.LVL167
 3337 0e45 7A0F0000 		.4byte	0xf7a
 3338 0e49 18       		.uleb128 0x18
 3339 0e4a 14000000 		.4byte	.LVL170
 3340 0e4e 850F0000 		.4byte	0xf85
 3341 0e52 18       		.uleb128 0x18
 3342 0e53 18000000 		.4byte	.LVL171
 3343 0e57 7A0F0000 		.4byte	0xf7a
 3344 0e5b 18       		.uleb128 0x18
 3345 0e5c 26000000 		.4byte	.LVL174
 3346 0e60 850F0000 		.4byte	0xf85
 3347 0e64 18       		.uleb128 0x18
 3348 0e65 2A000000 		.4byte	.LVL175
 3349 0e69 7A0F0000 		.4byte	0xf7a
 3350 0e6d 18       		.uleb128 0x18
 3351 0e6e 3E000000 		.4byte	.LVL179
 3352 0e72 850F0000 		.4byte	0xf85
 3353 0e76 1B       		.uleb128 0x1b
 3354 0e77 44000000 		.4byte	.LVL180
 3355 0e7b ED0F0000 		.4byte	0xfed
 3356 0e7f 890E0000 		.4byte	0xe89
 3357 0e83 1C       		.uleb128 0x1c
 3358 0e84 01       		.uleb128 0x1
 3359 0e85 50       		.byte	0x50
 3360 0e86 01       		.uleb128 0x1
 3361 0e87 31       		.byte	0x31
 3362 0e88 00       		.byte	0
 3363 0e89 18       		.uleb128 0x18
 3364 0e8a 48000000 		.4byte	.LVL181
 3365 0e8e 7A0F0000 		.4byte	0xf7a
 3366 0e92 18       		.uleb128 0x18
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 113


 3367 0e93 52000000 		.4byte	.LVL184
 3368 0e97 850F0000 		.4byte	0xf85
 3369 0e9b 00       		.byte	0
 3370 0e9c 23       		.uleb128 0x23
 3371 0e9d 85050000 		.4byte	.LASF155
 3372 0ea1 04       		.byte	0x4
 3373 0ea2 4404     		.2byte	0x444
 3374 0ea4 E3040000 		.4byte	0x4e3
 3375 0ea8 23       		.uleb128 0x23
 3376 0ea9 E9070000 		.4byte	.LASF156
 3377 0ead 04       		.byte	0x4
 3378 0eae 4504     		.2byte	0x445
 3379 0eb0 B40E0000 		.4byte	0xeb4
 3380 0eb4 20       		.uleb128 0x20
 3381 0eb5 47060000 		.4byte	0x647
 3382 0eb9 0D       		.uleb128 0xd
 3383 0eba F5080000 		.4byte	0x8f5
 3384 0ebe C90E0000 		.4byte	0xec9
 3385 0ec2 0E       		.uleb128 0xe
 3386 0ec3 B8010000 		.4byte	0x1b8
 3387 0ec7 03       		.byte	0x3
 3388 0ec8 00       		.byte	0
 3389 0ec9 23       		.uleb128 0x23
 3390 0eca D40A0000 		.4byte	.LASF157
 3391 0ece 04       		.byte	0x4
 3392 0ecf 4604     		.2byte	0x446
 3393 0ed1 D50E0000 		.4byte	0xed5
 3394 0ed5 20       		.uleb128 0x20
 3395 0ed6 B90E0000 		.4byte	0xeb9
 3396 0eda 24       		.uleb128 0x24
 3397 0edb 99000000 		.4byte	.LASF158
 3398 0edf 01       		.byte	0x1
 3399 0ee0 BB       		.byte	0xbb
 3400 0ee1 B0000000 		.4byte	0xb0
 3401 0ee5 05       		.uleb128 0x5
 3402 0ee6 03       		.byte	0x3
 3403 0ee7 00000000 		.4byte	CapSense_widgetIndex
 3404 0eeb 24       		.uleb128 0x24
 3405 0eec D6020000 		.4byte	.LASF159
 3406 0ef0 01       		.byte	0x1
 3407 0ef1 BC       		.byte	0xbc
 3408 0ef2 B0000000 		.4byte	0xb0
 3409 0ef6 05       		.uleb128 0x5
 3410 0ef7 03       		.byte	0x3
 3411 0ef8 00000000 		.4byte	CapSense_sensorIndex
 3412 0efc 24       		.uleb128 0x24
 3413 0efd A30B0000 		.4byte	.LASF160
 3414 0f01 01       		.byte	0x1
 3415 0f02 BD       		.byte	0xbd
 3416 0f03 6B000000 		.4byte	0x6b
 3417 0f07 05       		.uleb128 0x5
 3418 0f08 03       		.byte	0x3
 3419 0f09 00000000 		.4byte	CapSense_requestScanAllWidget
 3420 0f0d 24       		.uleb128 0x24
 3421 0f0e 830A0000 		.4byte	.LASF161
 3422 0f12 01       		.byte	0x1
 3423 0f13 C0       		.byte	0xc0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 114


 3424 0f14 08060000 		.4byte	0x608
 3425 0f18 05       		.uleb128 0x5
 3426 0f19 03       		.byte	0x3
 3427 0f1a 00000000 		.4byte	CapSense_curRamSnsPtr
 3428 0f1e 24       		.uleb128 0x24
 3429 0f1f 62080000 		.4byte	.LASF162
 3430 0f23 01       		.byte	0x1
 3431 0f24 AE       		.byte	0xae
 3432 0f25 1C010000 		.4byte	0x11c
 3433 0f29 05       		.uleb128 0x5
 3434 0f2a 03       		.byte	0x3
 3435 0f2b 00000000 		.4byte	CapSense_currentSenseMethod
 3436 0f2f 24       		.uleb128 0x24
 3437 0f30 A50A0000 		.4byte	.LASF163
 3438 0f34 01       		.byte	0x1
 3439 0f35 B7       		.byte	0xb7
 3440 0f36 400F0000 		.4byte	0xf40
 3441 0f3a 05       		.uleb128 0x5
 3442 0f3b 03       		.byte	0x3
 3443 0f3c 00000000 		.4byte	CapSense_scanFreqIndex
 3444 0f40 20       		.uleb128 0x20
 3445 0f41 6B000000 		.4byte	0x6b
 3446 0f45 24       		.uleb128 0x24
 3447 0f46 0B060000 		.4byte	.LASF164
 3448 0f4a 01       		.byte	0x1
 3449 0f4b CF       		.byte	0xcf
 3450 0f4c EF080000 		.4byte	0x8ef
 3451 0f50 05       		.uleb128 0x5
 3452 0f51 03       		.byte	0x3
 3453 0f52 00000000 		.4byte	CapSense_curSnsIOPtr
 3454 0f56 25       		.uleb128 0x25
 3455 0f57 EC060000 		.4byte	.LASF165
 3456 0f5b EC060000 		.4byte	.LASF165
 3457 0f5f 05       		.byte	0x5
 3458 0f60 D401     		.2byte	0x1d4
 3459 0f62 25       		.uleb128 0x25
 3460 0f63 89020000 		.4byte	.LASF166
 3461 0f67 89020000 		.4byte	.LASF166
 3462 0f6b 05       		.byte	0x5
 3463 0f6c B701     		.2byte	0x1b7
 3464 0f6e 25       		.uleb128 0x25
 3465 0f6f C1090000 		.4byte	.LASF167
 3466 0f73 C1090000 		.4byte	.LASF167
 3467 0f77 05       		.byte	0x5
 3468 0f78 B901     		.2byte	0x1b9
 3469 0f7a 26       		.uleb128 0x26
 3470 0f7b 6C0A0000 		.4byte	.LASF168
 3471 0f7f 6C0A0000 		.4byte	.LASF168
 3472 0f83 06       		.byte	0x6
 3473 0f84 F8       		.byte	0xf8
 3474 0f85 26       		.uleb128 0x26
 3475 0f86 D7030000 		.4byte	.LASF169
 3476 0f8a D7030000 		.4byte	.LASF169
 3477 0f8e 06       		.byte	0x6
 3478 0f8f F9       		.byte	0xf9
 3479 0f90 25       		.uleb128 0x25
 3480 0f91 2F080000 		.4byte	.LASF170
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 115


 3481 0f95 2F080000 		.4byte	.LASF170
 3482 0f99 05       		.byte	0x5
 3483 0f9a C001     		.2byte	0x1c0
 3484 0f9c 26       		.uleb128 0x26
 3485 0f9d 70060000 		.4byte	.LASF171
 3486 0fa1 70060000 		.4byte	.LASF171
 3487 0fa5 07       		.byte	0x7
 3488 0fa6 60       		.byte	0x60
 3489 0fa7 25       		.uleb128 0x25
 3490 0fa8 FA040000 		.4byte	.LASF172
 3491 0fac FA040000 		.4byte	.LASF172
 3492 0fb0 05       		.byte	0x5
 3493 0fb1 D001     		.2byte	0x1d0
 3494 0fb3 26       		.uleb128 0x26
 3495 0fb4 98070000 		.4byte	.LASF173
 3496 0fb8 98070000 		.4byte	.LASF173
 3497 0fbc 07       		.byte	0x7
 3498 0fbd 61       		.byte	0x61
 3499 0fbe 26       		.uleb128 0x26
 3500 0fbf 00090000 		.4byte	.LASF174
 3501 0fc3 00090000 		.4byte	.LASF174
 3502 0fc7 08       		.byte	0x8
 3503 0fc8 18       		.byte	0x18
 3504 0fc9 25       		.uleb128 0x25
 3505 0fca CD070000 		.4byte	.LASF175
 3506 0fce CD070000 		.4byte	.LASF175
 3507 0fd2 05       		.byte	0x5
 3508 0fd3 BD01     		.2byte	0x1bd
 3509 0fd5 25       		.uleb128 0x25
 3510 0fd6 40070000 		.4byte	.LASF176
 3511 0fda 40070000 		.4byte	.LASF176
 3512 0fde 05       		.byte	0x5
 3513 0fdf C101     		.2byte	0x1c1
 3514 0fe1 25       		.uleb128 0x25
 3515 0fe2 ED030000 		.4byte	.LASF177
 3516 0fe6 ED030000 		.4byte	.LASF177
 3517 0fea 05       		.byte	0x5
 3518 0feb DB01     		.2byte	0x1db
 3519 0fed 26       		.uleb128 0x26
 3520 0fee A1020000 		.4byte	.LASF178
 3521 0ff2 A1020000 		.4byte	.LASF178
 3522 0ff6 06       		.byte	0x6
 3523 0ff7 ED       		.byte	0xed
 3524 0ff8 00       		.byte	0
 3525              		.section	.debug_abbrev,"",%progbits
 3526              	.Ldebug_abbrev0:
 3527 0000 01       		.uleb128 0x1
 3528 0001 11       		.uleb128 0x11
 3529 0002 01       		.byte	0x1
 3530 0003 25       		.uleb128 0x25
 3531 0004 0E       		.uleb128 0xe
 3532 0005 13       		.uleb128 0x13
 3533 0006 0B       		.uleb128 0xb
 3534 0007 03       		.uleb128 0x3
 3535 0008 0E       		.uleb128 0xe
 3536 0009 1B       		.uleb128 0x1b
 3537 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 116


 3538 000b 55       		.uleb128 0x55
 3539 000c 17       		.uleb128 0x17
 3540 000d 11       		.uleb128 0x11
 3541 000e 01       		.uleb128 0x1
 3542 000f 10       		.uleb128 0x10
 3543 0010 17       		.uleb128 0x17
 3544 0011 00       		.byte	0
 3545 0012 00       		.byte	0
 3546 0013 02       		.uleb128 0x2
 3547 0014 24       		.uleb128 0x24
 3548 0015 00       		.byte	0
 3549 0016 0B       		.uleb128 0xb
 3550 0017 0B       		.uleb128 0xb
 3551 0018 3E       		.uleb128 0x3e
 3552 0019 0B       		.uleb128 0xb
 3553 001a 03       		.uleb128 0x3
 3554 001b 0E       		.uleb128 0xe
 3555 001c 00       		.byte	0
 3556 001d 00       		.byte	0
 3557 001e 03       		.uleb128 0x3
 3558 001f 24       		.uleb128 0x24
 3559 0020 00       		.byte	0
 3560 0021 0B       		.uleb128 0xb
 3561 0022 0B       		.uleb128 0xb
 3562 0023 3E       		.uleb128 0x3e
 3563 0024 0B       		.uleb128 0xb
 3564 0025 03       		.uleb128 0x3
 3565 0026 08       		.uleb128 0x8
 3566 0027 00       		.byte	0
 3567 0028 00       		.byte	0
 3568 0029 04       		.uleb128 0x4
 3569 002a 16       		.uleb128 0x16
 3570 002b 00       		.byte	0
 3571 002c 03       		.uleb128 0x3
 3572 002d 0E       		.uleb128 0xe
 3573 002e 3A       		.uleb128 0x3a
 3574 002f 0B       		.uleb128 0xb
 3575 0030 3B       		.uleb128 0x3b
 3576 0031 05       		.uleb128 0x5
 3577 0032 49       		.uleb128 0x49
 3578 0033 13       		.uleb128 0x13
 3579 0034 00       		.byte	0
 3580 0035 00       		.byte	0
 3581 0036 05       		.uleb128 0x5
 3582 0037 35       		.uleb128 0x35
 3583 0038 00       		.byte	0
 3584 0039 49       		.uleb128 0x49
 3585 003a 13       		.uleb128 0x13
 3586 003b 00       		.byte	0
 3587 003c 00       		.byte	0
 3588 003d 06       		.uleb128 0x6
 3589 003e 0F       		.uleb128 0xf
 3590 003f 00       		.byte	0
 3591 0040 0B       		.uleb128 0xb
 3592 0041 0B       		.uleb128 0xb
 3593 0042 49       		.uleb128 0x49
 3594 0043 13       		.uleb128 0x13
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 117


 3595 0044 00       		.byte	0
 3596 0045 00       		.byte	0
 3597 0046 07       		.uleb128 0x7
 3598 0047 15       		.uleb128 0x15
 3599 0048 00       		.byte	0
 3600 0049 27       		.uleb128 0x27
 3601 004a 19       		.uleb128 0x19
 3602 004b 00       		.byte	0
 3603 004c 00       		.byte	0
 3604 004d 08       		.uleb128 0x8
 3605 004e 04       		.uleb128 0x4
 3606 004f 01       		.byte	0x1
 3607 0050 0B       		.uleb128 0xb
 3608 0051 0B       		.uleb128 0xb
 3609 0052 49       		.uleb128 0x49
 3610 0053 13       		.uleb128 0x13
 3611 0054 3A       		.uleb128 0x3a
 3612 0055 0B       		.uleb128 0xb
 3613 0056 3B       		.uleb128 0x3b
 3614 0057 0B       		.uleb128 0xb
 3615 0058 01       		.uleb128 0x1
 3616 0059 13       		.uleb128 0x13
 3617 005a 00       		.byte	0
 3618 005b 00       		.byte	0
 3619 005c 09       		.uleb128 0x9
 3620 005d 28       		.uleb128 0x28
 3621 005e 00       		.byte	0
 3622 005f 03       		.uleb128 0x3
 3623 0060 0E       		.uleb128 0xe
 3624 0061 1C       		.uleb128 0x1c
 3625 0062 0B       		.uleb128 0xb
 3626 0063 00       		.byte	0
 3627 0064 00       		.byte	0
 3628 0065 0A       		.uleb128 0xa
 3629 0066 16       		.uleb128 0x16
 3630 0067 00       		.byte	0
 3631 0068 03       		.uleb128 0x3
 3632 0069 0E       		.uleb128 0xe
 3633 006a 3A       		.uleb128 0x3a
 3634 006b 0B       		.uleb128 0xb
 3635 006c 3B       		.uleb128 0x3b
 3636 006d 0B       		.uleb128 0xb
 3637 006e 49       		.uleb128 0x49
 3638 006f 13       		.uleb128 0x13
 3639 0070 00       		.byte	0
 3640 0071 00       		.byte	0
 3641 0072 0B       		.uleb128 0xb
 3642 0073 13       		.uleb128 0x13
 3643 0074 01       		.byte	0x1
 3644 0075 0B       		.uleb128 0xb
 3645 0076 0B       		.uleb128 0xb
 3646 0077 3A       		.uleb128 0x3a
 3647 0078 0B       		.uleb128 0xb
 3648 0079 3B       		.uleb128 0x3b
 3649 007a 0B       		.uleb128 0xb
 3650 007b 01       		.uleb128 0x1
 3651 007c 13       		.uleb128 0x13
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 118


 3652 007d 00       		.byte	0
 3653 007e 00       		.byte	0
 3654 007f 0C       		.uleb128 0xc
 3655 0080 0D       		.uleb128 0xd
 3656 0081 00       		.byte	0
 3657 0082 03       		.uleb128 0x3
 3658 0083 0E       		.uleb128 0xe
 3659 0084 3A       		.uleb128 0x3a
 3660 0085 0B       		.uleb128 0xb
 3661 0086 3B       		.uleb128 0x3b
 3662 0087 0B       		.uleb128 0xb
 3663 0088 49       		.uleb128 0x49
 3664 0089 13       		.uleb128 0x13
 3665 008a 38       		.uleb128 0x38
 3666 008b 0B       		.uleb128 0xb
 3667 008c 00       		.byte	0
 3668 008d 00       		.byte	0
 3669 008e 0D       		.uleb128 0xd
 3670 008f 01       		.uleb128 0x1
 3671 0090 01       		.byte	0x1
 3672 0091 49       		.uleb128 0x49
 3673 0092 13       		.uleb128 0x13
 3674 0093 01       		.uleb128 0x1
 3675 0094 13       		.uleb128 0x13
 3676 0095 00       		.byte	0
 3677 0096 00       		.byte	0
 3678 0097 0E       		.uleb128 0xe
 3679 0098 21       		.uleb128 0x21
 3680 0099 00       		.byte	0
 3681 009a 49       		.uleb128 0x49
 3682 009b 13       		.uleb128 0x13
 3683 009c 2F       		.uleb128 0x2f
 3684 009d 0B       		.uleb128 0xb
 3685 009e 00       		.byte	0
 3686 009f 00       		.byte	0
 3687 00a0 0F       		.uleb128 0xf
 3688 00a1 0D       		.uleb128 0xd
 3689 00a2 00       		.byte	0
 3690 00a3 03       		.uleb128 0x3
 3691 00a4 0E       		.uleb128 0xe
 3692 00a5 3A       		.uleb128 0x3a
 3693 00a6 0B       		.uleb128 0xb
 3694 00a7 3B       		.uleb128 0x3b
 3695 00a8 05       		.uleb128 0x5
 3696 00a9 49       		.uleb128 0x49
 3697 00aa 13       		.uleb128 0x13
 3698 00ab 38       		.uleb128 0x38
 3699 00ac 0B       		.uleb128 0xb
 3700 00ad 00       		.byte	0
 3701 00ae 00       		.byte	0
 3702 00af 10       		.uleb128 0x10
 3703 00b0 13       		.uleb128 0x13
 3704 00b1 01       		.byte	0x1
 3705 00b2 0B       		.uleb128 0xb
 3706 00b3 0B       		.uleb128 0xb
 3707 00b4 3A       		.uleb128 0x3a
 3708 00b5 0B       		.uleb128 0xb
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 119


 3709 00b6 3B       		.uleb128 0x3b
 3710 00b7 05       		.uleb128 0x5
 3711 00b8 01       		.uleb128 0x1
 3712 00b9 13       		.uleb128 0x13
 3713 00ba 00       		.byte	0
 3714 00bb 00       		.byte	0
 3715 00bc 11       		.uleb128 0x11
 3716 00bd 0D       		.uleb128 0xd
 3717 00be 00       		.byte	0
 3718 00bf 03       		.uleb128 0x3
 3719 00c0 08       		.uleb128 0x8
 3720 00c1 3A       		.uleb128 0x3a
 3721 00c2 0B       		.uleb128 0xb
 3722 00c3 3B       		.uleb128 0x3b
 3723 00c4 05       		.uleb128 0x5
 3724 00c5 49       		.uleb128 0x49
 3725 00c6 13       		.uleb128 0x13
 3726 00c7 38       		.uleb128 0x38
 3727 00c8 0B       		.uleb128 0xb
 3728 00c9 00       		.byte	0
 3729 00ca 00       		.byte	0
 3730 00cb 12       		.uleb128 0x12
 3731 00cc 26       		.uleb128 0x26
 3732 00cd 00       		.byte	0
 3733 00ce 00       		.byte	0
 3734 00cf 00       		.byte	0
 3735 00d0 13       		.uleb128 0x13
 3736 00d1 0F       		.uleb128 0xf
 3737 00d2 00       		.byte	0
 3738 00d3 0B       		.uleb128 0xb
 3739 00d4 0B       		.uleb128 0xb
 3740 00d5 00       		.byte	0
 3741 00d6 00       		.byte	0
 3742 00d7 14       		.uleb128 0x14
 3743 00d8 2E       		.uleb128 0x2e
 3744 00d9 01       		.byte	0x1
 3745 00da 03       		.uleb128 0x3
 3746 00db 0E       		.uleb128 0xe
 3747 00dc 3A       		.uleb128 0x3a
 3748 00dd 0B       		.uleb128 0xb
 3749 00de 3B       		.uleb128 0x3b
 3750 00df 05       		.uleb128 0x5
 3751 00e0 27       		.uleb128 0x27
 3752 00e1 19       		.uleb128 0x19
 3753 00e2 49       		.uleb128 0x49
 3754 00e3 13       		.uleb128 0x13
 3755 00e4 11       		.uleb128 0x11
 3756 00e5 01       		.uleb128 0x1
 3757 00e6 12       		.uleb128 0x12
 3758 00e7 06       		.uleb128 0x6
 3759 00e8 40       		.uleb128 0x40
 3760 00e9 18       		.uleb128 0x18
 3761 00ea 9642     		.uleb128 0x2116
 3762 00ec 19       		.uleb128 0x19
 3763 00ed 01       		.uleb128 0x1
 3764 00ee 13       		.uleb128 0x13
 3765 00ef 00       		.byte	0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 120


 3766 00f0 00       		.byte	0
 3767 00f1 15       		.uleb128 0x15
 3768 00f2 05       		.uleb128 0x5
 3769 00f3 00       		.byte	0
 3770 00f4 03       		.uleb128 0x3
 3771 00f5 0E       		.uleb128 0xe
 3772 00f6 3A       		.uleb128 0x3a
 3773 00f7 0B       		.uleb128 0xb
 3774 00f8 3B       		.uleb128 0x3b
 3775 00f9 05       		.uleb128 0x5
 3776 00fa 49       		.uleb128 0x49
 3777 00fb 13       		.uleb128 0x13
 3778 00fc 02       		.uleb128 0x2
 3779 00fd 17       		.uleb128 0x17
 3780 00fe 00       		.byte	0
 3781 00ff 00       		.byte	0
 3782 0100 16       		.uleb128 0x16
 3783 0101 34       		.uleb128 0x34
 3784 0102 00       		.byte	0
 3785 0103 03       		.uleb128 0x3
 3786 0104 0E       		.uleb128 0xe
 3787 0105 3A       		.uleb128 0x3a
 3788 0106 0B       		.uleb128 0xb
 3789 0107 3B       		.uleb128 0x3b
 3790 0108 05       		.uleb128 0x5
 3791 0109 49       		.uleb128 0x49
 3792 010a 13       		.uleb128 0x13
 3793 010b 02       		.uleb128 0x2
 3794 010c 17       		.uleb128 0x17
 3795 010d 00       		.byte	0
 3796 010e 00       		.byte	0
 3797 010f 17       		.uleb128 0x17
 3798 0110 2E       		.uleb128 0x2e
 3799 0111 01       		.byte	0x1
 3800 0112 03       		.uleb128 0x3
 3801 0113 0E       		.uleb128 0xe
 3802 0114 3A       		.uleb128 0x3a
 3803 0115 0B       		.uleb128 0xb
 3804 0116 3B       		.uleb128 0x3b
 3805 0117 05       		.uleb128 0x5
 3806 0118 27       		.uleb128 0x27
 3807 0119 19       		.uleb128 0x19
 3808 011a 11       		.uleb128 0x11
 3809 011b 01       		.uleb128 0x1
 3810 011c 12       		.uleb128 0x12
 3811 011d 06       		.uleb128 0x6
 3812 011e 40       		.uleb128 0x40
 3813 011f 18       		.uleb128 0x18
 3814 0120 9742     		.uleb128 0x2117
 3815 0122 19       		.uleb128 0x19
 3816 0123 01       		.uleb128 0x1
 3817 0124 13       		.uleb128 0x13
 3818 0125 00       		.byte	0
 3819 0126 00       		.byte	0
 3820 0127 18       		.uleb128 0x18
 3821 0128 898201   		.uleb128 0x4109
 3822 012b 00       		.byte	0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 121


 3823 012c 11       		.uleb128 0x11
 3824 012d 01       		.uleb128 0x1
 3825 012e 31       		.uleb128 0x31
 3826 012f 13       		.uleb128 0x13
 3827 0130 00       		.byte	0
 3828 0131 00       		.byte	0
 3829 0132 19       		.uleb128 0x19
 3830 0133 2E       		.uleb128 0x2e
 3831 0134 00       		.byte	0
 3832 0135 3F       		.uleb128 0x3f
 3833 0136 19       		.uleb128 0x19
 3834 0137 03       		.uleb128 0x3
 3835 0138 0E       		.uleb128 0xe
 3836 0139 3A       		.uleb128 0x3a
 3837 013a 0B       		.uleb128 0xb
 3838 013b 3B       		.uleb128 0x3b
 3839 013c 0B       		.uleb128 0xb
 3840 013d 27       		.uleb128 0x27
 3841 013e 19       		.uleb128 0x19
 3842 013f 49       		.uleb128 0x49
 3843 0140 13       		.uleb128 0x13
 3844 0141 11       		.uleb128 0x11
 3845 0142 01       		.uleb128 0x1
 3846 0143 12       		.uleb128 0x12
 3847 0144 06       		.uleb128 0x6
 3848 0145 40       		.uleb128 0x40
 3849 0146 18       		.uleb128 0x18
 3850 0147 9742     		.uleb128 0x2117
 3851 0149 19       		.uleb128 0x19
 3852 014a 00       		.byte	0
 3853 014b 00       		.byte	0
 3854 014c 1A       		.uleb128 0x1a
 3855 014d 2E       		.uleb128 0x2e
 3856 014e 01       		.byte	0x1
 3857 014f 3F       		.uleb128 0x3f
 3858 0150 19       		.uleb128 0x19
 3859 0151 03       		.uleb128 0x3
 3860 0152 0E       		.uleb128 0xe
 3861 0153 3A       		.uleb128 0x3a
 3862 0154 0B       		.uleb128 0xb
 3863 0155 3B       		.uleb128 0x3b
 3864 0156 05       		.uleb128 0x5
 3865 0157 27       		.uleb128 0x27
 3866 0158 19       		.uleb128 0x19
 3867 0159 49       		.uleb128 0x49
 3868 015a 13       		.uleb128 0x13
 3869 015b 11       		.uleb128 0x11
 3870 015c 01       		.uleb128 0x1
 3871 015d 12       		.uleb128 0x12
 3872 015e 06       		.uleb128 0x6
 3873 015f 40       		.uleb128 0x40
 3874 0160 18       		.uleb128 0x18
 3875 0161 9742     		.uleb128 0x2117
 3876 0163 19       		.uleb128 0x19
 3877 0164 01       		.uleb128 0x1
 3878 0165 13       		.uleb128 0x13
 3879 0166 00       		.byte	0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 122


 3880 0167 00       		.byte	0
 3881 0168 1B       		.uleb128 0x1b
 3882 0169 898201   		.uleb128 0x4109
 3883 016c 01       		.byte	0x1
 3884 016d 11       		.uleb128 0x11
 3885 016e 01       		.uleb128 0x1
 3886 016f 31       		.uleb128 0x31
 3887 0170 13       		.uleb128 0x13
 3888 0171 01       		.uleb128 0x1
 3889 0172 13       		.uleb128 0x13
 3890 0173 00       		.byte	0
 3891 0174 00       		.byte	0
 3892 0175 1C       		.uleb128 0x1c
 3893 0176 8A8201   		.uleb128 0x410a
 3894 0179 00       		.byte	0
 3895 017a 02       		.uleb128 0x2
 3896 017b 18       		.uleb128 0x18
 3897 017c 9142     		.uleb128 0x2111
 3898 017e 18       		.uleb128 0x18
 3899 017f 00       		.byte	0
 3900 0180 00       		.byte	0
 3901 0181 1D       		.uleb128 0x1d
 3902 0182 2E       		.uleb128 0x2e
 3903 0183 01       		.byte	0x1
 3904 0184 3F       		.uleb128 0x3f
 3905 0185 19       		.uleb128 0x19
 3906 0186 03       		.uleb128 0x3
 3907 0187 0E       		.uleb128 0xe
 3908 0188 3A       		.uleb128 0x3a
 3909 0189 0B       		.uleb128 0xb
 3910 018a 3B       		.uleb128 0x3b
 3911 018b 05       		.uleb128 0x5
 3912 018c 27       		.uleb128 0x27
 3913 018d 19       		.uleb128 0x19
 3914 018e 11       		.uleb128 0x11
 3915 018f 01       		.uleb128 0x1
 3916 0190 12       		.uleb128 0x12
 3917 0191 06       		.uleb128 0x6
 3918 0192 40       		.uleb128 0x40
 3919 0193 18       		.uleb128 0x18
 3920 0194 9742     		.uleb128 0x2117
 3921 0196 19       		.uleb128 0x19
 3922 0197 01       		.uleb128 0x1
 3923 0198 13       		.uleb128 0x13
 3924 0199 00       		.byte	0
 3925 019a 00       		.byte	0
 3926 019b 1E       		.uleb128 0x1e
 3927 019c 34       		.uleb128 0x34
 3928 019d 00       		.byte	0
 3929 019e 03       		.uleb128 0x3
 3930 019f 0E       		.uleb128 0xe
 3931 01a0 3A       		.uleb128 0x3a
 3932 01a1 0B       		.uleb128 0xb
 3933 01a2 3B       		.uleb128 0x3b
 3934 01a3 05       		.uleb128 0x5
 3935 01a4 49       		.uleb128 0x49
 3936 01a5 13       		.uleb128 0x13
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 123


 3937 01a6 1C       		.uleb128 0x1c
 3938 01a7 0B       		.uleb128 0xb
 3939 01a8 00       		.byte	0
 3940 01a9 00       		.byte	0
 3941 01aa 1F       		.uleb128 0x1f
 3942 01ab 898201   		.uleb128 0x4109
 3943 01ae 01       		.byte	0x1
 3944 01af 11       		.uleb128 0x11
 3945 01b0 01       		.uleb128 0x1
 3946 01b1 31       		.uleb128 0x31
 3947 01b2 13       		.uleb128 0x13
 3948 01b3 00       		.byte	0
 3949 01b4 00       		.byte	0
 3950 01b5 20       		.uleb128 0x20
 3951 01b6 26       		.uleb128 0x26
 3952 01b7 00       		.byte	0
 3953 01b8 49       		.uleb128 0x49
 3954 01b9 13       		.uleb128 0x13
 3955 01ba 00       		.byte	0
 3956 01bb 00       		.byte	0
 3957 01bc 21       		.uleb128 0x21
 3958 01bd 34       		.uleb128 0x34
 3959 01be 00       		.byte	0
 3960 01bf 03       		.uleb128 0x3
 3961 01c0 0E       		.uleb128 0xe
 3962 01c1 3A       		.uleb128 0x3a
 3963 01c2 0B       		.uleb128 0xb
 3964 01c3 3B       		.uleb128 0x3b
 3965 01c4 05       		.uleb128 0x5
 3966 01c5 49       		.uleb128 0x49
 3967 01c6 13       		.uleb128 0x13
 3968 01c7 02       		.uleb128 0x2
 3969 01c8 18       		.uleb128 0x18
 3970 01c9 00       		.byte	0
 3971 01ca 00       		.byte	0
 3972 01cb 22       		.uleb128 0x22
 3973 01cc 05       		.uleb128 0x5
 3974 01cd 00       		.byte	0
 3975 01ce 03       		.uleb128 0x3
 3976 01cf 0E       		.uleb128 0xe
 3977 01d0 3A       		.uleb128 0x3a
 3978 01d1 0B       		.uleb128 0xb
 3979 01d2 3B       		.uleb128 0x3b
 3980 01d3 05       		.uleb128 0x5
 3981 01d4 49       		.uleb128 0x49
 3982 01d5 13       		.uleb128 0x13
 3983 01d6 02       		.uleb128 0x2
 3984 01d7 18       		.uleb128 0x18
 3985 01d8 00       		.byte	0
 3986 01d9 00       		.byte	0
 3987 01da 23       		.uleb128 0x23
 3988 01db 34       		.uleb128 0x34
 3989 01dc 00       		.byte	0
 3990 01dd 03       		.uleb128 0x3
 3991 01de 0E       		.uleb128 0xe
 3992 01df 3A       		.uleb128 0x3a
 3993 01e0 0B       		.uleb128 0xb
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 124


 3994 01e1 3B       		.uleb128 0x3b
 3995 01e2 05       		.uleb128 0x5
 3996 01e3 49       		.uleb128 0x49
 3997 01e4 13       		.uleb128 0x13
 3998 01e5 3F       		.uleb128 0x3f
 3999 01e6 19       		.uleb128 0x19
 4000 01e7 3C       		.uleb128 0x3c
 4001 01e8 19       		.uleb128 0x19
 4002 01e9 00       		.byte	0
 4003 01ea 00       		.byte	0
 4004 01eb 24       		.uleb128 0x24
 4005 01ec 34       		.uleb128 0x34
 4006 01ed 00       		.byte	0
 4007 01ee 03       		.uleb128 0x3
 4008 01ef 0E       		.uleb128 0xe
 4009 01f0 3A       		.uleb128 0x3a
 4010 01f1 0B       		.uleb128 0xb
 4011 01f2 3B       		.uleb128 0x3b
 4012 01f3 0B       		.uleb128 0xb
 4013 01f4 49       		.uleb128 0x49
 4014 01f5 13       		.uleb128 0x13
 4015 01f6 3F       		.uleb128 0x3f
 4016 01f7 19       		.uleb128 0x19
 4017 01f8 02       		.uleb128 0x2
 4018 01f9 18       		.uleb128 0x18
 4019 01fa 00       		.byte	0
 4020 01fb 00       		.byte	0
 4021 01fc 25       		.uleb128 0x25
 4022 01fd 2E       		.uleb128 0x2e
 4023 01fe 00       		.byte	0
 4024 01ff 3F       		.uleb128 0x3f
 4025 0200 19       		.uleb128 0x19
 4026 0201 3C       		.uleb128 0x3c
 4027 0202 19       		.uleb128 0x19
 4028 0203 6E       		.uleb128 0x6e
 4029 0204 0E       		.uleb128 0xe
 4030 0205 03       		.uleb128 0x3
 4031 0206 0E       		.uleb128 0xe
 4032 0207 3A       		.uleb128 0x3a
 4033 0208 0B       		.uleb128 0xb
 4034 0209 3B       		.uleb128 0x3b
 4035 020a 05       		.uleb128 0x5
 4036 020b 00       		.byte	0
 4037 020c 00       		.byte	0
 4038 020d 26       		.uleb128 0x26
 4039 020e 2E       		.uleb128 0x2e
 4040 020f 00       		.byte	0
 4041 0210 3F       		.uleb128 0x3f
 4042 0211 19       		.uleb128 0x19
 4043 0212 3C       		.uleb128 0x3c
 4044 0213 19       		.uleb128 0x19
 4045 0214 6E       		.uleb128 0x6e
 4046 0215 0E       		.uleb128 0xe
 4047 0216 03       		.uleb128 0x3
 4048 0217 0E       		.uleb128 0xe
 4049 0218 3A       		.uleb128 0x3a
 4050 0219 0B       		.uleb128 0xb
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 125


 4051 021a 3B       		.uleb128 0x3b
 4052 021b 0B       		.uleb128 0xb
 4053 021c 00       		.byte	0
 4054 021d 00       		.byte	0
 4055 021e 00       		.byte	0
 4056              		.section	.debug_loc,"",%progbits
 4057              	.Ldebug_loc0:
 4058              	.LLST0:
 4059 0000 00000000 		.4byte	.LVL0
 4060 0004 14000000 		.4byte	.LVL3
 4061 0008 0100     		.2byte	0x1
 4062 000a 50       		.byte	0x50
 4063 000b 14000000 		.4byte	.LVL3
 4064 000f 76000000 		.4byte	.LVL9
 4065 0013 0100     		.2byte	0x1
 4066 0015 54       		.byte	0x54
 4067 0016 76000000 		.4byte	.LVL9
 4068 001a 84000000 		.4byte	.LFE20
 4069 001e 0400     		.2byte	0x4
 4070 0020 F3       		.byte	0xf3
 4071 0021 01       		.uleb128 0x1
 4072 0022 50       		.byte	0x50
 4073 0023 9F       		.byte	0x9f
 4074 0024 00000000 		.4byte	0
 4075 0028 00000000 		.4byte	0
 4076              	.LLST1:
 4077 002c 00000000 		.4byte	.LVL0
 4078 0030 12000000 		.4byte	.LVL2
 4079 0034 0100     		.2byte	0x1
 4080 0036 51       		.byte	0x51
 4081 0037 12000000 		.4byte	.LVL2
 4082 003b 76000000 		.4byte	.LVL10
 4083 003f 0100     		.2byte	0x1
 4084 0041 55       		.byte	0x55
 4085 0042 76000000 		.4byte	.LVL10
 4086 0046 84000000 		.4byte	.LFE20
 4087 004a 0400     		.2byte	0x4
 4088 004c F3       		.byte	0xf3
 4089 004d 01       		.uleb128 0x1
 4090 004e 51       		.byte	0x51
 4091 004f 9F       		.byte	0x9f
 4092 0050 00000000 		.4byte	0
 4093 0054 00000000 		.4byte	0
 4094              	.LLST2:
 4095 0058 06000000 		.4byte	.LVL1
 4096 005c 76000000 		.4byte	.LVL8
 4097 0060 0200     		.2byte	0x2
 4098 0062 30       		.byte	0x30
 4099 0063 9F       		.byte	0x9f
 4100 0064 76000000 		.4byte	.LVL8
 4101 0068 84000000 		.4byte	.LFE20
 4102 006c 0100     		.2byte	0x1
 4103 006e 50       		.byte	0x50
 4104 006f 00000000 		.4byte	0
 4105 0073 00000000 		.4byte	0
 4106              	.LLST3:
 4107 0077 00000000 		.4byte	.LVL11
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 126


 4108 007b 20000000 		.4byte	.LVL15
 4109 007f 0100     		.2byte	0x1
 4110 0081 50       		.byte	0x50
 4111 0082 20000000 		.4byte	.LVL15
 4112 0086 23000000 		.4byte	.LVL16-1
 4113 008a 0100     		.2byte	0x1
 4114 008c 51       		.byte	0x51
 4115 008d 23000000 		.4byte	.LVL16-1
 4116 0091 38000000 		.4byte	.LVL21
 4117 0095 0400     		.2byte	0x4
 4118 0097 F3       		.byte	0xf3
 4119 0098 01       		.uleb128 0x1
 4120 0099 50       		.byte	0x50
 4121 009a 9F       		.byte	0x9f
 4122 009b 38000000 		.4byte	.LVL21
 4123 009f 3E000000 		.4byte	.LVL24
 4124 00a3 0100     		.2byte	0x1
 4125 00a5 50       		.byte	0x50
 4126 00a6 3E000000 		.4byte	.LVL24
 4127 00aa 42000000 		.4byte	.LFE21
 4128 00ae 0400     		.2byte	0x4
 4129 00b0 F3       		.byte	0xf3
 4130 00b1 01       		.uleb128 0x1
 4131 00b2 50       		.byte	0x50
 4132 00b3 9F       		.byte	0x9f
 4133 00b4 00000000 		.4byte	0
 4134 00b8 00000000 		.4byte	0
 4135              	.LLST4:
 4136 00bc 00000000 		.4byte	.LVL11
 4137 00c0 1E000000 		.4byte	.LVL14
 4138 00c4 0100     		.2byte	0x1
 4139 00c6 51       		.byte	0x51
 4140 00c7 1E000000 		.4byte	.LVL14
 4141 00cb 38000000 		.4byte	.LVL21
 4142 00cf 0400     		.2byte	0x4
 4143 00d1 F3       		.byte	0xf3
 4144 00d2 01       		.uleb128 0x1
 4145 00d3 51       		.byte	0x51
 4146 00d4 9F       		.byte	0x9f
 4147 00d5 38000000 		.4byte	.LVL21
 4148 00d9 3E000000 		.4byte	.LVL24
 4149 00dd 0100     		.2byte	0x1
 4150 00df 51       		.byte	0x51
 4151 00e0 3E000000 		.4byte	.LVL24
 4152 00e4 42000000 		.4byte	.LFE21
 4153 00e8 0400     		.2byte	0x4
 4154 00ea F3       		.byte	0xf3
 4155 00eb 01       		.uleb128 0x1
 4156 00ec 51       		.byte	0x51
 4157 00ed 9F       		.byte	0x9f
 4158 00ee 00000000 		.4byte	0
 4159 00f2 00000000 		.4byte	0
 4160              	.LLST5:
 4161 00f6 24000000 		.4byte	.LVL16
 4162 00fa 28000000 		.4byte	.LVL17
 4163 00fe 0200     		.2byte	0x2
 4164 0100 30       		.byte	0x30
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 127


 4165 0101 9F       		.byte	0x9f
 4166 0102 28000000 		.4byte	.LVL17
 4167 0106 38000000 		.4byte	.LVL21
 4168 010a 0100     		.2byte	0x1
 4169 010c 53       		.byte	0x53
 4170 010d 3E000000 		.4byte	.LVL24
 4171 0111 42000000 		.4byte	.LFE21
 4172 0115 0100     		.2byte	0x1
 4173 0117 53       		.byte	0x53
 4174 0118 00000000 		.4byte	0
 4175 011c 00000000 		.4byte	0
 4176              	.LLST6:
 4177 0120 10000000 		.4byte	.LVL12
 4178 0124 1C000000 		.4byte	.LVL13
 4179 0128 0100     		.2byte	0x1
 4180 012a 53       		.byte	0x53
 4181 012b 38000000 		.4byte	.LVL21
 4182 012f 3A000000 		.4byte	.LVL22
 4183 0133 0100     		.2byte	0x1
 4184 0135 53       		.byte	0x53
 4185 0136 3C000000 		.4byte	.LVL23
 4186 013a 3E000000 		.4byte	.LVL24
 4187 013e 0100     		.2byte	0x1
 4188 0140 53       		.byte	0x53
 4189 0141 00000000 		.4byte	0
 4190 0145 00000000 		.4byte	0
 4191              	.LLST7:
 4192 0149 24000000 		.4byte	.LVL16
 4193 014d 38000000 		.4byte	.LVL21
 4194 0151 0100     		.2byte	0x1
 4195 0153 50       		.byte	0x50
 4196 0154 00000000 		.4byte	0
 4197 0158 00000000 		.4byte	0
 4198              	.LLST8:
 4199 015c 06000000 		.4byte	.LVL25
 4200 0160 0A000000 		.4byte	.LVL26
 4201 0164 0100     		.2byte	0x1
 4202 0166 51       		.byte	0x51
 4203 0167 0A000000 		.4byte	.LVL26
 4204 016b 19000000 		.4byte	.LVL29-1
 4205 016f 0100     		.2byte	0x1
 4206 0171 53       		.byte	0x53
 4207 0172 00000000 		.4byte	0
 4208 0176 00000000 		.4byte	0
 4209              	.LLST9:
 4210 017a 00000000 		.4byte	.LVL30
 4211 017e 37000000 		.4byte	.LVL32-1
 4212 0182 0100     		.2byte	0x1
 4213 0184 50       		.byte	0x50
 4214 0185 37000000 		.4byte	.LVL32-1
 4215 0189 40000000 		.4byte	.LFE2
 4216 018d 0400     		.2byte	0x4
 4217 018f F3       		.byte	0xf3
 4218 0190 01       		.uleb128 0x1
 4219 0191 50       		.byte	0x50
 4220 0192 9F       		.byte	0x9f
 4221 0193 00000000 		.4byte	0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 128


 4222 0197 00000000 		.4byte	0
 4223              	.LLST10:
 4224 019b 30000000 		.4byte	.LVL31
 4225 019f 3A000000 		.4byte	.LVL33
 4226 01a3 0100     		.2byte	0x1
 4227 01a5 54       		.byte	0x54
 4228 01a6 3A000000 		.4byte	.LVL33
 4229 01aa 40000000 		.4byte	.LFE2
 4230 01ae 0100     		.2byte	0x1
 4231 01b0 50       		.byte	0x50
 4232 01b1 00000000 		.4byte	0
 4233 01b5 00000000 		.4byte	0
 4234              	.LLST11:
 4235 01b9 02000000 		.4byte	.LVL34
 4236 01bd 22000000 		.4byte	.LVL36
 4237 01c1 0200     		.2byte	0x2
 4238 01c3 30       		.byte	0x30
 4239 01c4 9F       		.byte	0x9f
 4240 01c5 22000000 		.4byte	.LVL36
 4241 01c9 2C000000 		.4byte	.LFE3
 4242 01cd 0100     		.2byte	0x1
 4243 01cf 50       		.byte	0x50
 4244 01d0 00000000 		.4byte	0
 4245 01d4 00000000 		.4byte	0
 4246              	.LLST12:
 4247 01d8 02000000 		.4byte	.LVL37
 4248 01dc 12000000 		.4byte	.LVL38
 4249 01e0 0300     		.2byte	0x3
 4250 01e2 09       		.byte	0x9
 4251 01e3 FF       		.byte	0xff
 4252 01e4 9F       		.byte	0x9f
 4253 01e5 12000000 		.4byte	.LVL38
 4254 01e9 14000000 		.4byte	.LVL39
 4255 01ed 0100     		.2byte	0x1
 4256 01ef 50       		.byte	0x50
 4257 01f0 18000000 		.4byte	.LVL40
 4258 01f4 31000000 		.4byte	.LVL41-1
 4259 01f8 0100     		.2byte	0x1
 4260 01fa 50       		.byte	0x50
 4261 01fb 32000000 		.4byte	.LVL41
 4262 01ff 3C000000 		.4byte	.LVL43
 4263 0203 0100     		.2byte	0x1
 4264 0205 50       		.byte	0x50
 4265 0206 3C000000 		.4byte	.LVL43
 4266 020a 3E000000 		.4byte	.LVL44
 4267 020e 0300     		.2byte	0x3
 4268 0210 09       		.byte	0x9
 4269 0211 FF       		.byte	0xff
 4270 0212 9F       		.byte	0x9f
 4271 0213 3E000000 		.4byte	.LVL44
 4272 0217 48000000 		.4byte	.LFE4
 4273 021b 0100     		.2byte	0x1
 4274 021d 50       		.byte	0x50
 4275 021e 00000000 		.4byte	0
 4276 0222 00000000 		.4byte	0
 4277              	.LLST13:
 4278 0226 12000000 		.4byte	.LVL38
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 129


 4279 022a 3C000000 		.4byte	.LVL43
 4280 022e 0100     		.2byte	0x1
 4281 0230 54       		.byte	0x54
 4282 0231 00000000 		.4byte	0
 4283 0235 00000000 		.4byte	0
 4284              	.LLST14:
 4285 0239 00000000 		.4byte	.LVL45
 4286 023d 08000000 		.4byte	.LVL46
 4287 0241 0100     		.2byte	0x1
 4288 0243 50       		.byte	0x50
 4289 0244 08000000 		.4byte	.LVL46
 4290 0248 A0000000 		.4byte	.LFE6
 4291 024c 0400     		.2byte	0x4
 4292 024e F3       		.byte	0xf3
 4293 024f 01       		.uleb128 0x1
 4294 0250 50       		.byte	0x50
 4295 0251 9F       		.byte	0x9f
 4296 0252 00000000 		.4byte	0
 4297 0256 00000000 		.4byte	0
 4298              	.LLST15:
 4299 025a 00000000 		.4byte	.LVL45
 4300 025e 12000000 		.4byte	.LVL48
 4301 0262 0100     		.2byte	0x1
 4302 0264 51       		.byte	0x51
 4303 0265 12000000 		.4byte	.LVL48
 4304 0269 A0000000 		.4byte	.LFE6
 4305 026d 0400     		.2byte	0x4
 4306 026f F3       		.byte	0xf3
 4307 0270 01       		.uleb128 0x1
 4308 0271 51       		.byte	0x51
 4309 0272 9F       		.byte	0x9f
 4310 0273 00000000 		.4byte	0
 4311 0277 00000000 		.4byte	0
 4312              	.LLST16:
 4313 027b 00000000 		.4byte	.LVL45
 4314 027f 0C000000 		.4byte	.LVL47
 4315 0283 0100     		.2byte	0x1
 4316 0285 52       		.byte	0x52
 4317 0286 0C000000 		.4byte	.LVL47
 4318 028a 98000000 		.4byte	.LVL62
 4319 028e 0100     		.2byte	0x1
 4320 0290 56       		.byte	0x56
 4321 0291 98000000 		.4byte	.LVL62
 4322 0295 A0000000 		.4byte	.LFE6
 4323 0299 0400     		.2byte	0x4
 4324 029b F3       		.byte	0xf3
 4325 029c 01       		.uleb128 0x1
 4326 029d 52       		.byte	0x52
 4327 029e 9F       		.byte	0x9f
 4328 029f 00000000 		.4byte	0
 4329 02a3 00000000 		.4byte	0
 4330              	.LLST17:
 4331 02a7 16000000 		.4byte	.LVL49
 4332 02ab 1A000000 		.4byte	.LVL50
 4333 02af 0200     		.2byte	0x2
 4334 02b1 30       		.byte	0x30
 4335 02b2 9F       		.byte	0x9f
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 130


 4336 02b3 1A000000 		.4byte	.LVL50
 4337 02b7 98000000 		.4byte	.LVL61
 4338 02bb 0100     		.2byte	0x1
 4339 02bd 55       		.byte	0x55
 4340 02be 00000000 		.4byte	0
 4341 02c2 00000000 		.4byte	0
 4342              	.LLST18:
 4343 02c6 1E000000 		.4byte	.LVL51
 4344 02ca 3D000000 		.4byte	.LVL52-1
 4345 02ce 0100     		.2byte	0x1
 4346 02d0 50       		.byte	0x50
 4347 02d1 50000000 		.4byte	.LVL53
 4348 02d5 6F000000 		.4byte	.LVL54-1
 4349 02d9 0100     		.2byte	0x1
 4350 02db 50       		.byte	0x50
 4351 02dc 76000000 		.4byte	.LVL55
 4352 02e0 87000000 		.4byte	.LVL56-1
 4353 02e4 0100     		.2byte	0x1
 4354 02e6 50       		.byte	0x50
 4355 02e7 00000000 		.4byte	0
 4356 02eb 00000000 		.4byte	0
 4357              	.LLST19:
 4358 02ef 16000000 		.4byte	.LVL49
 4359 02f3 98000000 		.4byte	.LVL60
 4360 02f7 0100     		.2byte	0x1
 4361 02f9 54       		.byte	0x54
 4362 02fa 00000000 		.4byte	0
 4363 02fe 00000000 		.4byte	0
 4364              	.LLST20:
 4365 0302 00000000 		.4byte	.LVL63
 4366 0306 13000000 		.4byte	.LVL64-1
 4367 030a 0100     		.2byte	0x1
 4368 030c 50       		.byte	0x50
 4369 030d 13000000 		.4byte	.LVL64-1
 4370 0311 16000000 		.4byte	.LVL65
 4371 0315 0400     		.2byte	0x4
 4372 0317 F3       		.byte	0xf3
 4373 0318 01       		.uleb128 0x1
 4374 0319 50       		.byte	0x50
 4375 031a 9F       		.byte	0x9f
 4376 031b 16000000 		.4byte	.LVL65
 4377 031f 25000000 		.4byte	.LVL66-1
 4378 0323 0100     		.2byte	0x1
 4379 0325 50       		.byte	0x50
 4380 0326 25000000 		.4byte	.LVL66-1
 4381 032a 50000000 		.4byte	.LFE8
 4382 032e 0400     		.2byte	0x4
 4383 0330 F3       		.byte	0xf3
 4384 0331 01       		.uleb128 0x1
 4385 0332 50       		.byte	0x50
 4386 0333 9F       		.byte	0x9f
 4387 0334 00000000 		.4byte	0
 4388 0338 00000000 		.4byte	0
 4389              	.LLST21:
 4390 033c 08000000 		.4byte	.LVL69
 4391 0340 3D000000 		.4byte	.LVL80-1
 4392 0344 0100     		.2byte	0x1
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 131


 4393 0346 53       		.byte	0x53
 4394 0347 00000000 		.4byte	0
 4395 034b 00000000 		.4byte	0
 4396              	.LLST22:
 4397 034f 02000000 		.4byte	.LVL68
 4398 0353 08000000 		.4byte	.LVL69
 4399 0357 0200     		.2byte	0x2
 4400 0359 30       		.byte	0x30
 4401 035a 9F       		.byte	0x9f
 4402 035b 08000000 		.4byte	.LVL69
 4403 035f 3D000000 		.4byte	.LVL80-1
 4404 0363 0100     		.2byte	0x1
 4405 0365 50       		.byte	0x50
 4406 0366 00000000 		.4byte	0
 4407 036a 00000000 		.4byte	0
 4408              	.LLST23:
 4409 036e 0C000000 		.4byte	.LVL70
 4410 0372 1E000000 		.4byte	.LVL73
 4411 0376 0100     		.2byte	0x1
 4412 0378 52       		.byte	0x52
 4413 0379 20000000 		.4byte	.LVL74
 4414 037d 26000000 		.4byte	.LVL75
 4415 0381 0100     		.2byte	0x1
 4416 0383 51       		.byte	0x51
 4417 0384 26000000 		.4byte	.LVL75
 4418 0388 36000000 		.4byte	.LVL79
 4419 038c 0100     		.2byte	0x1
 4420 038e 52       		.byte	0x52
 4421 038f 00000000 		.4byte	0
 4422 0393 00000000 		.4byte	0
 4423              	.LLST24:
 4424 0397 02000000 		.4byte	.LVL81
 4425 039b 1A000000 		.4byte	.LVL83
 4426 039f 0200     		.2byte	0x2
 4427 03a1 30       		.byte	0x30
 4428 03a2 9F       		.byte	0x9f
 4429 03a3 1A000000 		.4byte	.LVL83
 4430 03a7 24000000 		.4byte	.LFE10
 4431 03ab 0100     		.2byte	0x1
 4432 03ad 50       		.byte	0x50
 4433 03ae 00000000 		.4byte	0
 4434 03b2 00000000 		.4byte	0
 4435              	.LLST25:
 4436 03b6 16000000 		.4byte	.LVL85
 4437 03ba 29000000 		.4byte	.LVL86-1
 4438 03be 0100     		.2byte	0x1
 4439 03c0 50       		.byte	0x50
 4440 03c1 29000000 		.4byte	.LVL86-1
 4441 03c5 2C000000 		.4byte	.LVL87
 4442 03c9 0100     		.2byte	0x1
 4443 03cb 54       		.byte	0x54
 4444 03cc 2C000000 		.4byte	.LVL87
 4445 03d0 54000000 		.4byte	.LVL88
 4446 03d4 0100     		.2byte	0x1
 4447 03d6 50       		.byte	0x50
 4448 03d7 54000000 		.4byte	.LVL88
 4449 03db 58000000 		.4byte	.LVL89
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 132


 4450 03df 0200     		.2byte	0x2
 4451 03e1 30       		.byte	0x30
 4452 03e2 9F       		.byte	0x9f
 4453 03e3 58000000 		.4byte	.LVL89
 4454 03e7 6A000000 		.4byte	.LVL90
 4455 03eb 0100     		.2byte	0x1
 4456 03ed 50       		.byte	0x50
 4457 03ee 6A000000 		.4byte	.LVL90
 4458 03f2 6E000000 		.4byte	.LVL91
 4459 03f6 0100     		.2byte	0x1
 4460 03f8 54       		.byte	0x54
 4461 03f9 00000000 		.4byte	0
 4462 03fd 00000000 		.4byte	0
 4463              	.LLST26:
 4464 0401 00000000 		.4byte	.LVL92
 4465 0405 05000000 		.4byte	.LVL93-1
 4466 0409 0100     		.2byte	0x1
 4467 040b 50       		.byte	0x50
 4468 040c 05000000 		.4byte	.LVL93-1
 4469 0410 08000000 		.4byte	.LFE12
 4470 0414 0400     		.2byte	0x4
 4471 0416 F3       		.byte	0xf3
 4472 0417 01       		.uleb128 0x1
 4473 0418 50       		.byte	0x50
 4474 0419 9F       		.byte	0x9f
 4475 041a 00000000 		.4byte	0
 4476 041e 00000000 		.4byte	0
 4477              	.LLST27:
 4478 0422 00000000 		.4byte	.LVL94
 4479 0426 08000000 		.4byte	.LVL95
 4480 042a 0100     		.2byte	0x1
 4481 042c 50       		.byte	0x50
 4482 042d 08000000 		.4byte	.LVL95
 4483 0431 0A000000 		.4byte	.LVL96
 4484 0435 0300     		.2byte	0x3
 4485 0437 70       		.byte	0x70
 4486 0438 01       		.sleb128 1
 4487 0439 9F       		.byte	0x9f
 4488 043a 0A000000 		.4byte	.LVL96
 4489 043e 30000000 		.4byte	.LFE13
 4490 0442 0400     		.2byte	0x4
 4491 0444 F3       		.byte	0xf3
 4492 0445 01       		.uleb128 0x1
 4493 0446 50       		.byte	0x50
 4494 0447 9F       		.byte	0x9f
 4495 0448 00000000 		.4byte	0
 4496 044c 00000000 		.4byte	0
 4497              	.LLST28:
 4498 0450 00000000 		.4byte	.LVL97
 4499 0454 0A000000 		.4byte	.LVL101
 4500 0458 0100     		.2byte	0x1
 4501 045a 50       		.byte	0x50
 4502 045b 0A000000 		.4byte	.LVL101
 4503 045f 0C000000 		.4byte	.LVL102
 4504 0463 0300     		.2byte	0x3
 4505 0465 70       		.byte	0x70
 4506 0466 01       		.sleb128 1
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 133


 4507 0467 9F       		.byte	0x9f
 4508 0468 0C000000 		.4byte	.LVL102
 4509 046c 14000000 		.4byte	.LFE14
 4510 0470 0400     		.2byte	0x4
 4511 0472 F3       		.byte	0xf3
 4512 0473 01       		.uleb128 0x1
 4513 0474 50       		.byte	0x50
 4514 0475 9F       		.byte	0x9f
 4515 0476 00000000 		.4byte	0
 4516 047a 00000000 		.4byte	0
 4517              	.LLST29:
 4518 047e 04000000 		.4byte	.LVL98
 4519 0482 06000000 		.4byte	.LVL99
 4520 0486 0100     		.2byte	0x1
 4521 0488 53       		.byte	0x53
 4522 0489 08000000 		.4byte	.LVL100
 4523 048d 0C000000 		.4byte	.LVL102
 4524 0491 0100     		.2byte	0x1
 4525 0493 53       		.byte	0x53
 4526 0494 0C000000 		.4byte	.LVL102
 4527 0498 14000000 		.4byte	.LFE14
 4528 049c 0100     		.2byte	0x1
 4529 049e 50       		.byte	0x50
 4530 049f 00000000 		.4byte	0
 4531 04a3 00000000 		.4byte	0
 4532              	.LLST30:
 4533 04a7 00000000 		.4byte	.LVL103
 4534 04ab 06000000 		.4byte	.LVL104
 4535 04af 0100     		.2byte	0x1
 4536 04b1 50       		.byte	0x50
 4537 04b2 06000000 		.4byte	.LVL104
 4538 04b6 10000000 		.4byte	.LVL107
 4539 04ba 0100     		.2byte	0x1
 4540 04bc 54       		.byte	0x54
 4541 04bd 10000000 		.4byte	.LVL107
 4542 04c1 12000000 		.4byte	.LFE15
 4543 04c5 0400     		.2byte	0x4
 4544 04c7 F3       		.byte	0xf3
 4545 04c8 01       		.uleb128 0x1
 4546 04c9 50       		.byte	0x50
 4547 04ca 9F       		.byte	0x9f
 4548 04cb 00000000 		.4byte	0
 4549 04cf 00000000 		.4byte	0
 4550              	.LLST31:
 4551 04d3 00000000 		.4byte	.LVL103
 4552 04d7 09000000 		.4byte	.LVL105-1
 4553 04db 0100     		.2byte	0x1
 4554 04dd 51       		.byte	0x51
 4555 04de 09000000 		.4byte	.LVL105-1
 4556 04e2 12000000 		.4byte	.LFE15
 4557 04e6 0400     		.2byte	0x4
 4558 04e8 F3       		.byte	0xf3
 4559 04e9 01       		.uleb128 0x1
 4560 04ea 51       		.byte	0x51
 4561 04eb 9F       		.byte	0x9f
 4562 04ec 00000000 		.4byte	0
 4563 04f0 00000000 		.4byte	0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 134


 4564              	.LLST32:
 4565 04f4 00000000 		.4byte	.LVL108
 4566 04f8 0A000000 		.4byte	.LVL110
 4567 04fc 0100     		.2byte	0x1
 4568 04fe 50       		.byte	0x50
 4569 04ff 0A000000 		.4byte	.LVL110
 4570 0503 0C000000 		.4byte	.LVL111
 4571 0507 0100     		.2byte	0x1
 4572 0509 53       		.byte	0x53
 4573 050a 0C000000 		.4byte	.LVL111
 4574 050e 0E000000 		.4byte	.LVL112
 4575 0512 0100     		.2byte	0x1
 4576 0514 50       		.byte	0x50
 4577 0515 0E000000 		.4byte	.LVL112
 4578 0519 19000000 		.4byte	.LVL114-1
 4579 051d 0100     		.2byte	0x1
 4580 051f 53       		.byte	0x53
 4581 0520 19000000 		.4byte	.LVL114-1
 4582 0524 1C000000 		.4byte	.LFE16
 4583 0528 0400     		.2byte	0x4
 4584 052a F3       		.byte	0xf3
 4585 052b 01       		.uleb128 0x1
 4586 052c 50       		.byte	0x50
 4587 052d 9F       		.byte	0x9f
 4588 052e 00000000 		.4byte	0
 4589 0532 00000000 		.4byte	0
 4590              	.LLST33:
 4591 0536 04000000 		.4byte	.LVL109
 4592 053a 0E000000 		.4byte	.LVL112
 4593 053e 0200     		.2byte	0x2
 4594 0540 30       		.byte	0x30
 4595 0541 9F       		.byte	0x9f
 4596 0542 0E000000 		.4byte	.LVL112
 4597 0546 16000000 		.4byte	.LVL113
 4598 054a 0100     		.2byte	0x1
 4599 054c 50       		.byte	0x50
 4600 054d 1A000000 		.4byte	.LVL114
 4601 0551 1C000000 		.4byte	.LFE16
 4602 0555 0100     		.2byte	0x1
 4603 0557 50       		.byte	0x50
 4604 0558 00000000 		.4byte	0
 4605 055c 00000000 		.4byte	0
 4606              	.LLST34:
 4607 0560 02000000 		.4byte	.LVL115
 4608 0564 08000000 		.4byte	.LVL116
 4609 0568 0200     		.2byte	0x2
 4610 056a 30       		.byte	0x30
 4611 056b 9F       		.byte	0x9f
 4612 056c 08000000 		.4byte	.LVL116
 4613 0570 18000000 		.4byte	.LVL121
 4614 0574 0100     		.2byte	0x1
 4615 0576 55       		.byte	0x55
 4616 0577 18000000 		.4byte	.LVL121
 4617 057b 1A000000 		.4byte	.LFE17
 4618 057f 0100     		.2byte	0x1
 4619 0581 50       		.byte	0x50
 4620 0582 00000000 		.4byte	0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 135


 4621 0586 00000000 		.4byte	0
 4622              	.LLST35:
 4623 058a 02000000 		.4byte	.LVL115
 4624 058e 08000000 		.4byte	.LVL116
 4625 0592 0200     		.2byte	0x2
 4626 0594 30       		.byte	0x30
 4627 0595 9F       		.byte	0x9f
 4628 0596 08000000 		.4byte	.LVL116
 4629 059a 18000000 		.4byte	.LVL120
 4630 059e 0100     		.2byte	0x1
 4631 05a0 54       		.byte	0x54
 4632 05a1 00000000 		.4byte	0
 4633 05a5 00000000 		.4byte	0
 4634              	.LLST36:
 4635 05a9 02000000 		.4byte	.LVL122
 4636 05ad 06000000 		.4byte	.LVL123
 4637 05b1 0200     		.2byte	0x2
 4638 05b3 30       		.byte	0x30
 4639 05b4 9F       		.byte	0x9f
 4640 05b5 06000000 		.4byte	.LVL123
 4641 05b9 38000000 		.4byte	.LVL129
 4642 05bd 0100     		.2byte	0x1
 4643 05bf 55       		.byte	0x55
 4644 05c0 00000000 		.4byte	0
 4645 05c4 00000000 		.4byte	0
 4646              	.LLST37:
 4647 05c8 10000000 		.4byte	.LVL124
 4648 05cc 14000000 		.4byte	.LVL125
 4649 05d0 0200     		.2byte	0x2
 4650 05d2 30       		.byte	0x30
 4651 05d3 9F       		.byte	0x9f
 4652 05d4 14000000 		.4byte	.LVL125
 4653 05d8 34000000 		.4byte	.LVL128
 4654 05dc 0100     		.2byte	0x1
 4655 05de 54       		.byte	0x54
 4656 05df 00000000 		.4byte	0
 4657 05e3 00000000 		.4byte	0
 4658              	.LLST38:
 4659 05e7 10000000 		.4byte	.LVL124
 4660 05eb 34000000 		.4byte	.LVL128
 4661 05ef 0100     		.2byte	0x1
 4662 05f1 56       		.byte	0x56
 4663 05f2 00000000 		.4byte	0
 4664 05f6 00000000 		.4byte	0
 4665              	.LLST39:
 4666 05fa 00000000 		.4byte	.LVL130
 4667 05fe 04000000 		.4byte	.LVL131
 4668 0602 0100     		.2byte	0x1
 4669 0604 50       		.byte	0x50
 4670 0605 04000000 		.4byte	.LVL131
 4671 0609 14000000 		.4byte	.LFE23
 4672 060d 0400     		.2byte	0x4
 4673 060f F3       		.byte	0xf3
 4674 0610 01       		.uleb128 0x1
 4675 0611 50       		.byte	0x50
 4676 0612 9F       		.byte	0x9f
 4677 0613 00000000 		.4byte	0
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 136


 4678 0617 00000000 		.4byte	0
 4679              	.LLST40:
 4680 061b 00000000 		.4byte	.LVL134
 4681 061f 12000000 		.4byte	.LVL135
 4682 0623 0100     		.2byte	0x1
 4683 0625 50       		.byte	0x50
 4684 0626 12000000 		.4byte	.LVL135
 4685 062a 1A000000 		.4byte	.LVL136
 4686 062e 0400     		.2byte	0x4
 4687 0630 F3       		.byte	0xf3
 4688 0631 01       		.uleb128 0x1
 4689 0632 50       		.byte	0x50
 4690 0633 9F       		.byte	0x9f
 4691 0634 1A000000 		.4byte	.LVL136
 4692 0638 1C000000 		.4byte	.LVL137
 4693 063c 0100     		.2byte	0x1
 4694 063e 50       		.byte	0x50
 4695 063f 1C000000 		.4byte	.LVL137
 4696 0643 24000000 		.4byte	.LFE24
 4697 0647 0400     		.2byte	0x4
 4698 0649 F3       		.byte	0xf3
 4699 064a 01       		.uleb128 0x1
 4700 064b 50       		.byte	0x50
 4701 064c 9F       		.byte	0x9f
 4702 064d 00000000 		.4byte	0
 4703 0651 00000000 		.4byte	0
 4704              	.LLST41:
 4705 0655 20000000 		.4byte	.LVL138
 4706 0659 22000000 		.4byte	.LVL139
 4707 065d 0100     		.2byte	0x1
 4708 065f 50       		.byte	0x50
 4709 0660 00000000 		.4byte	0
 4710 0664 00000000 		.4byte	0
 4711              	.LLST42:
 4712 0668 00000000 		.4byte	.LVL140
 4713 066c 07000000 		.4byte	.LVL141-1
 4714 0670 0100     		.2byte	0x1
 4715 0672 50       		.byte	0x50
 4716 0673 07000000 		.4byte	.LVL141-1
 4717 0677 3A000000 		.4byte	.LFE19
 4718 067b 0400     		.2byte	0x4
 4719 067d F3       		.byte	0xf3
 4720 067e 01       		.uleb128 0x1
 4721 067f 50       		.byte	0x50
 4722 0680 9F       		.byte	0x9f
 4723 0681 00000000 		.4byte	0
 4724 0685 00000000 		.4byte	0
 4725              	.LLST43:
 4726 0689 00000000 		.4byte	.LVL140
 4727 068d 07000000 		.4byte	.LVL141-1
 4728 0691 0100     		.2byte	0x1
 4729 0693 51       		.byte	0x51
 4730 0694 07000000 		.4byte	.LVL141-1
 4731 0698 38000000 		.4byte	.LVL155
 4732 069c 0100     		.2byte	0x1
 4733 069e 56       		.byte	0x56
 4734 069f 38000000 		.4byte	.LVL155
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 137


 4735 06a3 3A000000 		.4byte	.LFE19
 4736 06a7 0400     		.2byte	0x4
 4737 06a9 F3       		.byte	0xf3
 4738 06aa 01       		.uleb128 0x1
 4739 06ab 51       		.byte	0x51
 4740 06ac 9F       		.byte	0x9f
 4741 06ad 00000000 		.4byte	0
 4742 06b1 00000000 		.4byte	0
 4743              	.LLST44:
 4744 06b5 1C000000 		.4byte	.LVL147
 4745 06b9 20000000 		.4byte	.LVL148
 4746 06bd 0100     		.2byte	0x1
 4747 06bf 50       		.byte	0x50
 4748 06c0 20000000 		.4byte	.LVL148
 4749 06c4 38000000 		.4byte	.LVL153
 4750 06c8 0100     		.2byte	0x1
 4751 06ca 54       		.byte	0x54
 4752 06cb 00000000 		.4byte	0
 4753 06cf 00000000 		.4byte	0
 4754              	.LLST45:
 4755 06d3 30000000 		.4byte	.LVL151
 4756 06d7 32000000 		.4byte	.LVL152
 4757 06db 0100     		.2byte	0x1
 4758 06dd 50       		.byte	0x50
 4759 06de 00000000 		.4byte	0
 4760 06e2 00000000 		.4byte	0
 4761              	.LLST46:
 4762 06e6 14000000 		.4byte	.LVL144
 4763 06ea 16000000 		.4byte	.LVL145
 4764 06ee 0100     		.2byte	0x1
 4765 06f0 50       		.byte	0x50
 4766 06f1 16000000 		.4byte	.LVL145
 4767 06f5 19000000 		.4byte	.LVL146-1
 4768 06f9 0100     		.2byte	0x1
 4769 06fb 51       		.byte	0x51
 4770 06fc 00000000 		.4byte	0
 4771 0700 00000000 		.4byte	0
 4772              	.LLST47:
 4773 0704 0A000000 		.4byte	.LVL142
 4774 0708 11000000 		.4byte	.LVL143-1
 4775 070c 0100     		.2byte	0x1
 4776 070e 50       		.byte	0x50
 4777 070f 11000000 		.4byte	.LVL143-1
 4778 0713 38000000 		.4byte	.LVL154
 4779 0717 0100     		.2byte	0x1
 4780 0719 55       		.byte	0x55
 4781 071a 00000000 		.4byte	0
 4782 071e 00000000 		.4byte	0
 4783              	.LLST48:
 4784 0722 02000000 		.4byte	.LVL156
 4785 0726 06000000 		.4byte	.LVL157
 4786 072a 0200     		.2byte	0x2
 4787 072c 30       		.byte	0x30
 4788 072d 9F       		.byte	0x9f
 4789 072e 06000000 		.4byte	.LVL157
 4790 0732 1E000000 		.4byte	.LVL161
 4791 0736 0100     		.2byte	0x1
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 138


 4792 0738 54       		.byte	0x54
 4793 0739 00000000 		.4byte	0
 4794 073d 00000000 		.4byte	0
 4795              	.LLST49:
 4796 0741 12000000 		.4byte	.LVL158
 4797 0745 17000000 		.4byte	.LVL159-1
 4798 0749 0100     		.2byte	0x1
 4799 074b 51       		.byte	0x51
 4800 074c 00000000 		.4byte	0
 4801 0750 00000000 		.4byte	0
 4802              	.LLST50:
 4803 0754 0A000000 		.4byte	.LVL168
 4804 0758 0E000000 		.4byte	.LVL169
 4805 075c 0100     		.2byte	0x1
 4806 075e 51       		.byte	0x51
 4807 075f 0E000000 		.4byte	.LVL169
 4808 0763 13000000 		.4byte	.LVL170-1
 4809 0767 0100     		.2byte	0x1
 4810 0769 53       		.byte	0x53
 4811 076a 1C000000 		.4byte	.LVL172
 4812 076e 25000000 		.4byte	.LVL174-1
 4813 0772 0100     		.2byte	0x1
 4814 0774 53       		.byte	0x53
 4815 0775 2E000000 		.4byte	.LVL176
 4816 0779 3D000000 		.4byte	.LVL179-1
 4817 077d 0100     		.2byte	0x1
 4818 077f 53       		.byte	0x53
 4819 0780 4A000000 		.4byte	.LVL182
 4820 0784 4C000000 		.4byte	.LVL183
 4821 0788 0100     		.2byte	0x1
 4822 078a 53       		.byte	0x53
 4823 078b 4C000000 		.4byte	.LVL183
 4824 078f 52000000 		.4byte	.LVL185
 4825 0793 0100     		.2byte	0x1
 4826 0795 55       		.byte	0x55
 4827 0796 00000000 		.4byte	0
 4828 079a 00000000 		.4byte	0
 4829              	.LLST51:
 4830 079e 06000000 		.4byte	.LVL167
 4831 07a2 13000000 		.4byte	.LVL170-1
 4832 07a6 0100     		.2byte	0x1
 4833 07a8 50       		.byte	0x50
 4834 07a9 18000000 		.4byte	.LVL171
 4835 07ad 25000000 		.4byte	.LVL174-1
 4836 07b1 0100     		.2byte	0x1
 4837 07b3 50       		.byte	0x50
 4838 07b4 2A000000 		.4byte	.LVL175
 4839 07b8 3D000000 		.4byte	.LVL179-1
 4840 07bc 0100     		.2byte	0x1
 4841 07be 50       		.byte	0x50
 4842 07bf 48000000 		.4byte	.LVL181
 4843 07c3 51000000 		.4byte	.LVL184-1
 4844 07c7 0100     		.2byte	0x1
 4845 07c9 50       		.byte	0x50
 4846 07ca 00000000 		.4byte	0
 4847 07ce 00000000 		.4byte	0
 4848              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 139


 4849 0000 DC000000 		.4byte	0xdc
 4850 0004 0200     		.2byte	0x2
 4851 0006 00000000 		.4byte	.Ldebug_info0
 4852 000a 04       		.byte	0x4
 4853 000b 00       		.byte	0
 4854 000c 0000     		.2byte	0
 4855 000e 0000     		.2byte	0
 4856 0010 00000000 		.4byte	.LFB20
 4857 0014 84000000 		.4byte	.LFE20-.LFB20
 4858 0018 00000000 		.4byte	.LFB21
 4859 001c 42000000 		.4byte	.LFE21-.LFB21
 4860 0020 00000000 		.4byte	.LFB7
 4861 0024 28000000 		.4byte	.LFE7-.LFB7
 4862 0028 00000000 		.4byte	.LFB1
 4863 002c 10000000 		.4byte	.LFE1-.LFB1
 4864 0030 00000000 		.4byte	.LFB2
 4865 0034 40000000 		.4byte	.LFE2-.LFB2
 4866 0038 00000000 		.4byte	.LFB3
 4867 003c 2C000000 		.4byte	.LFE3-.LFB3
 4868 0040 00000000 		.4byte	.LFB4
 4869 0044 48000000 		.4byte	.LFE4-.LFB4
 4870 0048 00000000 		.4byte	.LFB6
 4871 004c A0000000 		.4byte	.LFE6-.LFB6
 4872 0050 00000000 		.4byte	.LFB8
 4873 0054 50000000 		.4byte	.LFE8-.LFB8
 4874 0058 00000000 		.4byte	.LFB9
 4875 005c 44000000 		.4byte	.LFE9-.LFB9
 4876 0060 00000000 		.4byte	.LFB10
 4877 0064 24000000 		.4byte	.LFE10-.LFB10
 4878 0068 00000000 		.4byte	.LFB11
 4879 006c 78000000 		.4byte	.LFE11-.LFB11
 4880 0070 00000000 		.4byte	.LFB12
 4881 0074 08000000 		.4byte	.LFE12-.LFB12
 4882 0078 00000000 		.4byte	.LFB13
 4883 007c 30000000 		.4byte	.LFE13-.LFB13
 4884 0080 00000000 		.4byte	.LFB14
 4885 0084 14000000 		.4byte	.LFE14-.LFB14
 4886 0088 00000000 		.4byte	.LFB15
 4887 008c 12000000 		.4byte	.LFE15-.LFB15
 4888 0090 00000000 		.4byte	.LFB16
 4889 0094 1C000000 		.4byte	.LFE16-.LFB16
 4890 0098 00000000 		.4byte	.LFB17
 4891 009c 1A000000 		.4byte	.LFE17-.LFB17
 4892 00a0 00000000 		.4byte	.LFB22
 4893 00a4 40000000 		.4byte	.LFE22-.LFB22
 4894 00a8 00000000 		.4byte	.LFB23
 4895 00ac 14000000 		.4byte	.LFE23-.LFB23
 4896 00b0 00000000 		.4byte	.LFB24
 4897 00b4 24000000 		.4byte	.LFE24-.LFB24
 4898 00b8 00000000 		.4byte	.LFB19
 4899 00bc 3A000000 		.4byte	.LFE19-.LFB19
 4900 00c0 00000000 		.4byte	.LFB18
 4901 00c4 24000000 		.4byte	.LFE18-.LFB18
 4902 00c8 00000000 		.4byte	.LFB5
 4903 00cc 18000000 		.4byte	.LFE5-.LFB5
 4904 00d0 00000000 		.4byte	.LFB25
 4905 00d4 68000000 		.4byte	.LFE25-.LFB25
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 140


 4906 00d8 00000000 		.4byte	0
 4907 00dc 00000000 		.4byte	0
 4908              		.section	.debug_ranges,"",%progbits
 4909              	.Ldebug_ranges0:
 4910 0000 00000000 		.4byte	.LFB20
 4911 0004 84000000 		.4byte	.LFE20
 4912 0008 00000000 		.4byte	.LFB21
 4913 000c 42000000 		.4byte	.LFE21
 4914 0010 00000000 		.4byte	.LFB7
 4915 0014 28000000 		.4byte	.LFE7
 4916 0018 00000000 		.4byte	.LFB1
 4917 001c 10000000 		.4byte	.LFE1
 4918 0020 00000000 		.4byte	.LFB2
 4919 0024 40000000 		.4byte	.LFE2
 4920 0028 00000000 		.4byte	.LFB3
 4921 002c 2C000000 		.4byte	.LFE3
 4922 0030 00000000 		.4byte	.LFB4
 4923 0034 48000000 		.4byte	.LFE4
 4924 0038 00000000 		.4byte	.LFB6
 4925 003c A0000000 		.4byte	.LFE6
 4926 0040 00000000 		.4byte	.LFB8
 4927 0044 50000000 		.4byte	.LFE8
 4928 0048 00000000 		.4byte	.LFB9
 4929 004c 44000000 		.4byte	.LFE9
 4930 0050 00000000 		.4byte	.LFB10
 4931 0054 24000000 		.4byte	.LFE10
 4932 0058 00000000 		.4byte	.LFB11
 4933 005c 78000000 		.4byte	.LFE11
 4934 0060 00000000 		.4byte	.LFB12
 4935 0064 08000000 		.4byte	.LFE12
 4936 0068 00000000 		.4byte	.LFB13
 4937 006c 30000000 		.4byte	.LFE13
 4938 0070 00000000 		.4byte	.LFB14
 4939 0074 14000000 		.4byte	.LFE14
 4940 0078 00000000 		.4byte	.LFB15
 4941 007c 12000000 		.4byte	.LFE15
 4942 0080 00000000 		.4byte	.LFB16
 4943 0084 1C000000 		.4byte	.LFE16
 4944 0088 00000000 		.4byte	.LFB17
 4945 008c 1A000000 		.4byte	.LFE17
 4946 0090 00000000 		.4byte	.LFB22
 4947 0094 40000000 		.4byte	.LFE22
 4948 0098 00000000 		.4byte	.LFB23
 4949 009c 14000000 		.4byte	.LFE23
 4950 00a0 00000000 		.4byte	.LFB24
 4951 00a4 24000000 		.4byte	.LFE24
 4952 00a8 00000000 		.4byte	.LFB19
 4953 00ac 3A000000 		.4byte	.LFE19
 4954 00b0 00000000 		.4byte	.LFB18
 4955 00b4 24000000 		.4byte	.LFE18
 4956 00b8 00000000 		.4byte	.LFB5
 4957 00bc 18000000 		.4byte	.LFE5
 4958 00c0 00000000 		.4byte	.LFB25
 4959 00c4 68000000 		.4byte	.LFE25
 4960 00c8 00000000 		.4byte	0
 4961 00cc 00000000 		.4byte	0
 4962              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 141


 4963              	.Ldebug_line0:
 4964 0000 64040000 		.section	.debug_str,"MS",%progbits,1
 4964      0200CC00 
 4964      00000201 
 4964      FB0E0D00 
 4964      01010101 
 4965              	.LASF143:
 4966 0000 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 4966      656E7365 
 4966      5F537343 
 4966      53444765 
 4966      74436F6C 
 4967              	.LASF115:
 4968 0022 73656E73 		.ascii	"sensorElement\000"
 4968      6F72456C 
 4968      656D656E 
 4968      7400
 4969              	.LASF112:
 4970 0030 7363616E 		.ascii	"scanStatus\000"
 4970      53746174 
 4970      757300
 4971              	.LASF149:
 4972 003b 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 4972      656E7365 
 4972      5F537343 
 4972      53444469 
 4972      7361626C 
 4973              	.LASF124:
 4974 0055 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 4974      656E7365 
 4974      5F537353 
 4974      6574494F 
 4974      73496E44 
 4975              	.LASF154:
 4976 0075 43617053 		.ascii	"CapSense_BistDischargeExtCapacitors\000"
 4976      656E7365 
 4976      5F426973 
 4976      74446973 
 4976      63686172 
 4977              	.LASF158:
 4978 0099 43617053 		.ascii	"CapSense_widgetIndex\000"
 4978      656E7365 
 4978      5F776964 
 4978      67657449 
 4978      6E646578 
 4979              	.LASF71:
 4980 00ae 736E7254 		.ascii	"snrTestWidgetId\000"
 4980      65737457 
 4980      69646765 
 4980      74496400 
 4981              	.LASF20:
 4982 00be 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 4982      656E7365 
 4982      5F554E44 
 4982      4546494E 
 4982      45445F45 
 4983              	.LASF8:
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 142


 4984 00d3 756E7369 		.ascii	"unsigned int\000"
 4984      676E6564 
 4984      20696E74 
 4984      00
 4985              	.LASF55:
 4986 00e0 7363616E 		.ascii	"scanCounter\000"
 4986      436F756E 
 4986      74657200 
 4987              	.LASF53:
 4988 00ec 6877436C 		.ascii	"hwClock\000"
 4988      6F636B00 
 4989              	.LASF153:
 4990 00f4 696E6974 		.ascii	"initStatus\000"
 4990      53746174 
 4990      757300
 4991              	.LASF126:
 4992 00ff 72656756 		.ascii	"regValue\000"
 4992      616C7565 
 4992      00
 4993              	.LASF119:
 4994 0108 696E7465 		.ascii	"interruptState\000"
 4994      72727570 
 4994      74537461 
 4994      746500
 4995              	.LASF104:
 4996 0117 6C667372 		.ascii	"lfsrScale\000"
 4996      5363616C 
 4996      6500
 4997              	.LASF105:
 4998 0121 6C667372 		.ascii	"lfsrRange\000"
 4998      52616E67 
 4998      6500
 4999              	.LASF123:
 5000 012b 6D6F6465 		.ascii	"mode\000"
 5000      00
 5001              	.LASF182:
 5002 0130 43617053 		.ascii	"CapSense_IsBusy\000"
 5002      656E7365 
 5002      5F497342 
 5002      75737900 
 5003              	.LASF133:
 5004 0140 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 5004      656E7365 
 5004      5F537353 
 5004      65744D6F 
 5004      64436C6B 
 5005              	.LASF43:
 5006 0161 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 5006      656E7365 
 5006      5F52414D 
 5006      5F57445F 
 5006      4C495354 
 5007              	.LASF117:
 5008 017d 656C7464 		.ascii	"eltdNum\000"
 5008      4E756D00 
 5009              	.LASF145:
 5010 0185 70747257 		.ascii	"ptrWdgt\000"
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 143


 5010      64677400 
 5011              	.LASF150:
 5012 018d 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 5012      656E7365 
 5012      5F537353 
 5012      65745769 
 5012      64676574 
 5013              	.LASF125:
 5014 01ad 6C6F6F70 		.ascii	"loopIndex\000"
 5014      496E6465 
 5014      7800
 5015              	.LASF102:
 5016 01b7 43617053 		.ascii	"CapSense_SsCalcLfsrScale\000"
 5016      656E7365 
 5016      5F537343 
 5016      616C634C 
 5016      66737253 
 5017              	.LASF12:
 5018 01d0 666C6F61 		.ascii	"float\000"
 5018      7400
 5019              	.LASF84:
 5020 01d6 73686966 		.ascii	"shift\000"
 5020      7400
 5021              	.LASF140:
 5022 01dc 43617053 		.ascii	"CapSense_SsClearCSDSensors\000"
 5022      656E7365 
 5022      5F537343 
 5022      6C656172 
 5022      43534453 
 5023              	.LASF179:
 5024 01f7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5024      43313120 
 5024      352E342E 
 5024      31203230 
 5024      31363036 
 5025 022a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5025      20726576 
 5025      6973696F 
 5025      6E203233 
 5025      37373135 
 5026 025d 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5026      67202D66 
 5026      66756E63 
 5026      74696F6E 
 5026      2D736563 
 5027              	.LASF166:
 5028 0289 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 5028      656E7365 
 5028      5F435344 
 5028      53657475 
 5028      70576964 
 5029              	.LASF178:
 5030 02a1 43794465 		.ascii	"CyDelayUs\000"
 5030      6C617955 
 5030      7300
 5031              	.LASF70:
 5032 02ab 736E734C 		.ascii	"snsList\000"
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 144


 5032      69737400 
 5033              	.LASF64:
 5034 02b3 61646341 		.ascii	"adcActiveCh\000"
 5034      63746976 
 5034      65436800 
 5035              	.LASF7:
 5036 02bf 6C6F6E67 		.ascii	"long long unsigned int\000"
 5036      206C6F6E 
 5036      6720756E 
 5036      7369676E 
 5036      65642069 
 5037              	.LASF159:
 5038 02d6 43617053 		.ascii	"CapSense_sensorIndex\000"
 5038      656E7365 
 5038      5F73656E 
 5038      736F7249 
 5038      6E646578 
 5039              	.LASF85:
 5040 02eb 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 5040      656E7365 
 5040      5F464C41 
 5040      53485F49 
 5040      4F5F5354 
 5041              	.LASF72:
 5042 0304 736E7254 		.ascii	"snrTestSensorId\000"
 5042      65737453 
 5042      656E736F 
 5042      72496400 
 5043              	.LASF93:
 5044 0314 77646774 		.ascii	"wdgtType\000"
 5044      54797065 
 5044      00
 5045              	.LASF103:
 5046 031d 6C667372 		.ascii	"lfsrSize\000"
 5046      53697A65 
 5046      00
 5047              	.LASF40:
 5048 0326 62746E63 		.ascii	"btncold\000"
 5048      6F6C6400 
 5049              	.LASF66:
 5050 032e 6D6F6443 		.ascii	"modCsdClk\000"
 5050      7364436C 
 5050      6B00
 5051              	.LASF49:
 5052 0338 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 5052      656E7365 
 5052      5F52414D 
 5052      5F534E53 
 5052      5F535452 
 5053              	.LASF146:
 5054 0350 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 5054      656E7365 
 5054      5F537343 
 5054      53444361 
 5054      6C635072 
 5055              	.LASF78:
 5056 036a 64725074 		.ascii	"drPtr\000"
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 145


 5056      7200
 5057              	.LASF134:
 5058 0370 6D6F6443 		.ascii	"modClk\000"
 5058      6C6B00
 5059              	.LASF30:
 5060 0377 68797374 		.ascii	"hysteresis\000"
 5060      65726573 
 5060      697300
 5061              	.LASF95:
 5062 0382 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 5062      656E7365 
 5062      5F464C41 
 5062      53485F57 
 5062      445F5354 
 5063              	.LASF32:
 5064 039b 6C6F7742 		.ascii	"lowBslnRst\000"
 5064      736C6E52 
 5064      737400
 5065              	.LASF101:
 5066 03a6 43617053 		.ascii	"CapSense_SsCalcLfsrSize\000"
 5066      656E7365 
 5066      5F537343 
 5066      616C634C 
 5066      66737253 
 5067              	.LASF92:
 5068 03be 746F7461 		.ascii	"totalNumSns\000"
 5068      6C4E756D 
 5068      536E7300 
 5069              	.LASF28:
 5070 03ca 6E6F6973 		.ascii	"noiseTh\000"
 5070      65546800 
 5071              	.LASF14:
 5072 03d2 63686172 		.ascii	"char\000"
 5072      00
 5073              	.LASF169:
 5074 03d7 43794578 		.ascii	"CyExitCriticalSection\000"
 5074      69744372 
 5074      69746963 
 5074      616C5365 
 5074      6374696F 
 5075              	.LASF177:
 5076 03ed 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 5076      656E7365 
 5076      5F537343 
 5076      53444765 
 5076      744E756D 
 5077              	.LASF82:
 5078 0412 6873696F 		.ascii	"hsiomShift\000"
 5078      6D536869 
 5078      667400
 5079              	.LASF10:
 5080 041d 75696E74 		.ascii	"uint16\000"
 5080      313600
 5081              	.LASF100:
 5082 0424 636F6E76 		.ascii	"conversionsNum\000"
 5082      65727369 
 5082      6F6E734E 
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 146


 5082      756D00
 5083              	.LASF26:
 5084 0433 7265736F 		.ascii	"resolution\000"
 5084      6C757469 
 5084      6F6E00
 5085              	.LASF56:
 5086 043e 73746174 		.ascii	"status\000"
 5086      757300
 5087              	.LASF137:
 5088 0445 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 5088      656E7365 
 5088      5F43616C 
 5088      69627261 
 5088      74655769 
 5089              	.LASF19:
 5090 045e 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 5090      656E7365 
 5090      5F4C4F57 
 5090      5F42534C 
 5090      4E5F5253 
 5091              	.LASF135:
 5092 0479 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 5092      656E7365 
 5092      5F537353 
 5092      6574536E 
 5092      73436C6F 
 5093              	.LASF25:
 5094 0497 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 5094      656E7365 
 5094      5F53454E 
 5094      53455F4D 
 5094      4554484F 
 5095              	.LASF41:
 5096 04b2 62746E68 		.ascii	"btnhot\000"
 5096      6F7400
 5097              	.LASF48:
 5098 04b9 69646163 		.ascii	"idacComp\000"
 5098      436F6D70 
 5098      00
 5099              	.LASF77:
 5100 04c2 70635074 		.ascii	"pcPtr\000"
 5100      7200
 5101              	.LASF127:
 5102 04c8 43617053 		.ascii	"CapSense_SsReleaseResources\000"
 5102      656E7365 
 5102      5F537352 
 5102      656C6561 
 5102      73655265 
 5103              	.LASF6:
 5104 04e4 6C6F6E67 		.ascii	"long long int\000"
 5104      206C6F6E 
 5104      6720696E 
 5104      7400
 5105              	.LASF94:
 5106 04f2 6E756D43 		.ascii	"numCols\000"
 5106      6F6C7300 
 5107              	.LASF172:
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 147


 5108 04fa 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 5108      656E7365 
 5108      5F537343 
 5108      5344496E 
 5108      69746961 
 5109              	.LASF31:
 5110 0513 6F6E4465 		.ascii	"onDebounce\000"
 5110      626F756E 
 5110      636500
 5111              	.LASF138:
 5112 051e 63616C69 		.ascii	"calibrateStatus\000"
 5112      62726174 
 5112      65537461 
 5112      74757300 
 5113              	.LASF69:
 5114 052e 77646774 		.ascii	"wdgtList\000"
 5114      4C697374 
 5114      00
 5115              	.LASF139:
 5116 0537 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 5116      656E7365 
 5116      5F43616C 
 5116      69627261 
 5116      7465416C 
 5117              	.LASF86:
 5118 0554 70747232 		.ascii	"ptr2SnsFlash\000"
 5118      536E7346 
 5118      6C617368 
 5118      00
 5119              	.LASF97:
 5120 0561 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 5120      656E7365 
 5120      5F464C41 
 5120      53485F53 
 5120      54525543 
 5121              	.LASF111:
 5122 0577 43617053 		.ascii	"CapSense_Scan\000"
 5122      656E7365 
 5122      5F536361 
 5122      6E00
 5123              	.LASF155:
 5124 0585 43617053 		.ascii	"CapSense_dsRam\000"
 5124      656E7365 
 5124      5F647352 
 5124      616D00
 5125              	.LASF74:
 5126 0594 736E7254 		.ascii	"snrTestRawCount\000"
 5126      65737452 
 5126      6177436F 
 5126      756E7400 
 5127              	.LASF29:
 5128 05a4 6E4E6F69 		.ascii	"nNoiseTh\000"
 5128      73655468 
 5128      00
 5129              	.LASF65:
 5130 05ad 63736430 		.ascii	"csd0Config\000"
 5130      436F6E66 
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 148


 5130      696700
 5131              	.LASF17:
 5132 05b8 63796973 		.ascii	"cyisraddress\000"
 5132      72616464 
 5132      72657373 
 5132      00
 5133              	.LASF37:
 5134 05c5 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 5134      656E7365 
 5134      5F52414D 
 5134      5F57445F 
 5134      42415345 
 5135              	.LASF76:
 5136 05e1 6873696F 		.ascii	"hsiomPtr\000"
 5136      6D507472 
 5136      00
 5137              	.LASF11:
 5138 05ea 75696E74 		.ascii	"uint32\000"
 5138      333200
 5139              	.LASF68:
 5140 05f1 61646341 		.ascii	"adcAzTime\000"
 5140      7A54696D 
 5140      6500
 5141              	.LASF89:
 5142 05fb 70747232 		.ascii	"ptr2FltrHistory\000"
 5142      466C7472 
 5142      48697374 
 5142      6F727900 
 5143              	.LASF164:
 5144 060b 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 5144      656E7365 
 5144      5F637572 
 5144      536E7349 
 5144      4F507472 
 5145              	.LASF81:
 5146 0620 6D61736B 		.ascii	"mask\000"
 5146      00
 5147              	.LASF136:
 5148 0625 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 5148      656E7365 
 5148      5F537353 
 5148      6574436C 
 5148      6F636B44 
 5149              	.LASF114:
 5150 0641 77646774 		.ascii	"wdgtIndex\000"
 5150      496E6465 
 5150      7800
 5151              	.LASF141:
 5152 064b 736E7349 		.ascii	"snsIndex\000"
 5152      6E646578 
 5152      00
 5153              	.LASF24:
 5154 0654 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 5154      656E7365 
 5154      5F53454E 
 5154      53455F4D 
 5154      4554484F 
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 149


 5155              	.LASF171:
 5156 0670 43617053 		.ascii	"CapSense_AdcReleaseResources\000"
 5156      656E7365 
 5156      5F416463 
 5156      52656C65 
 5156      61736552 
 5157              	.LASF98:
 5158 068d 6C6F6E67 		.ascii	"long double\000"
 5158      20646F75 
 5158      626C6500 
 5159              	.LASF16:
 5160 0699 72656733 		.ascii	"reg32\000"
 5160      3200
 5161              	.LASF73:
 5162 069f 736E7254 		.ascii	"snrTestScanCounter\000"
 5162      65737453 
 5162      63616E43 
 5162      6F756E74 
 5162      657200
 5163              	.LASF51:
 5164 06b2 636F6E66 		.ascii	"configId\000"
 5164      69674964 
 5164      00
 5165              	.LASF88:
 5166 06bb 70747232 		.ascii	"ptr2SnsRam\000"
 5166      536E7352 
 5166      616D00
 5167              	.LASF59:
 5168 06c6 736E7353 		.ascii	"snsStatus\000"
 5168      74617475 
 5168      7300
 5169              	.LASF130:
 5170 06d0 706F7374 		.ascii	"postScanStatus\000"
 5170      5363616E 
 5170      53746174 
 5170      757300
 5171              	.LASF35:
 5172 06df 736E7343 		.ascii	"snsClkSource\000"
 5172      6C6B536F 
 5172      75726365 
 5172      00
 5173              	.LASF165:
 5174 06ec 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 5174      656E7365 
 5174      5F537343 
 5174      5344456C 
 5174      65637472 
 5175              	.LASF131:
 5176 0709 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 5176      656E7365 
 5176      5F537349 
 5176      7372496E 
 5176      69746961 
 5177              	.LASF2:
 5178 0722 73686F72 		.ascii	"short int\000"
 5178      7420696E 
 5178      7400
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 150


 5179              	.LASF75:
 5180 072c 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 5180      656E7365 
 5180      5F52414D 
 5180      5F535452 
 5180      55435400 
 5181              	.LASF176:
 5182 0740 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 5182      656E7365 
 5182      5F435344 
 5182      44697363 
 5182      6F6E6E65 
 5183              	.LASF4:
 5184 075a 6C6F6E67 		.ascii	"long int\000"
 5184      20696E74 
 5184      00
 5185              	.LASF57:
 5186 0763 77646774 		.ascii	"wdgtEnable\000"
 5186      456E6162 
 5186      6C6500
 5187              	.LASF46:
 5188 076e 64696666 		.ascii	"diff\000"
 5188      00
 5189              	.LASF54:
 5190 0773 74756E65 		.ascii	"tunerCmd\000"
 5190      72436D64 
 5190      00
 5191              	.LASF22:
 5192 077c 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 5192      656E7365 
 5192      5F53454E 
 5192      53455F4D 
 5192      4554484F 
 5193              	.LASF173:
 5194 0798 43617053 		.ascii	"CapSense_ClearAdcChannels\000"
 5194      656E7365 
 5194      5F436C65 
 5194      61724164 
 5194      63436861 
 5195              	.LASF79:
 5196 07b2 70735074 		.ascii	"psPtr\000"
 5196      7200
 5197              	.LASF110:
 5198 07b8 43617053 		.ascii	"CapSense_SetupWidget\000"
 5198      656E7365 
 5198      5F536574 
 5198      75705769 
 5198      64676574 
 5199              	.LASF175:
 5200 07cd 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 5200      656E7365 
 5200      5F435344 
 5200      43616C69 
 5200      62726174 
 5201              	.LASF156:
 5202 07e9 43617053 		.ascii	"CapSense_dsFlash\000"
 5202      656E7365 
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 151


 5202      5F647346 
 5202      6C617368 
 5202      00
 5203              	.LASF58:
 5204 07fa 77646774 		.ascii	"wdgtStatus\000"
 5204      53746174 
 5204      757300
 5205              	.LASF180:
 5206 0805 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 5206      72617465 
 5206      645F536F 
 5206      75726365 
 5206      5C50536F 
 5207              	.LASF170:
 5208 082f 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 5208      656E7365 
 5208      5F435344 
 5208      436F6E6E 
 5208      65637453 
 5209              	.LASF21:
 5210 0846 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 5210      656E7365 
 5210      5F53454E 
 5210      53455F4D 
 5210      4554484F 
 5211              	.LASF162:
 5212 0862 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 5212      656E7365 
 5212      5F637572 
 5212      72656E74 
 5212      53656E73 
 5213              	.LASF181:
 5214 087e 433A5C55 		.ascii	"C:\\Users\\dell\\Documents\\PSoC Creator\\Workspace"
 5214      73657273 
 5214      5C64656C 
 5214      6C5C446F 
 5214      63756D65 
 5215 08ac 30335C44 		.ascii	"03\\Design01.cydsn\000"
 5215      65736967 
 5215      6E30312E 
 5215      63796473 
 5215      6E00
 5216              	.LASF147:
 5217 08be 70727353 		.ascii	"prsSize\000"
 5217      697A6500 
 5218              	.LASF36:
 5219 08c6 73697A65 		.ascii	"sizetype\000"
 5219      74797065 
 5219      00
 5220              	.LASF83:
 5221 08cf 64725368 		.ascii	"drShift\000"
 5221      69667400 
 5222              	.LASF5:
 5223 08d7 6C6F6E67 		.ascii	"long unsigned int\000"
 5223      20756E73 
 5223      69676E65 
 5223      6420696E 
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 152


 5223      7400
 5224              	.LASF144:
 5225 08e9 72657456 		.ascii	"retVal\000"
 5225      616C00
 5226              	.LASF132:
 5227 08f0 61646472 		.ascii	"address\000"
 5227      65737300 
 5228              	.LASF33:
 5229 08f8 69646163 		.ascii	"idacMod\000"
 5229      4D6F6400 
 5230              	.LASF174:
 5231 0900 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 5231      656E7365 
 5231      5F495352 
 5231      5F537461 
 5231      72744578 
 5232              	.LASF90:
 5233 0915 70747232 		.ascii	"ptr2DebounceArr\000"
 5233      4465626F 
 5233      756E6365 
 5233      41727200 
 5234              	.LASF27:
 5235 0925 66696E67 		.ascii	"fingerTh\000"
 5235      65725468 
 5235      00
 5236              	.LASF60:
 5237 092e 61646352 		.ascii	"adcResult\000"
 5237      6573756C 
 5237      7400
 5238              	.LASF45:
 5239 0938 62736C6E 		.ascii	"bslnExt\000"
 5239      45787400 
 5240              	.LASF38:
 5241 0940 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 5241      656E7365 
 5241      5F52414D 
 5241      5F57445F 
 5241      42555454 
 5242              	.LASF15:
 5243 095e 63797374 		.ascii	"cystatus\000"
 5243      61747573 
 5243      00
 5244              	.LASF1:
 5245 0967 756E7369 		.ascii	"unsigned char\000"
 5245      676E6564 
 5245      20636861 
 5245      7200
 5246              	.LASF121:
 5247 0975 43617053 		.ascii	"CapSense_SetPinState\000"
 5247      656E7365 
 5247      5F536574 
 5247      50696E53 
 5247      74617465 
 5248              	.LASF91:
 5249 098a 73746174 		.ascii	"staticConfig\000"
 5249      6963436F 
 5249      6E666967 
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 153


 5249      00
 5250              	.LASF120:
 5251 0997 696F5074 		.ascii	"ioPtr\000"
 5251      7200
 5252              	.LASF87:
 5253 099d 70747232 		.ascii	"ptr2WdgtRam\000"
 5253      57646774 
 5253      52616D00 
 5254              	.LASF18:
 5255 09a9 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 5255      656E7365 
 5255      5F544852 
 5255      4553484F 
 5255      4C445F54 
 5256              	.LASF167:
 5257 09c1 43617053 		.ascii	"CapSense_CSDScan\000"
 5257      656E7365 
 5257      5F435344 
 5257      5363616E 
 5257      00
 5258              	.LASF23:
 5259 09d2 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 5259      656E7365 
 5259      5F53454E 
 5259      53455F4D 
 5259      4554484F 
 5260              	.LASF128:
 5261 09ef 62757379 		.ascii	"busyStatus\000"
 5261      53746174 
 5261      757300
 5262              	.LASF116:
 5263 09fa 73746174 		.ascii	"state\000"
 5263      6500
 5264              	.LASF118:
 5265 0a00 656C7464 		.ascii	"eltdIndex\000"
 5265      496E6465 
 5265      7800
 5266              	.LASF113:
 5267 0a0a 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 5267      656E7365 
 5267      5F536361 
 5267      6E416C6C 
 5267      57696467 
 5268              	.LASF80:
 5269 0a22 6873696F 		.ascii	"hsiomMask\000"
 5269      6D4D6173 
 5269      6B00
 5270              	.LASF63:
 5271 0a2c 61646349 		.ascii	"adcIdac\000"
 5271      64616300 
 5272              	.LASF142:
 5273 0a34 63757253 		.ascii	"curSnsIOPtr\000"
 5273      6E73494F 
 5273      50747200 
 5274              	.LASF34:
 5275 0a40 736E7343 		.ascii	"snsClk\000"
 5275      6C6B00
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 154


 5276              	.LASF42:
 5277 0a47 62746E6C 		.ascii	"btnlock\000"
 5277      6F636B00 
 5278              	.LASF122:
 5279 0a4f 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 5279      656E7365 
 5279      5F537353 
 5279      77697463 
 5279      6853656E 
 5280              	.LASF168:
 5281 0a6c 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5281      74657243 
 5281      72697469 
 5281      63616C53 
 5281      65637469 
 5282              	.LASF161:
 5283 0a83 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 5283      656E7365 
 5283      5F637572 
 5283      52616D53 
 5283      6E735074 
 5284              	.LASF0:
 5285 0a99 7369676E 		.ascii	"signed char\000"
 5285      65642063 
 5285      68617200 
 5286              	.LASF163:
 5287 0aa5 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 5287      656E7365 
 5287      5F736361 
 5287      6E467265 
 5287      71496E64 
 5288              	.LASF44:
 5289 0abc 62736C6E 		.ascii	"bsln\000"
 5289      00
 5290              	.LASF3:
 5291 0ac1 73686F72 		.ascii	"short unsigned int\000"
 5291      7420756E 
 5291      7369676E 
 5291      65642069 
 5291      6E7400
 5292              	.LASF157:
 5293 0ad4 43617053 		.ascii	"CapSense_ioList\000"
 5293      656E7365 
 5293      5F696F4C 
 5293      69737400 
 5294              	.LASF62:
 5295 0ae4 61646353 		.ascii	"adcStatus\000"
 5295      74617475 
 5295      7300
 5296              	.LASF129:
 5297 0aee 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 5297      656E7365 
 5297      5F537350 
 5297      6F737441 
 5297      6C6C5769 
 5298              	.LASF67:
 5299 0b0c 61646352 		.ascii	"adcResolution\000"
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 155


 5299      65736F6C 
 5299      7574696F 
 5299      6E00
 5300              	.LASF106:
 5301 0b1a 6C667372 		.ascii	"lfsrDither\000"
 5301      44697468 
 5301      657200
 5302              	.LASF107:
 5303 0b25 6E657752 		.ascii	"newRegValue\000"
 5303      65675661 
 5303      6C756500 
 5304              	.LASF39:
 5305 0b31 62746E72 		.ascii	"btnro\000"
 5305      6F00
 5306              	.LASF9:
 5307 0b37 75696E74 		.ascii	"uint8\000"
 5307      3800
 5308              	.LASF13:
 5309 0b3d 646F7562 		.ascii	"double\000"
 5309      6C6500
 5310              	.LASF47:
 5311 0b44 6E656742 		.ascii	"negBslnRstCnt\000"
 5311      736C6E52 
 5311      7374436E 
 5311      7400
 5312              	.LASF152:
 5313 0b52 43617053 		.ascii	"CapSense_SsInitialize\000"
 5313      656E7365 
 5313      5F537349 
 5313      6E697469 
 5313      616C697A 
 5314              	.LASF99:
 5315 0b68 736E7343 		.ascii	"snsClkDivider\000"
 5315      6C6B4469 
 5315      76696465 
 5315      7200
 5316              	.LASF148:
 5317 0b76 6D6F6443 		.ascii	"modClkDivider\000"
 5317      6C6B4469 
 5317      76696465 
 5317      7200
 5318              	.LASF52:
 5319 0b84 64657669 		.ascii	"deviceId\000"
 5319      63654964 
 5319      00
 5320              	.LASF109:
 5321 0b8d 77696467 		.ascii	"widgetStatus\000"
 5321      65745374 
 5321      61747573 
 5321      00
 5322              	.LASF108:
 5323 0b9a 77696467 		.ascii	"widgetId\000"
 5323      65744964 
 5323      00
 5324              	.LASF160:
 5325 0ba3 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 5325      656E7365 
ARM GAS  C:\Users\dell\AppData\Local\Temp\ccu9m7aD.s 			page 156


 5325      5F726571 
 5325      75657374 
 5325      5363616E 
 5326              	.LASF151:
 5327 0bc1 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 5327      656E7365 
 5327      5F537349 
 5327      6E697469 
 5327      616C697A 
 5328              	.LASF50:
 5329 0be5 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 5329      656E7365 
 5329      5F52414D 
 5329      5F534E53 
 5329      5F4C4953 
 5330              	.LASF61:
 5331 0c02 61646343 		.ascii	"adcCode\000"
 5331      6F646500 
 5332              	.LASF96:
 5333 0c0a 77646774 		.ascii	"wdgtArray\000"
 5333      41727261 
 5333      7900
 5334              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
